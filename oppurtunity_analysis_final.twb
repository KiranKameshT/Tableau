<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Name Parameter]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range max='5' min='1' />
      </column>
    </datasource>
    <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' inline='true' name='federated.1jfuphj0vrlnvw180edyo0le9y13' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Worksheet in F  TIGER ANALYTICS Food_services' name='excel-direct.097z19y17vec7b189wqdf1a4z6al'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/TIGER ANALYTICS/Worksheet in F  TIGER ANALYTICS Food_services.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Restaurant Spends and Share].[ZIP]' />
              <expression op='[Retail Stores].[ZIP]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Restaurant Spends and Share].[ZIP]' />
                <expression op='[Non Commercial].[ZIP]' />
              </expression>
            </clause>
            <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Restaurant Spends and Share' table='[&apos;Restaurant Spends and Share$&apos;]' type='table'>
              <columns gridOrigin='A1:Y1000:no:A1:Y1000:0' header='yes' outcome='2'>
                <column datatype='string' name='NAME' ordinal='0' />
                <column datatype='string' name='CITY' ordinal='1' />
                <column datatype='string' name='STATE' ordinal='2' />
                <column datatype='string' name='ZIP' ordinal='3' />
                <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
                <column datatype='string' name='COUNTY_CODE' ordinal='5' />
                <column datatype='string' name='COUNTY_NAME' ordinal='6' />
                <column datatype='string' name='MSA' ordinal='7' />
                <column datatype='string' name='MARKET_SEGMENT' ordinal='8' />
                <column datatype='string' name='SIMPLIFIED_MENU' ordinal='9' />
                <column datatype='string' name='MENU_TYPE' ordinal='10' />
                <column datatype='string' name='UNITS' ordinal='11' />
                <column datatype='string' name='EMPLOYEES' ordinal='12' />
                <column datatype='string' name='YEARS_IN_BUSINESS' ordinal='13' />
                <column datatype='string' name='ANNUAL_SALES' ordinal='14' />
                <column datatype='string' name='AVERAGE_CHECK' ordinal='15' />
                <column datatype='string' name='NUMBER_OF_ROOMS' ordinal='16' />
                <column datatype='real' name='FOOD_BEVERAGE_PURCHASE' ordinal='17' />
                <column datatype='real' name='FOOD_PURCHASE' ordinal='18' />
                <column datatype='real' name='BEVERAGE_PURCHASE' ordinal='19' />
                <column datatype='real' name='TOTAL_CATEGORY_DRY' ordinal='20' />
                <column datatype='real' name='TOTAL_CATEGORY_FRESH' ordinal='21' />
                <column datatype='real' name='TOTAL_CATEGORY_FROZEN' ordinal='22' />
                <column datatype='real' name='TOTAL_CATEGORY_PROTEIN' ordinal='23' />
                <column datatype='real' name='% Share of F&amp;B Purchases from Company' ordinal='24' />
              </columns>
            </relation>
            <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Non Commercial' table='[&apos;Non Commercial$&apos;]' type='table'>
              <columns gridOrigin='A1:U1001:no:A1:U1001:0' header='yes' outcome='2'>
                <column datatype='string' name='NAME' ordinal='0' />
                <column datatype='string' name='ADDRESS' ordinal='1' />
                <column datatype='string' name='CITY' ordinal='2' />
                <column datatype='string' name='STATE' ordinal='3' />
                <column datatype='string' name='ZIP' ordinal='4' />
                <column datatype='string' name='ZIP_PLUS4' ordinal='5' />
                <column datatype='string' name='COUNTY_CODE' ordinal='6' />
                <column datatype='string' name='COUNTY_NAME' ordinal='7' />
                <column datatype='string' name='MSA' ordinal='8' />
                <column datatype='string' name='MARKET_SEGMENT' ordinal='9' />
                <column datatype='string' name='EMPLOYEES_NON_COMMERCIAL' ordinal='10' />
                <column datatype='string' name='ENROLLMENT_RANGE' ordinal='11' />
                <column datatype='string' name='CAPACITY_BEDS_RANGE' ordinal='12' />
                <column datatype='string' name='NUMBER_OF_SCHOOLS_RANGE' ordinal='13' />
                <column datatype='string' name='OPERATION_TYPE' ordinal='14' />
                <column datatype='string' name='OWNERSHIP_TYPE' ordinal='15' />
                <column datatype='string' name='NUMBER_OF_MEALS_PER_DAY_RANGE' ordinal='16' />
                <column datatype='string' name='AVERAGE_DAILY_CENSUS' ordinal='17' />
                <column datatype='string' name='PRIMARY_GPO' ordinal='18' />
                <column datatype='string' name='SECONDARY_GPO' ordinal='19' />
                <column datatype='string' name='TOTAL_PATIENT_DAYS' ordinal='20' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Retail Stores' table='[&apos;Retail Stores$&apos;]' type='table'>
            <columns gridOrigin='A1:M1002:no:A1:M1002:0' header='yes' outcome='2'>
              <column datatype='string' name='NAME' ordinal='0' />
              <column datatype='string' name='CITY' ordinal='1' />
              <column datatype='string' name='STATE' ordinal='2' />
              <column datatype='string' name='ZIP' ordinal='3' />
              <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
              <column datatype='string' name='COUNTY_CODE' ordinal='5' />
              <column datatype='string' name='COUNTY_NAME' ordinal='6' />
              <column datatype='string' name='MSA' ordinal='7' />
              <column datatype='string' name='market_segment2' ordinal='8' />
              <column datatype='string' name='units' ordinal='9' />
              <column datatype='string' name='EMPLOYEES' ordinal='10' />
              <column datatype='string' name='years_in_business' ordinal='11' />
              <column datatype='string' name='annual_sales' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Restaurant Spends and Share].[ZIP]' />
              <expression op='[Retail Stores].[ZIP]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Restaurant Spends and Share].[ZIP]' />
                <expression op='[Non Commercial].[ZIP]' />
              </expression>
            </clause>
            <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Restaurant Spends and Share' table='[&apos;Restaurant Spends and Share$&apos;]' type='table'>
              <columns gridOrigin='A1:Y1000:no:A1:Y1000:0' header='yes' outcome='2'>
                <column datatype='string' name='NAME' ordinal='0' />
                <column datatype='string' name='CITY' ordinal='1' />
                <column datatype='string' name='STATE' ordinal='2' />
                <column datatype='string' name='ZIP' ordinal='3' />
                <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
                <column datatype='string' name='COUNTY_CODE' ordinal='5' />
                <column datatype='string' name='COUNTY_NAME' ordinal='6' />
                <column datatype='string' name='MSA' ordinal='7' />
                <column datatype='string' name='MARKET_SEGMENT' ordinal='8' />
                <column datatype='string' name='SIMPLIFIED_MENU' ordinal='9' />
                <column datatype='string' name='MENU_TYPE' ordinal='10' />
                <column datatype='string' name='UNITS' ordinal='11' />
                <column datatype='string' name='EMPLOYEES' ordinal='12' />
                <column datatype='string' name='YEARS_IN_BUSINESS' ordinal='13' />
                <column datatype='string' name='ANNUAL_SALES' ordinal='14' />
                <column datatype='string' name='AVERAGE_CHECK' ordinal='15' />
                <column datatype='string' name='NUMBER_OF_ROOMS' ordinal='16' />
                <column datatype='real' name='FOOD_BEVERAGE_PURCHASE' ordinal='17' />
                <column datatype='real' name='FOOD_PURCHASE' ordinal='18' />
                <column datatype='real' name='BEVERAGE_PURCHASE' ordinal='19' />
                <column datatype='real' name='TOTAL_CATEGORY_DRY' ordinal='20' />
                <column datatype='real' name='TOTAL_CATEGORY_FRESH' ordinal='21' />
                <column datatype='real' name='TOTAL_CATEGORY_FROZEN' ordinal='22' />
                <column datatype='real' name='TOTAL_CATEGORY_PROTEIN' ordinal='23' />
                <column datatype='real' name='% Share of F&amp;B Purchases from Company' ordinal='24' />
              </columns>
            </relation>
            <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Non Commercial' table='[&apos;Non Commercial$&apos;]' type='table'>
              <columns gridOrigin='A1:U1001:no:A1:U1001:0' header='yes' outcome='2'>
                <column datatype='string' name='NAME' ordinal='0' />
                <column datatype='string' name='ADDRESS' ordinal='1' />
                <column datatype='string' name='CITY' ordinal='2' />
                <column datatype='string' name='STATE' ordinal='3' />
                <column datatype='string' name='ZIP' ordinal='4' />
                <column datatype='string' name='ZIP_PLUS4' ordinal='5' />
                <column datatype='string' name='COUNTY_CODE' ordinal='6' />
                <column datatype='string' name='COUNTY_NAME' ordinal='7' />
                <column datatype='string' name='MSA' ordinal='8' />
                <column datatype='string' name='MARKET_SEGMENT' ordinal='9' />
                <column datatype='string' name='EMPLOYEES_NON_COMMERCIAL' ordinal='10' />
                <column datatype='string' name='ENROLLMENT_RANGE' ordinal='11' />
                <column datatype='string' name='CAPACITY_BEDS_RANGE' ordinal='12' />
                <column datatype='string' name='NUMBER_OF_SCHOOLS_RANGE' ordinal='13' />
                <column datatype='string' name='OPERATION_TYPE' ordinal='14' />
                <column datatype='string' name='OWNERSHIP_TYPE' ordinal='15' />
                <column datatype='string' name='NUMBER_OF_MEALS_PER_DAY_RANGE' ordinal='16' />
                <column datatype='string' name='AVERAGE_DAILY_CENSUS' ordinal='17' />
                <column datatype='string' name='PRIMARY_GPO' ordinal='18' />
                <column datatype='string' name='SECONDARY_GPO' ordinal='19' />
                <column datatype='string' name='TOTAL_PATIENT_DAYS' ordinal='20' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Retail Stores' table='[&apos;Retail Stores$&apos;]' type='table'>
            <columns gridOrigin='A1:M1002:no:A1:M1002:0' header='yes' outcome='2'>
              <column datatype='string' name='NAME' ordinal='0' />
              <column datatype='string' name='CITY' ordinal='1' />
              <column datatype='string' name='STATE' ordinal='2' />
              <column datatype='string' name='ZIP' ordinal='3' />
              <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
              <column datatype='string' name='COUNTY_CODE' ordinal='5' />
              <column datatype='string' name='COUNTY_NAME' ordinal='6' />
              <column datatype='string' name='MSA' ordinal='7' />
              <column datatype='string' name='market_segment2' ordinal='8' />
              <column datatype='string' name='units' ordinal='9' />
              <column datatype='string' name='EMPLOYEES' ordinal='10' />
              <column datatype='string' name='years_in_business' ordinal='11' />
              <column datatype='string' name='annual_sales' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[% Share of F&amp;B Purchases from Company]' value='[Restaurant Spends and Share].[% Share of F&amp;B Purchases from Company]' />
          <map key='[ADDRESS]' value='[Non Commercial].[ADDRESS]' />
          <map key='[ANNUAL_SALES]' value='[Restaurant Spends and Share].[ANNUAL_SALES]' />
          <map key='[AVERAGE_CHECK]' value='[Restaurant Spends and Share].[AVERAGE_CHECK]' />
          <map key='[AVERAGE_DAILY_CENSUS]' value='[Non Commercial].[AVERAGE_DAILY_CENSUS]' />
          <map key='[BEVERAGE_PURCHASE]' value='[Restaurant Spends and Share].[BEVERAGE_PURCHASE]' />
          <map key='[CAPACITY_BEDS_RANGE]' value='[Non Commercial].[CAPACITY_BEDS_RANGE]' />
          <map key='[CITY (Non Commercial)]' value='[Non Commercial].[CITY]' />
          <map key='[CITY (Retail Stores)]' value='[Retail Stores].[CITY]' />
          <map key='[CITY]' value='[Restaurant Spends and Share].[CITY]' />
          <map key='[COUNTY_CODE (Non Commercial)]' value='[Non Commercial].[COUNTY_CODE]' />
          <map key='[COUNTY_CODE (Retail Stores)]' value='[Retail Stores].[COUNTY_CODE]' />
          <map key='[COUNTY_CODE]' value='[Restaurant Spends and Share].[COUNTY_CODE]' />
          <map key='[COUNTY_NAME (Non Commercial)]' value='[Non Commercial].[COUNTY_NAME]' />
          <map key='[COUNTY_NAME (Retail Stores)]' value='[Retail Stores].[COUNTY_NAME]' />
          <map key='[COUNTY_NAME]' value='[Restaurant Spends and Share].[COUNTY_NAME]' />
          <map key='[EMPLOYEES (Retail Stores)]' value='[Retail Stores].[EMPLOYEES]' />
          <map key='[EMPLOYEES]' value='[Restaurant Spends and Share].[EMPLOYEES]' />
          <map key='[EMPLOYEES_NON_COMMERCIAL]' value='[Non Commercial].[EMPLOYEES_NON_COMMERCIAL]' />
          <map key='[ENROLLMENT_RANGE]' value='[Non Commercial].[ENROLLMENT_RANGE]' />
          <map key='[FOOD_BEVERAGE_PURCHASE]' value='[Restaurant Spends and Share].[FOOD_BEVERAGE_PURCHASE]' />
          <map key='[FOOD_PURCHASE]' value='[Restaurant Spends and Share].[FOOD_PURCHASE]' />
          <map key='[MARKET_SEGMENT (Non Commercial)]' value='[Non Commercial].[MARKET_SEGMENT]' />
          <map key='[MARKET_SEGMENT]' value='[Restaurant Spends and Share].[MARKET_SEGMENT]' />
          <map key='[MENU_TYPE]' value='[Restaurant Spends and Share].[MENU_TYPE]' />
          <map key='[MSA (Non Commercial)]' value='[Non Commercial].[MSA]' />
          <map key='[MSA (Retail Stores)]' value='[Retail Stores].[MSA]' />
          <map key='[MSA]' value='[Restaurant Spends and Share].[MSA]' />
          <map key='[NAME (Non Commercial)]' value='[Non Commercial].[NAME]' />
          <map key='[NAME (Retail Stores)]' value='[Retail Stores].[NAME]' />
          <map key='[NAME]' value='[Restaurant Spends and Share].[NAME]' />
          <map key='[NUMBER_OF_MEALS_PER_DAY_RANGE]' value='[Non Commercial].[NUMBER_OF_MEALS_PER_DAY_RANGE]' />
          <map key='[NUMBER_OF_ROOMS]' value='[Restaurant Spends and Share].[NUMBER_OF_ROOMS]' />
          <map key='[NUMBER_OF_SCHOOLS_RANGE]' value='[Non Commercial].[NUMBER_OF_SCHOOLS_RANGE]' />
          <map key='[OPERATION_TYPE]' value='[Non Commercial].[OPERATION_TYPE]' />
          <map key='[OWNERSHIP_TYPE]' value='[Non Commercial].[OWNERSHIP_TYPE]' />
          <map key='[PRIMARY_GPO]' value='[Non Commercial].[PRIMARY_GPO]' />
          <map key='[SECONDARY_GPO]' value='[Non Commercial].[SECONDARY_GPO]' />
          <map key='[SIMPLIFIED_MENU]' value='[Restaurant Spends and Share].[SIMPLIFIED_MENU]' />
          <map key='[STATE (Non Commercial)]' value='[Non Commercial].[STATE]' />
          <map key='[STATE (Retail Stores)]' value='[Retail Stores].[STATE]' />
          <map key='[STATE]' value='[Restaurant Spends and Share].[STATE]' />
          <map key='[TOTAL_CATEGORY_DRY]' value='[Restaurant Spends and Share].[TOTAL_CATEGORY_DRY]' />
          <map key='[TOTAL_CATEGORY_FRESH]' value='[Restaurant Spends and Share].[TOTAL_CATEGORY_FRESH]' />
          <map key='[TOTAL_CATEGORY_FROZEN]' value='[Restaurant Spends and Share].[TOTAL_CATEGORY_FROZEN]' />
          <map key='[TOTAL_CATEGORY_PROTEIN]' value='[Restaurant Spends and Share].[TOTAL_CATEGORY_PROTEIN]' />
          <map key='[TOTAL_PATIENT_DAYS]' value='[Non Commercial].[TOTAL_PATIENT_DAYS]' />
          <map key='[UNITS]' value='[Restaurant Spends and Share].[UNITS]' />
          <map key='[YEARS_IN_BUSINESS]' value='[Restaurant Spends and Share].[YEARS_IN_BUSINESS]' />
          <map key='[ZIP (Non Commercial)]' value='[Non Commercial].[ZIP]' />
          <map key='[ZIP (Retail Stores)]' value='[Retail Stores].[ZIP]' />
          <map key='[ZIP]' value='[Restaurant Spends and Share].[ZIP]' />
          <map key='[ZIP_PLUS4 (Non Commercial)]' value='[Non Commercial].[ZIP_PLUS4]' />
          <map key='[ZIP_PLUS4 (Retail Stores)]' value='[Retail Stores].[ZIP_PLUS4]' />
          <map key='[ZIP_PLUS4]' value='[Restaurant Spends and Share].[ZIP_PLUS4]' />
          <map key='[annual_sales]' value='[Retail Stores].[annual_sales]' />
          <map key='[market_segment2]' value='[Retail Stores].[market_segment2]' />
          <map key='[units]' value='[Retail Stores].[units]' />
          <map key='[years_in_business]' value='[Retail Stores].[years_in_business]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y1000:no:A1:Y1000:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1001:no:A1:U1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M1002:no:A1:M1002:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_PLUS4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP_PLUS4]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>ZIP_PLUS4</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_CODE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>COUNTY_CODE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSA</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MSA]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>MSA</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MARKET_SEGMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MARKET_SEGMENT]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>MARKET_SEGMENT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SIMPLIFIED_MENU</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SIMPLIFIED_MENU]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>SIMPLIFIED_MENU</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MENU_TYPE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MENU_TYPE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>MENU_TYPE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNITS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNITS]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>UNITS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYEES</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYEES]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>EMPLOYEES</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEARS_IN_BUSINESS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[YEARS_IN_BUSINESS]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>YEARS_IN_BUSINESS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANNUAL_SALES</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ANNUAL_SALES]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>ANNUAL_SALES</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_CHECK</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AVERAGE_CHECK]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>AVERAGE_CHECK</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER_OF_ROOMS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NUMBER_OF_ROOMS]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>NUMBER_OF_ROOMS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOOD_BEVERAGE_PURCHASE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FOOD_BEVERAGE_PURCHASE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>FOOD_BEVERAGE_PURCHASE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOOD_PURCHASE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FOOD_PURCHASE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>FOOD_PURCHASE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BEVERAGE_PURCHASE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BEVERAGE_PURCHASE]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>BEVERAGE_PURCHASE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CATEGORY_DRY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_CATEGORY_DRY]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>TOTAL_CATEGORY_DRY</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CATEGORY_FRESH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_CATEGORY_FRESH]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>TOTAL_CATEGORY_FRESH</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CATEGORY_FROZEN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_CATEGORY_FROZEN]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>TOTAL_CATEGORY_FROZEN</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CATEGORY_PROTEIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_CATEGORY_PROTEIN]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>TOTAL_CATEGORY_PROTEIN</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Share of F&amp;B Purchases from Company</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Share of F&amp;B Purchases from Company]</local-name>
            <parent-name>[Restaurant Spends and Share]</parent-name>
            <remote-alias>% Share of F&amp;B Purchases from Company</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_PLUS4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP_PLUS4 (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>ZIP_PLUS4</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_CODE (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>COUNTY_CODE</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_NAME (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSA</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MSA (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>MSA</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MARKET_SEGMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MARKET_SEGMENT (Non Commercial)]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>MARKET_SEGMENT</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYEES_NON_COMMERCIAL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYEES_NON_COMMERCIAL]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>EMPLOYEES_NON_COMMERCIAL</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ENROLLMENT_RANGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ENROLLMENT_RANGE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>ENROLLMENT_RANGE</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CAPACITY_BEDS_RANGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CAPACITY_BEDS_RANGE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>CAPACITY_BEDS_RANGE</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER_OF_SCHOOLS_RANGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NUMBER_OF_SCHOOLS_RANGE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>NUMBER_OF_SCHOOLS_RANGE</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPERATION_TYPE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OPERATION_TYPE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>OPERATION_TYPE</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OWNERSHIP_TYPE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OWNERSHIP_TYPE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>OWNERSHIP_TYPE</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER_OF_MEALS_PER_DAY_RANGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NUMBER_OF_MEALS_PER_DAY_RANGE]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>NUMBER_OF_MEALS_PER_DAY_RANGE</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_DAILY_CENSUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AVERAGE_DAILY_CENSUS]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>AVERAGE_DAILY_CENSUS</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRIMARY_GPO</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PRIMARY_GPO]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>PRIMARY_GPO</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECONDARY_GPO</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SECONDARY_GPO]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>SECONDARY_GPO</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_PATIENT_DAYS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TOTAL_PATIENT_DAYS]</local-name>
            <parent-name>[Non Commercial]</parent-name>
            <remote-alias>TOTAL_PATIENT_DAYS</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_PLUS4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP_PLUS4 (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>ZIP_PLUS4</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_CODE (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>COUNTY_CODE</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_NAME (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSA</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MSA (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>MSA</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_segment2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_segment2]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>market_segment2</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[units]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>units</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYEES</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYEES (Retail Stores)]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>EMPLOYEES</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years_in_business</remote-name>
            <remote-type>130</remote-type>
            <local-name>[years_in_business]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>years_in_business</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annual_sales</remote-name>
            <remote-type>130</remote-type>
            <local-name>[annual_sales]</local-name>
            <parent-name>[Retail Stores]</parent-name>
            <remote-alias>annual_sales</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
      <column caption='Average Check' datatype='string' name='[AVERAGE_CHECK]' role='dimension' type='nominal' />
      <column caption='Average Daily Census' datatype='string' name='[AVERAGE_DAILY_CENSUS]' role='dimension' type='nominal' />
      <column caption='Beverage Purchase' datatype='real' name='[BEVERAGE_PURCHASE]' role='measure' type='quantitative' />
      <column caption='Capacity Beds Range' datatype='string' name='[CAPACITY_BEDS_RANGE]' role='dimension' type='nominal' />
      <column datatype='string' name='[CITY (Non Commercial)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[CITY (Retail Stores)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='COUNTY CODE (Non Commercial)' datatype='string' name='[COUNTY_CODE (Non Commercial)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='COUNTY CODE (Retail Stores)' datatype='string' name='[COUNTY_CODE (Retail Stores)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Code' datatype='string' name='[COUNTY_CODE]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='COUNTY NAME (Non Commercial)' datatype='string' name='[COUNTY_NAME (Non Commercial)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='COUNTY NAME (Retail Stores)' datatype='string' name='[COUNTY_NAME (Retail Stores)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Number of restaurants' datatype='integer' name='[Calculation_2442358431622553600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([NAME])' />
      </column>
      <column caption='Employees' datatype='string' name='[EMPLOYEES]' role='dimension' type='nominal' />
      <column caption='Employees Non Commercial' datatype='string' name='[EMPLOYEES_NON_COMMERCIAL]' role='dimension' type='nominal' />
      <column caption='Enrollment Range' datatype='string' name='[ENROLLMENT_RANGE]' role='dimension' type='nominal' />
      <column caption='Food Beverage Purchase' datatype='real' name='[FOOD_BEVERAGE_PURCHASE]' role='measure' type='quantitative' />
      <column caption='Food Purchase' datatype='real' name='[FOOD_PURCHASE]' role='measure' type='quantitative' />
      <column caption='MARKET SEGMENT (Non Commercial)' datatype='string' name='[MARKET_SEGMENT (Non Commercial)]' role='dimension' type='nominal' />
      <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
      <column caption='Menu Type' datatype='string' name='[MENU_TYPE]' role='dimension' type='nominal' />
      <column datatype='string' name='[MSA]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
      <column datatype='string' name='[NAME (Non Commercial)]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column caption='Number Of Meals Per Day Range' datatype='string' name='[NUMBER_OF_MEALS_PER_DAY_RANGE]' role='dimension' type='nominal' />
      <column caption='Number Of Rooms' datatype='string' name='[NUMBER_OF_ROOMS]' role='dimension' type='nominal' />
      <column caption='Number Of Schools Range' datatype='string' name='[NUMBER_OF_SCHOOLS_RANGE]' role='dimension' type='nominal' />
      <column caption='Operation Type' datatype='string' name='[OPERATION_TYPE]' role='dimension' type='nominal' />
      <column caption='Ownership Type' datatype='string' name='[OWNERSHIP_TYPE]' role='dimension' type='nominal' />
      <column caption='Primary Gpo' datatype='string' name='[PRIMARY_GPO]' role='dimension' type='nominal' />
      <column caption='Secondary Gpo' datatype='string' name='[SECONDARY_GPO]' role='dimension' type='nominal' />
      <column caption='Simplified Menu' datatype='string' name='[SIMPLIFIED_MENU]' role='dimension' type='nominal' />
      <column datatype='string' name='[STATE (Non Commercial)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[STATE (Retail Stores)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Category Dry' datatype='real' name='[TOTAL_CATEGORY_DRY]' role='measure' type='quantitative' />
      <column caption='Total Category Fresh' datatype='real' name='[TOTAL_CATEGORY_FRESH]' role='measure' type='quantitative' />
      <column caption='Total Category Frozen' datatype='real' name='[TOTAL_CATEGORY_FROZEN]' role='measure' type='quantitative' />
      <column caption='Total Category Protein' datatype='real' name='[TOTAL_CATEGORY_PROTEIN]' role='measure' type='quantitative' />
      <column caption='Total Patient Days' datatype='string' name='[TOTAL_PATIENT_DAYS]' role='dimension' type='nominal' />
      <column caption='Units' datatype='string' name='[UNITS]' role='dimension' type='nominal' />
      <column caption='Years In Business' datatype='string' name='[YEARS_IN_BUSINESS]' role='dimension' type='nominal' />
      <column datatype='string' name='[ZIP (Non Commercial)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[ZIP (Retail Stores)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='ZIP PLUS4 (Non Commercial)' datatype='string' name='[ZIP_PLUS4 (Non Commercial)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='ZIP PLUS4 (Retail Stores)' datatype='string' name='[ZIP_PLUS4 (Retail Stores)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Zip Plus4' datatype='string' name='[ZIP_PLUS4]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Restaurant Spends and Share' datatype='table' name='[__tableau_internal_object_id__].[Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033]' role='measure' type='quantitative' />
      <column caption='Annual Sales1' datatype='string' name='[annual_sales]' role='dimension' type='nominal' />
      <column caption='Market Segment2' datatype='string' name='[market_segment2]' role='dimension' type='nominal' />
      <column caption='Units1' datatype='string' name='[units]' role='dimension' type='nominal' />
      <column caption='Years In Business1' datatype='string' name='[years_in_business]' role='dimension' type='nominal' />
      <column-instance column='[Name Set]' derivation='InOut' name='[io:Name Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[ANNUAL_SALES]' derivation='None' name='[none:ANNUAL_SALES:nk]' pivot='key' type='nominal' />
      <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE (Non Commercial)]' derivation='None' name='[none:STATE (Non Commercial):nk]' pivot='key' type='nominal' />
      <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
      <group caption='Action (Annual Sales,Market Segment)' hidden='true' name='[Action (Annual Sales,Market Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ANNUAL_SALES]' />
          <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CITY]' />
        </groupfilter>
      </group>
      <group caption='Action (MARKET SEGMENT (Non Commercial),Name,STATE (Non Commercial),ZIP (Non Commercial))' hidden='true' name='[Action (MARKET SEGMENT (Non Commercial),Name,STATE (Non Commercial),ZIP (Non Commercial))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[MARKET_SEGMENT (Non Commercial)]' />
          <groupfilter function='level-members' level='[NAME]' />
          <groupfilter function='level-members' level='[STATE (Non Commercial)]' />
          <groupfilter function='level-members' level='[ZIP (Non Commercial)]' />
        </groupfilter>
      </group>
      <group caption='Action (Market Segment)' hidden='true' name='[Action (Market Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
        </groupfilter>
      </group>
      <group caption='Action (Market Segment,NAME (Non Commercial),Name,ZIP)' hidden='true' name='[Action (Market Segment,NAME (Non Commercial),Name,ZIP)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
          <groupfilter function='level-members' level='[NAME (Non Commercial)]' />
          <groupfilter function='level-members' level='[NAME]' />
          <groupfilter function='level-members' level='[ZIP]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Name Set' name='[Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Name Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([% Share of F&amp;B Purchases from Company])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[NAME]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='No ties Set ' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[MENU_TYPE]' member='&quot;NOT APPLICABLE&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;1* HOTELS WITHOUT RESTAURANT-ECONOMY&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;2* HOTELS WITHOUT RESTAURANT-MIDSCALE&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;3* HOTELS WITHOUT RESTAURANT-UPSCALE&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;4* HOTELS WITH RESTAURANT-UPPER SCALE&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;4* HOTELS WITHOUT RESTAURANT-UPPER SCALE&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;BED &amp; BREAKFAST, GUESTHOUSES, CHAMBRES D&apos;HOTES&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;BREWPUBS, ENGLISH AND IRISH PUBS, MICRO-BREWERY, WITH LIMITED FOOD&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;CAMPING, RV PARKS, CAMPGROUNDS&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;NEIGHBORHOOD BARS &amp; TAVERNS&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;NIGHTLIFE VENUES&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;RESORTS&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;SPORTS BARS&quot;' />
                <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;UNCODED HOTELS &amp; MOTELS WITHOUT RESTAURANT&quot;' />
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[MENU_TYPE]' member='&quot;VARIED MENU&quot;' />
              <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;EVENT CATERING, PARTY SERVICE&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[MENU_TYPE]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Imperial Buffer sales' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;LSR - BUFFET RESTAURANTS&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;IMPERIAL BUFFET&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01545&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;COOLIDGE ELEMENTARY SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;FLORAL STREET SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;MULBERRY CHILD CARE AND PRESCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHERWOOD MIDDLE SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY CHILDRENS CENTER INC&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY NURSING AND REHAB CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY PUBLIC SCHOOLS&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Imperial buffet set' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;LSR - BUFFET RESTAURANTS&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;IMPERIAL BUFFET&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01545&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;COOLIDGE ELEMENTARY SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;FLORAL STREET SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;MULBERRY CHILD CARE AND PRESCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHERWOOD MIDDLE SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY CHILDRENS CENTER INC&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY NURSING AND REHAB CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SHREWSBURY PUBLIC SCHOOLS&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Jimbos set' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;FSR - UPSCALE CASUAL DINING RESTAURANTS&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;JIMBOS FAMOUS ROAST BEEF &amp; SEAFOOD&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01876&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;BLAIRE HOUSE OF TEWKSBURY&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;JOHN F RYAN ELEMENTARY SCHOOL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;KNOWLEDGE BEGINNINGS-TEWKSBURY&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;MIDDLESEX DUIL PROGRAM-SBSTNC ABUSE PRGM&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SENIOR CITIZEN CENTER-TEWKSBURY&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;TEWKSBURY HOSPITAL&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='kyoto set' name='[Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;FSR - TRADITIONAL RESTAURANTS, CASUAL DINING&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;KYOTO JAPANESE RESTAURANT&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01605&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;ADCARE HOSPITAL OF WORCESTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;AUTUMN VILLAGE&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;CHRISTOPHER HOUSE OF WORCESTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;GREAT BROOK VALLEY HEALTH CENTER-AODA&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;H L WILLIS STARTING POINT RSDNTL TRTMNT&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;KEY PROGRAM&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;LINDA FAY GRIFFIN HOUSE-SBSTNC ABUSE SVC&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;NOTRE DAME LONG TERM CARE CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SPECTRUM HEALTH SYS OTPTNT SVCS-AODA&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;UMASS MEMORIAL MEDICAL CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;UNIV OF MASSACHUSETTS MEM REHABILITATION&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;WINTER HILL REST HOME&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;WORCESTER TECHNICAL HIGH SCHOOL&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Morning glory set' name='[Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;LSR - COFFEE SHOPS, TEA HOUSES&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;MORNING GLORYCOFFEE SHOP&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01930&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;ADDISON GILBERT HOSPITAL&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;DAY BY DAY ADULT DAY CARE&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;GLOUCESTER PUBLIC SCHOOL DISTRICT&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;GOLDEN LIVING CENTER-GLOUCESTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;MOORES WAY-SUBSTANCE ABUSE SERVICES&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PATHWAY FOR CHILDREN-YOUNG FAMILY&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;SEACOAST NURSING CENTER REHAB&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='QDOBA set' name='[Set 7]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;LSR - QUICK CASUAL&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME]' member='&quot;QDOBA MEXICAN GRILL&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ZIP]' member='&quot;01960&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;CATHOLIC CHARITIES-PEABODY CHILDCARE&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;INN TRANSITION-SUBSTANCE ABUSE TREATMENT&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;KINDRED HOSPITAL-BOSTON NORTH SHORE&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PEABODY GLEN HEALTH CARE CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PEABODY KINDERCARE LEARNING CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PEABODY PUBLIC SCHOOL DISTRICT&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PETER A TORIGIAN COMM LIFE-SENIOR CTR&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;PILGRIM REHAB-SKILLED NURSING FACILITY&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;RAINBOW NURSING CENTER&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;RENAISSANCE GARDENS AT BROOKSBY VILLAGE&quot;' />
                  <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;ROSEWOOD NURSING-REHABILITATION CENTER&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Tomacchios set' name='[Set 8]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[MARKET_SEGMENT]' member='&quot;FSR - TRADITIONAL RESTAURANTS, CASUAL DINING&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[NAME (Non Commercial)]' member='&quot;HANNAH DUSTON HEALTHCARE CENTER&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[NAME]' member='&quot;TOMACCHIOS PIZZA &amp; SUBS&quot;' />
                <groupfilter function='member' level='[ZIP]' member='&quot;01832&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[MARKET_SEGMENT]' />
            <hierarchy name='[NAME]' />
            <hierarchy name='[NAME (Non Commercial)]' />
            <hierarchy name='[ZIP]' />
          </order>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[STATE]</field>
          <field>[CITY]</field>
          <field>[COUNTY_NAME]</field>
          <field>[ZIP]</field>
          <field>[COUNTY_CODE]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ZIP:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;01945&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;04330&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10065&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11552&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;13126&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;15237&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;17110&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19607&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20712&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;21921&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;23221&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;24540&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27406&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28110&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29112&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;30024&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31206&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;32746&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33351&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33770&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;36330&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;38771&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;43551&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46825&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48858&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;53144&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;55802&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;60137&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;61611&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;66061&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;70816&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;75023&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;75935&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;77450&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;78748&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;81501&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;85123&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;88011&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;90706&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;91791&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;92704&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;94087&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;94941&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;95562&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;97219&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;99156&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;01001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;02657&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;07675&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11218&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12203&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;14564&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;16428&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19151&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;20011&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21215&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;22802&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23517&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27104&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27613&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28602&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;29607&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;30318&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;32404&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33603&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34667&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;37407&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;42240&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;45249&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;48128&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;50320&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;55104&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;59901&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;60617&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;63141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;68128&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;73118&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;75202&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;77036&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;78418&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;80112&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;83860&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;86001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;90028&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;91403&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;92394&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;93304&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;94577&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;95356&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;96817&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;98122&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;01605&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;03031&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08360&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11367&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12485&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;17011&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18706&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19464&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20166&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21234&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;22980&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;23834&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27284&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27870&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28803&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;29625&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31029&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;32550&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33308&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33617&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35405&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;38002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;43215&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46016&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;48341&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;52556&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;55401&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;60062&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;60644&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;64151&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;70360&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;75001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;75604&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;77338&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;78703&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;80304&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;84663&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;87123&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;90245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;91752&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;92612&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;93552&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;94611&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;95403&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;97204&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;98466&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;02128&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;06770&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10522&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11590&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13473&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;15557&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;17584&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19106&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19801&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;20852&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;22134&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;23321&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25414&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27549&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28226&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;29401&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30060&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31909&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;32821&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33405&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33928&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37043&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;39564&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;44123&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;47933&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;49099&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;53226&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;56484&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;60402&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;62056&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;66226&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;71457&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;75070&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;76134&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;77840&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;79007&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;83202&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;85236&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;89118&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;90814&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;92078&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;92865&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;94123&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;95023&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;95820&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;97355&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;99611&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;01960&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;06042&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10458&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11566&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;13143&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;15317&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;17201&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19038&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19608&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;20747&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;22015&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;23229&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;24740&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27516&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;29205&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30030&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31730&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;32803&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33401&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33809&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;36425&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;39218&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;43950&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46970&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;48912&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;53202&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;55811&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;60146&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;61761&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;66062&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;71106&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;75034&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;75965&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;77494&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;78749&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;81520&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;85139&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;89101&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;90712&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;92008&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;92801&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;94102&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;94952&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;95603&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;97223&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;99201&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;01832&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;03431&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08817&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11377&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12508&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;15221&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;17026&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18964&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19543&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;20637&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21601&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;23072&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24012&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27320&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27893&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28804&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;29730&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31061&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;32580&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33309&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33624&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;35463&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;38008&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;43231&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46140&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;48386&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;52807&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;55404&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;60064&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;60647&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;65109&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;70466&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;75006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;75654&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;77406&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;78704&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;80501&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;84737&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;87124&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;90260&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;91761&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;92647&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;93561&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;94704&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;95437&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;97210&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;98528&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;02467&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;07205&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11105&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11784&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;14226&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16354&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18041&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19140&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;20002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21076&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;22554&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;23456&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27604&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28444&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;29569&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;30294&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;32303&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33030&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33547&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34653&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37404&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;41011&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;45056&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;48111&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;49686&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;54311&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;59715&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;60606&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;63117&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;68102&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;72956&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;75159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;77010&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;78222&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;79930&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;83852&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;85388&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;90015&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;91340&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;92336&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;93274&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;94558&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;95336&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;96766&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;98115&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;01103&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;02830&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;07856&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11354&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12205&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;14777&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;16503&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18252&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19355&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;20015&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21218&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22903&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;23518&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27105&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27615&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28752&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;29609&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30345&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;32456&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33169&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33605&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34689&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;37615&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42420&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;45440&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;48160&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;51031&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;55305&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;60005&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;60636&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63366&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;68154&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;73127&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;75211&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;77080&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;78550&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;80202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;84060&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;86004&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;90036&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;91502&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;92405&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;93308&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;94585&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;95364&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;97008&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;98201&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;02451&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;07054&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10901&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11763&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;14141&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;16201&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17866&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19134&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19940&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;20910&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;22407&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23451&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26330&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27591&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28401&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29492&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;30274&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;32256&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33024&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33449&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34606&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37211&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;40207&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;44646&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;48071&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;49503&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;54024&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;58103&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;60515&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;63020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;67042&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;72758&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75148&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;76543&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;78207&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;79556&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;83706&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;85281&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;90004&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;91303&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;92211&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;93021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;94526&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;95252&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;96740&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;01876&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;03872&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11385&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12563&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;15227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;17048&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18974&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19601&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;20657&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21740&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;23150&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24219&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27332&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28025&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29010&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29910&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31082&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;32707&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33323&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33713&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;35906&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38111&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;43302&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;46237&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;48420&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;53074&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;55413&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;60074&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;60657&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;65610&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;70592&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;75010&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;75708&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;77418&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;78723&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;80631&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;85041&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;87505&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;90303&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;91763&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;92683&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;93727&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;94901&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;95476&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;97211&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;98672&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;02151&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;07003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10541&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11704&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;13501&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;15601&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;17701&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19107&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19802&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;20874&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;22180&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23322&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25550&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27560&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28269&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29418&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;30161&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;32034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;32825&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33410&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;37075&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;39648&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;44240&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;47960&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;49254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;53405&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;56623&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;60430&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;62223&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;66441&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;72113&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;75071&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;76180&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;77904&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;79109&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;83221&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;85249&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;89123&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;91104&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;92101&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;92867&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;94503&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;95035&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;95827&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;97401&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;99701&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;02169&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;07024&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10580&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11735&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;13775&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15666&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;17737&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19808&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;20879&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;22201&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;23336&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25701&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27565&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28303&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29431&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30248&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;32084&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;32837&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33411&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;34210&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;37129&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;40019&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;44312&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;48043&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;49336&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;53703&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;56716&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;60478&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;62226&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;66603&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;72450&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;75080&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;76310&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;78009&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;79336&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;83301&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;85251&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;89135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;91105&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;92106&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;92868&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;94519&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;95050&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;95834&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;97402&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;02460&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;07090&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11010&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11780&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;14219&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16222&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18015&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19135&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19971&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21014&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;22508&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;23454&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;26651&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27597&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28403&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29501&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;30286&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;32301&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33027&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33455&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34609&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37347&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;40241&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;44811&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;48101&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;49519&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;54115&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;59218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;60601&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;63084&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;67801&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;72903&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;75155&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;77009&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;78214&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;79763&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;83716&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;85305&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;90012&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;91320&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;92230&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;93041&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;94533&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;95304&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;96761&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98092&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;02631&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;07302&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11214&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12118&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;14482&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;16365&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18104&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19147&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20004&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21205&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;22701&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;23505&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27607&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28546&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29577&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;30303&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;32327&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33034&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33596&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34655&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37405&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;42104&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;45069&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;48124&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;49847&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;54494&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;59864&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;60616&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63139&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;68112&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;73036&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;75189&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;77026&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;78357&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;80010&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;83854&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;85741&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;90023&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;91354&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;92392&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;93301&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;94559&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;95351&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;96782&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;98121&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;01970&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;06107&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10463&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11570&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;13208&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15342&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;17406&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19073&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19713&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;20782&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;22030&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;23294&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25301&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27517&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28214&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29206&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30040&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31763&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;32804&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33403&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33811&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;36535&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;39305&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;44094&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;47715&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;49090&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;53207&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;56007&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;60148&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;61801&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;66215&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;71111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;75038&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;76013&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;77532&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;78753&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;82414&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;85209&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;89102&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;90731&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;92027&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;92805&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;94109&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;95008&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;95630&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;97305&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;99218&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;01930&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;04005&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10014&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11434&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12946&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;15235&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;17099&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19014&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19606&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;20706&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21804&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;23188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;24401&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27360&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28078&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;29020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;29928&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31093&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;32714&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33326&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33755&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;36203&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;38671&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;43537&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46254&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48746&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;53140&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;55720&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;60134&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;61238&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;65689&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;70726&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;75019&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;75901&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;77449&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;78741&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;81230&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;85043&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;87507&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;90680&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;91770&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;92692&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;94063&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;94920&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;95531&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;97213&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;99001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;01545&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;02889&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08081&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11358&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12208&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;14850&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16506&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18433&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19380&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20036&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21221&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;22911&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23521&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27107&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27707&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28789&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;29611&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;30531&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;32533&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33178&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33610&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34952&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;37849&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;43102&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;45504&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;48197&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;51334&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;55369&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;60060&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;60640&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63368&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;70068&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;73160&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75225&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;77087&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;78628&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;80212&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;84123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;87002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;90044&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;91605&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;92408&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;93313&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;94601&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;95370&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;97140&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;98233&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;02343&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;07033&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10701&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11743&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14101&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16125&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;17815&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19118&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19939&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;20886&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;22206&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;23435&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25951&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27573&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28348&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;29440&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;30265&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;32097&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33009&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33432&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34471&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37174&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;40206&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;44511&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;48060&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;49445&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;53717&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;58102&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;60513&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;62914&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;66617&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;72756&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;75087&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;76541&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;78130&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;79401&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;83318&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;85260&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;89523&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;91208&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;92113&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;92881&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;94520&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;95076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;96734&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;97845&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;02062&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;06759&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10468&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11576&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;13219&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;15370&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;17408&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19087&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19720&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;20794&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;22041&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;23320&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25309&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27534&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28217&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29303&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;30044&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31903&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32806&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33404&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33909&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;36609&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;39520&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;44116&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;47906&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;49091&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;53217&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;56368&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;60160&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;61820&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;66217&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;71129&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;75069&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;76020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;77651&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;78852&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;82801&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;85225&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;89109&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;90807&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;92064&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;92840&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;94121&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;95020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;95742&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;97330&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;99336&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;01566&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;02903&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08102&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11360&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12401&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;14898&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;16602&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18612&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19401&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;20147&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21227&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;22958&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23608&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27203&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27858&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28801&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;29615&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30906&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;32548&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33301&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33614&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;35007&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;37919&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;43113&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;45601&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;48334&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;51503&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;55391&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;60061&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;60643&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;63701&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;70113&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;74015&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;75234&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;77096&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;78702&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;80219&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;84321&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;87117&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;90094&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;91730&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;92606&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;93455&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;94606&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;95386&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;97202&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;98296&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:MARKET_SEGMENT:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;EVENT CATERING, PARTY SERVICE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LSR - QUICK CASUAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FSR - CAF╔-RESTAURANTS, FAMILY-STYLE, DINER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LSR - BUFFET RESTAURANTS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SPORTS BARS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1* HOTELS WITHOUT RESTAURANT-ECONOMY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LSR - QUICK SERVICE RESTAURANTS, FAST FOOD, SNACKS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LSR - COFFEE SHOPS, TEA HOUSES&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UNCODED HOTELS &amp; MOTELS WITHOUT RESTAURANT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BREWPUBS, ENGLISH AND IRISH PUBS, MICRO-BREWERY, WITH LIMITED FOOD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FSR - FINE DINING RESTAURANTS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEIGHBORHOOD BARS &amp; TAVERNS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4* HOTELS WITHOUT RESTAURANT-UPPER SCALE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LSR - DELIVERY AND TAKE AWAY ONLY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2* HOTELS WITHOUT RESTAURANT-MIDSCALE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3* HOTELS WITHOUT RESTAURANT-UPSCALE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BED &amp; BREAKFAST, GUESTHOUSES, CHAMBRES D&apos;HOTES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CAMPING, RV PARKS, CAMPGROUNDS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LSR - SELF SERVICE RESTAURANTS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LSR - ICE CREAM PARLORS, FROZEN DESSERTS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FSR - TRADITIONAL RESTAURANTS, CASUAL DINING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NIGHTLIFE VENUES&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4* HOTELS WITH RESTAURANT-UPPER SCALE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LSR - SMOOTHIE, JUICE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FSR - UPSCALE CASUAL DINING RESTAURANTS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RESORTS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE (Non Commercial):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Name Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ANNUAL_SALES:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&lt;=$500,000&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;$500,001 - $1,000,000&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;$2,500,001 - $5,000,000&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;$1,000,001 - $2,500,000&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&gt;$5,000,000&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Name Parameter]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range max='5' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Restaurant Spends and Share' id='Restaurant Spends and Share_725AED1DD77344FB8387A2B34877A033'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Restaurant Spends and Share].[ZIP]' />
                    <expression op='[Retail Stores].[ZIP]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Restaurant Spends and Share].[ZIP]' />
                      <expression op='[Non Commercial].[ZIP]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Restaurant Spends and Share' table='[&apos;Restaurant Spends and Share$&apos;]' type='table'>
                    <columns gridOrigin='A1:Y1000:no:A1:Y1000:0' header='yes' outcome='2'>
                      <column datatype='string' name='NAME' ordinal='0' />
                      <column datatype='string' name='CITY' ordinal='1' />
                      <column datatype='string' name='STATE' ordinal='2' />
                      <column datatype='string' name='ZIP' ordinal='3' />
                      <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
                      <column datatype='string' name='COUNTY_CODE' ordinal='5' />
                      <column datatype='string' name='COUNTY_NAME' ordinal='6' />
                      <column datatype='string' name='MSA' ordinal='7' />
                      <column datatype='string' name='MARKET_SEGMENT' ordinal='8' />
                      <column datatype='string' name='SIMPLIFIED_MENU' ordinal='9' />
                      <column datatype='string' name='MENU_TYPE' ordinal='10' />
                      <column datatype='string' name='UNITS' ordinal='11' />
                      <column datatype='string' name='EMPLOYEES' ordinal='12' />
                      <column datatype='string' name='YEARS_IN_BUSINESS' ordinal='13' />
                      <column datatype='string' name='ANNUAL_SALES' ordinal='14' />
                      <column datatype='string' name='AVERAGE_CHECK' ordinal='15' />
                      <column datatype='string' name='NUMBER_OF_ROOMS' ordinal='16' />
                      <column datatype='real' name='FOOD_BEVERAGE_PURCHASE' ordinal='17' />
                      <column datatype='real' name='FOOD_PURCHASE' ordinal='18' />
                      <column datatype='real' name='BEVERAGE_PURCHASE' ordinal='19' />
                      <column datatype='real' name='TOTAL_CATEGORY_DRY' ordinal='20' />
                      <column datatype='real' name='TOTAL_CATEGORY_FRESH' ordinal='21' />
                      <column datatype='real' name='TOTAL_CATEGORY_FROZEN' ordinal='22' />
                      <column datatype='real' name='TOTAL_CATEGORY_PROTEIN' ordinal='23' />
                      <column datatype='real' name='% Share of F&amp;B Purchases from Company' ordinal='24' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Non Commercial' table='[&apos;Non Commercial$&apos;]' type='table'>
                    <columns gridOrigin='A1:U1001:no:A1:U1001:0' header='yes' outcome='2'>
                      <column datatype='string' name='NAME' ordinal='0' />
                      <column datatype='string' name='ADDRESS' ordinal='1' />
                      <column datatype='string' name='CITY' ordinal='2' />
                      <column datatype='string' name='STATE' ordinal='3' />
                      <column datatype='string' name='ZIP' ordinal='4' />
                      <column datatype='string' name='ZIP_PLUS4' ordinal='5' />
                      <column datatype='string' name='COUNTY_CODE' ordinal='6' />
                      <column datatype='string' name='COUNTY_NAME' ordinal='7' />
                      <column datatype='string' name='MSA' ordinal='8' />
                      <column datatype='string' name='MARKET_SEGMENT' ordinal='9' />
                      <column datatype='string' name='EMPLOYEES_NON_COMMERCIAL' ordinal='10' />
                      <column datatype='string' name='ENROLLMENT_RANGE' ordinal='11' />
                      <column datatype='string' name='CAPACITY_BEDS_RANGE' ordinal='12' />
                      <column datatype='string' name='NUMBER_OF_SCHOOLS_RANGE' ordinal='13' />
                      <column datatype='string' name='OPERATION_TYPE' ordinal='14' />
                      <column datatype='string' name='OWNERSHIP_TYPE' ordinal='15' />
                      <column datatype='string' name='NUMBER_OF_MEALS_PER_DAY_RANGE' ordinal='16' />
                      <column datatype='string' name='AVERAGE_DAILY_CENSUS' ordinal='17' />
                      <column datatype='string' name='PRIMARY_GPO' ordinal='18' />
                      <column datatype='string' name='SECONDARY_GPO' ordinal='19' />
                      <column datatype='string' name='TOTAL_PATIENT_DAYS' ordinal='20' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.097z19y17vec7b189wqdf1a4z6al' name='Retail Stores' table='[&apos;Retail Stores$&apos;]' type='table'>
                  <columns gridOrigin='A1:M1002:no:A1:M1002:0' header='yes' outcome='2'>
                    <column datatype='string' name='NAME' ordinal='0' />
                    <column datatype='string' name='CITY' ordinal='1' />
                    <column datatype='string' name='STATE' ordinal='2' />
                    <column datatype='string' name='ZIP' ordinal='3' />
                    <column datatype='string' name='ZIP_PLUS4' ordinal='4' />
                    <column datatype='string' name='COUNTY_CODE' ordinal='5' />
                    <column datatype='string' name='COUNTY_NAME' ordinal='6' />
                    <column datatype='string' name='MSA' ordinal='7' />
                    <column datatype='string' name='market_segment2' ordinal='8' />
                    <column datatype='string' name='units' ordinal='9' />
                    <column datatype='string' name='EMPLOYEES' ordinal='10' />
                    <column datatype='string' name='years_in_business' ordinal='11' />
                    <column datatype='string' name='annual_sales' ordinal='12' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='USA Map(commercial)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_2BAFE35390B74955B968BA73A3E9529E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Market segment and annual sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='City Wise F&amp;B Spends' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='City Wise F&amp;B Spends,USA Map(commercial)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_40CCE297DDAE454F9DDB6B71CEFFF305]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_5E2C069705804BEF906EAEDCBB5E0CA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_E80B059448964EE693C5496F1AC31ACC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Market segment with %F&amp;B' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='%F&amp;B Spends of restaurants'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='18'>Percentage F&amp;B spend of restaurants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Name Parameter]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range max='5' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Name Set]' derivation='InOut' name='[io:Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action1_6365A65B61E2493DADA418271DB3114E]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]'>
            <groupfilter expression='SUM([% Share of F&amp;B Purchases from Company]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]' value='Tableau Semibold' />
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' value='Tableau Semibold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[io:Name Set:nk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.95552486181259155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</rows>
        <cols>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</cols>
      </table>
      <simple-id uuid='{5A0EA7A2-2702-4B6A-A442-5BEF493F8BFC}' />
    </worksheet>
    <worksheet name='City Wise F&amp;B Spends'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action1_6365A65B61E2493DADA418271DB3114E]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <color column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:CITY:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{96560D0D-8F71-4693-8C5D-3B48BB2E2D46}' />
    </worksheet>
    <worksheet name='Market segment and annual sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ANNUAL_SALES]' derivation='None' name='[none:ANNUAL_SALES:nk]' pivot='key' type='nominal' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]'>
            <groupfilter expression='SUM([% Share of F&amp;B Purchases from Company]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:MARKET_SEGMENT:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' />
              <color column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DD5F8F77-FD9C-459D-9651-115F86B3726E}' />
    </worksheet>
    <worksheet name='Market segment and average check'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Average Check' datatype='string' name='[AVERAGE_CHECK]' role='dimension' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column-instance column='[AVERAGE_CHECK]' derivation='None' name='[none:AVERAGE_CHECK:nk]' pivot='key' type='nominal' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Market Segment)]'>
            <groupfilter function='level-members' level='[MARKET_SEGMENT]' user:ui-action-filter='[Action6_E80B059448964EE693C5496F1AC31ACC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AVERAGE_CHECK:nk]' />
              <groupfilter function='member' level='[none:AVERAGE_CHECK:nk]' member='&quot;$7 TO $10&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]'>
            <groupfilter expression='SUM([% Share of F&amp;B Purchases from Company]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:MARKET_SEGMENT:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' direction='DESC' measure-to-sort-by='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Market Segment)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='Tableau Medium' />
            <format attr='color' data-class='subtotal' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk] / [federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk])</rows>
        <cols>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</cols>
      </table>
      <simple-id uuid='{2026C8AE-4A23-420B-89E8-FEFFF22C1A13}' />
    </worksheet>
    <worksheet name='Market segment and menu type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='Menu Type' datatype='string' name='[MENU_TYPE]' role='dimension' type='nominal' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[MENU_TYPE]' derivation='None' name='[none:MENU_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Market Segment)]'>
            <groupfilter function='level-members' level='[MARKET_SEGMENT]' user:ui-action-filter='[Action6_E80B059448964EE693C5496F1AC31ACC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]'>
            <groupfilter expression='SUM([% Share of F&amp;B Purchases from Company]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:MARKET_SEGMENT:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MENU_TYPE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MENU_TYPE:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MENU_TYPE:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk] / [federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MENU_TYPE:nk])</rows>
        <cols>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</cols>
      </table>
      <simple-id uuid='{120884DA-8FCE-4FF1-8B7A-A779A9755A24}' />
    </worksheet>
    <worksheet name='Market segment with %F&amp;B'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:MARKET_SEGMENT:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;1* HOTELS WITHOUT RESTAURANT-ECONOMY&quot;' function='range' level='[none:MARKET_SEGMENT:nk]' to='&quot;EVENT CATERING, PARTY SERVICE&quot;' />
                <groupfilter from='&quot;NEIGHBORHOOD BARS &amp; TAVERNS&quot;' function='range' level='[none:MARKET_SEGMENT:nk]' to='&quot;UNCODED HOTELS &amp; MOTELS WITHOUT RESTAURANT&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <color column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1D9558F9-7A5F-4BB1-92EA-6C0FE8DC9701}' />
    </worksheet>
    <worksheet name='Restaurants and retails mapping'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column datatype='string' name='[NAME (Retail Stores)]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Market Segment2' datatype='string' name='[market_segment2]' role='dimension' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='None' name='[none:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[NAME (Retail Stores)]' derivation='None' name='[none:NAME (Retail Stores):nk]' pivot='key' type='nominal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[market_segment2]' derivation='None' name='[none:market_segment2:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:% Share of F&amp;B Purchases from Company:qk]' included-values='in-range'>
            <min>0.002</min>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Retail Stores):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:NAME (Retail Stores):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:NAME (Retail Stores):nk]' member='%null%' />
                <groupfilter function='member' level='[none:NAME (Retail Stores):nk]' member='&quot;COPPER STILL&quot;' />
                <groupfilter function='member' level='[none:NAME (Retail Stores):nk]' member='&quot;KANGAROO EXPRESS&quot;' />
                <groupfilter function='member' level='[none:NAME (Retail Stores):nk]' member='&quot;KROGER&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Retail Stores):nk]' direction='DESC' measure-to-sort-by='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Retail Stores):nk]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:% Share of F&amp;B Purchases from Company:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Retail Stores):nk] / [federated.1jfuphj0vrlnvw180edyo0le9y13].[none:market_segment2:nk]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{DA1B11C3-8373-43F6-BBFF-C4DCADAD71BB}' />
    </worksheet>
    <worksheet name='Restuarants and non commercial mapping'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='MARKET SEGMENT (Non Commercial)' datatype='string' name='[MARKET_SEGMENT (Non Commercial)]' role='dimension' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column datatype='string' name='[NAME (Non Commercial)]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[MARKET_SEGMENT (Non Commercial)]' derivation='None' name='[none:MARKET_SEGMENT (Non Commercial):nk]' pivot='key' type='nominal' />
            <column-instance column='[MARKET_SEGMENT]' derivation='None' name='[none:MARKET_SEGMENT:nk]' pivot='key' type='nominal' />
            <column-instance column='[NAME (Non Commercial)]' derivation='None' name='[none:NAME (Non Commercial):nk]' pivot='key' type='nominal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:NAME (Non Commercial):nk]' />
              <groupfilter function='member' level='[none:NAME (Non Commercial):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ADCARE HOSPITAL OF WORCESTER&quot;</bucket>
              <bucket>&quot;AUTUMN VILLAGE&quot;</bucket>
              <bucket>&quot;BLAIRE HOUSE OF TEWKSBURY&quot;</bucket>
              <bucket>&quot;CATHOLIC CHARITIES-PEABODY CHILDCARE&quot;</bucket>
              <bucket>&quot;CHRISTOPHER HOUSE OF WORCESTER&quot;</bucket>
              <bucket>&quot;DAY BY DAY ADULT DAY CARE&quot;</bucket>
              <bucket>&quot;FLORAL STREET SCHOOL&quot;</bucket>
              <bucket>&quot;GLOUCESTER PUBLIC SCHOOL DISTRICT&quot;</bucket>
              <bucket>&quot;ADDISON GILBERT HOSPITAL&quot;</bucket>
              <bucket>&quot;GOLDEN LIVING CENTER-GLOUCESTER&quot;</bucket>
              <bucket>&quot;GREAT BROOK VALLEY HEALTH CENTER-AODA&quot;</bucket>
              <bucket>&quot;H L WILLIS STARTING POINT RSDNTL TRTMNT&quot;</bucket>
              <bucket>&quot;HANNAH DUSTON HEALTHCARE CENTER&quot;</bucket>
              <bucket>&quot;INN TRANSITION-SUBSTANCE ABUSE TREATMENT&quot;</bucket>
              <bucket>&quot;JOHN F RYAN ELEMENTARY SCHOOL&quot;</bucket>
              <bucket>&quot;KEY PROGRAM&quot;</bucket>
              <bucket>&quot;KINDRED HOSPITAL-BOSTON NORTH SHORE&quot;</bucket>
              <bucket>&quot;KNOWLEDGE BEGINNINGS-TEWKSBURY&quot;</bucket>
              <bucket>&quot;LINDA FAY GRIFFIN HOUSE-SBSTNC ABUSE SVC&quot;</bucket>
              <bucket>&quot;MIDDLESEX DUIL PROGRAM-SBSTNC ABUSE PRGM&quot;</bucket>
              <bucket>&quot;MULBERRY CHILD CARE AND PRESCHOOL&quot;</bucket>
              <bucket>&quot;NOTRE DAME LONG TERM CARE CENTER&quot;</bucket>
              <bucket>&quot;PATHWAY FOR CHILDREN-YOUNG FAMILY&quot;</bucket>
              <bucket>&quot;MOORES WAY-SUBSTANCE ABUSE SERVICES&quot;</bucket>
              <bucket>&quot;PEABODY GLEN HEALTH CARE CENTER&quot;</bucket>
              <bucket>&quot;PEABODY KINDERCARE LEARNING CENTER&quot;</bucket>
              <bucket>&quot;PEABODY PUBLIC SCHOOL DISTRICT&quot;</bucket>
              <bucket>&quot;PETER A TORIGIAN COMM LIFE-SENIOR CTR&quot;</bucket>
              <bucket>&quot;PILGRIM REHAB-SKILLED NURSING FACILITY&quot;</bucket>
              <bucket>&quot;RAINBOW NURSING CENTER&quot;</bucket>
              <bucket>&quot;RENAISSANCE GARDENS AT BROOKSBY VILLAGE&quot;</bucket>
              <bucket>&quot;ROSEWOOD NURSING-REHABILITATION CENTER&quot;</bucket>
              <bucket>&quot;SEACOAST NURSING CENTER REHAB&quot;</bucket>
              <bucket>&quot;SENIOR CITIZEN CENTER-TEWKSBURY&quot;</bucket>
              <bucket>&quot;SHERWOOD MIDDLE SCHOOL&quot;</bucket>
              <bucket>&quot;COOLIDGE ELEMENTARY SCHOOL&quot;</bucket>
              <bucket>&quot;SHREWSBURY CHILDRENS CENTER INC&quot;</bucket>
              <bucket>&quot;SHREWSBURY NURSING AND REHAB CENTER&quot;</bucket>
              <bucket>&quot;SHREWSBURY PUBLIC SCHOOLS&quot;</bucket>
              <bucket>&quot;SPECTRUM HEALTH SYS OTPTNT SVCS-AODA&quot;</bucket>
              <bucket>&quot;TEWKSBURY HOSPITAL&quot;</bucket>
              <bucket>&quot;UMASS MEMORIAL MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;UNIV OF MASSACHUSETTS MEM REHABILITATION&quot;</bucket>
              <bucket>&quot;WINTER HILL REST HOME&quot;</bucket>
              <bucket>&quot;WORCESTER TECHNICAL HIGH SCHOOL&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]' value='244' />
            <format attr='width' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk]' value='412' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk] / ([federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk] / [federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT (Non Commercial):nk]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{F1AB7394-9E27-4EA5-967B-A267216B8203}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&B Purchases from Company:qk]>%]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Percentage F&amp;B</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{00A0BEDE-DA42-456B-A12B-90E7ABE35170}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Category Dry' datatype='real' name='[TOTAL_CATEGORY_DRY]' role='measure' type='quantitative' />
            <column-instance column='[TOTAL_CATEGORY_DRY]' derivation='Sum' name='[sum:TOTAL_CATEGORY_DRY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_DRY:qk]' value='c&quot;$&quot;#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_DRY:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_DRY:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Total category dry</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E6480DBB-CD61-4A4A-B226-FA9CF6FEF0FF}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Category Fresh' datatype='real' name='[TOTAL_CATEGORY_FRESH]' role='measure' type='quantitative' />
            <column-instance column='[TOTAL_CATEGORY_FRESH]' derivation='Sum' name='[sum:TOTAL_CATEGORY_FRESH:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FRESH:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FRESH:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FRESH:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Total category fresh</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C3D49844-C4F7-447B-BA95-88F54F16C6AF}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Category Frozen' datatype='real' name='[TOTAL_CATEGORY_FROZEN]' role='measure' type='quantitative' />
            <column-instance column='[TOTAL_CATEGORY_FROZEN]' derivation='Sum' name='[sum:TOTAL_CATEGORY_FROZEN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FROZEN:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FROZEN:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_FROZEN:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Total category frozen</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1EB87DB0-FDD1-46E0-934B-A6B761AE8249}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Category Protein' datatype='real' name='[TOTAL_CATEGORY_PROTEIN]' role='measure' type='quantitative' />
            <column-instance column='[TOTAL_CATEGORY_PROTEIN]' derivation='Sum' name='[sum:TOTAL_CATEGORY_PROTEIN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]'>
            <groupfilter function='level-members' level='[CITY]' user:ui-action-filter='[Action3_970A4507A1C6456B8E0DEDA3A52E2154]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]'>
            <groupfilter function='member' level='[STATE]' member='&quot;OK&quot;' user:ui-action-filter='[Action2_65BEFE2EC3BC4DAE99EC9DF7CD811FEA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (State)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (City)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_PROTEIN:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_PROTEIN:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:TOTAL_CATEGORY_PROTEIN:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Total category protein</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F871A840-9174-4A2E-824A-0F8337EFDCE4}' />
    </worksheet>
    <worksheet name='USA Map(commercial)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='18'>Select a state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant Spends and Share+ (Worksheet in F  TIGER ANALYTICS Food_services)' name='federated.1jfuphj0vrlnvw180edyo0le9y13' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jfuphj0vrlnvw180edyo0le9y13'>
            <column datatype='real' name='[% Share of F&amp;B Purchases from Company]' role='measure' type='quantitative' />
            <column caption='Annual Sales' datatype='string' name='[ANNUAL_SALES]' role='dimension' type='nominal' />
            <column caption='Market Segment' datatype='string' name='[MARKET_SEGMENT]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Share of F&amp;B Purchases from Company]' derivation='Sum' name='[sum:% Share of F&amp;B Purchases from Company:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BAFE35390B74955B968BA73A3E9529E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ANNUAL_SALES]' />
              <groupfilter function='level-members' level='[MARKET_SEGMENT]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]'>
            <groupfilter expression='COUNTD([NAME]) &gt; 0' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Action (Annual Sales,Market Segment)]</column>
            <column>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]' field-type='quantitative' max='-6276239.1860299315' min='-14675745.791861227' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]' field-type='quantitative' max='5926246.4744187631' min='3385730.0799886873' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' />
              <text column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]' />
              <geometry column='[federated.1jfuphj0vrlnvw180edyo0le9y13].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='254' />
                <format attr='has-halo' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]</rows>
        <cols>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A982968B-BEC6-4933-ABCC-3A6EB71482A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Name Parameter]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range max='5' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='38000' id='3' name='%F&amp;B Spends of restaurants' w='56333' x='933' y='63500' />
        <zone h='5750' id='4' mode='type_in' param='[Parameters].[Name Parameter]' type-v2='paramctrl' w='8333' x='44933' y='64125' />
        <zone h='33250' id='5' name='USA Map(commercial)' w='46133' x='1200' y='1625' />
        <zone h='27250' id='7' name='City Wise F&amp;B Spends' w='46400' x='867' y='35500' />
        <zone h='46250' id='8' name='Market segment and annual sales' w='33333' x='54533' y='43625' />
        <zone h='18750' id='9' name='Sheet 5' w='16067' x='84400' y='13500' />
        <zone h='16375' id='10' name='Sheet 6' w='19800' x='47733' y='8125' />
        <zone h='16250' id='11' name='Sheet 7' show-title='false' w='20867' x='66600' y='9000' />
        <zone h='15625' id='12' name='Sheet 8' show-title='false' w='19667' x='67267' y='23875' />
        <zone h='15375' id='13' name='Sheet 9' show-title='false' w='20400' x='47533' y='24250' />
        <zone h='17500' id='14' leg-item-layout='vert' name='Market segment and annual sales' pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]' type-v2='color' w='23200' x='87067' y='57250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
                <zone fixed-size='266' h='33250' id='5' is-fixed='true' name='USA Map(commercial)' w='46133' x='1200' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='131' h='16375' id='10' is-fixed='true' name='Sheet 6' w='19800' x='47733' y='8125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='130' h='16250' id='11' is-fixed='true' name='Sheet 7' show-title='false' w='20867' x='66600' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='150' h='18750' id='9' is-fixed='true' name='Sheet 5' w='16067' x='84400' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='125' h='15625' id='12' is-fixed='true' name='Sheet 8' show-title='false' w='19667' x='67267' y='23875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='15375' id='13' is-fixed='true' name='Sheet 9' show-title='false' w='20400' x='47533' y='24250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='218' h='27250' id='7' is-fixed='true' name='City Wise F&amp;B Spends' w='46400' x='867' y='35500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46250' id='8' is-fixed='true' name='Market segment and annual sales' w='33333' x='54533' y='43625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17500' id='14' leg-item-layout='vert' name='Market segment and annual sales' pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]' type-v2='color' w='23200' x='87067' y='57250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='3' is-fixed='true' name='%F&amp;B Spends of restaurants' w='56333' x='933' y='63500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='4' mode='type_in' param='[Parameters].[Name Parameter]' type-v2='paramctrl' w='8333' x='44933' y='64125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A2768C2B-0AD3-445F-9564-804998383FE2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='54000' id='5' name='Market segment and menu type' w='46813' x='3563' y='1800' />
        <zone h='50200' id='6' name='Market segment and average check' w='45688' x='50688' y='5600' />
        <zone h='28700' id='7' name='Market segment with %F&amp;B' w='90250' x='5063' y='56500' />
        <zone h='8800' id='8' name='Market segment with %F&amp;B' pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' type-v2='color' w='8750' x='88000' y='54800' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='13' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone fixed-size='280' h='54000' id='5' is-fixed='true' name='Market segment and menu type' w='46813' x='3563' y='1800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50200' id='6' is-fixed='true' name='Market segment and average check' w='45688' x='50688' y='5600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28700' id='7' is-fixed='true' name='Market segment with %F&amp;B' w='90250' x='5063' y='56500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8800' id='8' name='Market segment with %F&amp;B' pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' type-v2='color' w='8750' x='88000' y='54800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{38E121D6-174A-4D9A-AD69-F5BA17024EAD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='%F&amp;B Spends of restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Name Set]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[io:Name Set:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41F39FA6-C2AA-46FD-B601-10D9C2A41496}' />
    </window>
    <window class='worksheet' name='USA Map(commercial)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D12AE6AF-8B03-4992-8145-810D2809E15C}' />
    </window>
    <window class='worksheet' name='City Wise F&amp;B Spends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:CITY:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72553671-2FA2-4259-A2C8-ABC2BB4F1F28}' />
    </window>
    <window class='worksheet' name='Market segment and annual sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E3058FF-3EA5-4218-B607-AC040749D3BE}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7E5D8015-A280-44CD-9932-75F5B368B9CE}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BB6B9D87-7F85-4E04-BDF3-F5FFA987E492}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{78E6B43A-79DA-4ACA-BB92-7B59A5F60F18}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{15AC5BF3-51A4-47C6-AF55-0C339136FCDE}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2673E7C4-A1D7-404E-9B91-CA2AEA4A800D}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='%F&amp;B Spends of restaurants' />
        <viewpoint name='City Wise F&amp;B Spends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Market segment and annual sales'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ANNUAL_SALES:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='USA Map(commercial)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]</field>
                    <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</field>
                    <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Geometry (generated)]</field>
                    <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Latitude (generated)]</field>
                    <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;OK&quot;</value>
                  <value>1.6033987476258296</value>
                  <value>&quot;POLYGON((-103.0024 36.5004,-103.0022 37.0001,-102.8151 36.9998,-102.6981 36.9952,-102.0422 36.993,-101.0667 36.9979,-100.0895 37.0023,-99.5411 36.9996,-98.5449 36.999,-98.3472 36.998,-97.1477 36.9991,-96.5255 36.9987,-95.0076 36.9995,-94.6181 36.9981,-94.6179 36.4994,-94.5628 36.1617,-94.4931 35.7592,-94.4315 35.3971,-94.4327 35.3808,-94.4546 34.729,-94.4703 34.1899,-94.4859 33.6379,-94.5204 33.6175,-94.5464 33.66,-94.5908 33.6456,-94.6214 33.6826,-94.6392 33.6637,-94.6679 33.6946,-94.6848 33.6844,-94.7461 33.703,-94.7713 33.7607,-94.8023 33.7328,-94.8234 33.7692,-94.8493 33.7396,-94.9115 33.7784,-94.9233 33.8087,-94.9535 33.8165,-94.9689 33.8609,-95.049 33.8641,-95.0601 33.9019,-95.0824 33.8799,-95.1176 33.9046,-95.1296 33.9367,-95.1559 33.9368,-95.2194 33.9616,-95.2714 33.9126,-95.2822 33.8759,-95.3105 33.8772,-95.4382 33.8671,-95.4598 33.888,-95.5434 33.8805,-95.5577 33.9304,-95.5975 33.9423,-95.6273 33.9078,-95.6686 33.907,-95.6949 33.8868,-95.7566 33.892,-95.7679 33.8468,-95.8045 33.8622,-95.8433 33.8383,-95.9321 33.8865,-95.9419 33.861,-96.0488 33.8365,-96.1015 33.8467,-96.1492 33.8371,-96.1781 33.7605,-96.2304 33.7485,-96.2773 33.7697,-96.303 33.7509,-96.3184 33.6971,-96.3622 33.6918,-96.3795 33.7258,-96.4226 33.776,-96.5007 33.7726,-96.5329 33.823,-96.5732 33.8192,-96.629 33.8524,-96.5885 33.895,-96.6734 33.9123,-96.6907 33.85,-96.7137 33.8313,-96.7694 33.8275,-96.7796 33.8579,-96.8322 33.8748,-96.8506 33.8472,-96.883 33.868,-96.8994 33.9337,-96.9348 33.9545,-96.9963 33.9427,-96.9856 33.8865,-97.0235 33.8445,-97.0573 33.8569,-97.0873 33.8398,-97.048 33.8179,-97.088 33.8087,-97.0887 33.7387,-97.1111 33.7194,-97.1513 33.7226,-97.1934 33.7606,-97.1974 33.8298,-97.1668 33.8404,-97.1855 33.9007,-97.2103 33.9159,-97.2462 33.9003,-97.2556 33.8637,-97.3319 33.8845,-97.3729 33.8195,-97.4439 33.8237,-97.4629 33.8429,-97.4511 33.8917,-97.4842 33.9154,-97.5609 33.8996,-97.5893 33.9039,-97.5888 33.9519,-97.6615 33.9908,-97.6877 33.9872,-97.7323 33.9367,-97.763 33.9341,-97.8343 33.8577,-97.8714 33.849,-97.9779 33.8899,-97.9572 33.9145,-97.9712 33.9372,-97.9468 33.9909,-97.9742 34.0067,-98.0163 33.9941,-98.0844 34.0029,-98.0838 34.0417,-98.1202 34.0721,-98.0905 34.1225,-98.1019 34.1468,-98.1391 34.1419,-98.1688 34.1143,-98.2325 34.1346,-98.3002 34.1346,-98.364 34.1571,-98.3984 34.1285,-98.4235 34.0828,-98.487 34.0629,-98.5602 34.1332,-98.6102 34.1571,-98.6481 34.1644,-98.6901 34.1332,-98.7667 34.1368,-98.8311 34.1622,-98.8601 34.1499,-98.9524 34.2125,-98.9917 34.2214,-99.0434 34.1982,-99.0953 34.2118,-99.1898 34.2144,-99.2108 34.3368,-99.2613 34.4035,-99.3201 34.4093,-99.3756 34.4588,-99.3952 34.442,-99.3987 34.3758,-99.4335 34.3702,-99.5176 34.4145,-99.5798 34.4169,-99.6 34.3747,-99.6945 34.3782,-99.7534 34.4209,-99.8446 34.5069,-99.9232 34.5746,-99.9975 34.5606,-100.0004 34.7465,-100.0004 36.4997,-101.0852 36.4992,-101.6239 36.4995,-102.0323 36.5006,-103.0024 36.5004))&quot;</value>
                  <value>35.5</value>
                  <value>-97.5</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{0FE12D80-2281-4065-A7DB-DFB5B56DF3C7}' />
    </window>
    <window class='worksheet' name='Market segment and menu type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F18D564-00A8-419B-B442-CB0FCDCE4910}' />
    </window>
    <window class='worksheet' name='Market segment and average check'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:AVERAGE_CHECK:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBB2EEF1-9B7D-4A4A-8F8A-469AA2D0C17C}' />
    </window>
    <window class='worksheet' name='Market segment with %F&amp;B'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jfuphj0vrlnvw180edyo0le9y13].[sum:% Share of F&amp;B Purchases from Company:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A81EB9C2-C164-4E60-B480-02248B2111F9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Market segment and average check' />
        <viewpoint name='Market segment and menu type' />
        <viewpoint name='Market segment with %F&amp;B'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{0FF7E69C-FCDB-4E07-B42F-E8D4A009435F}' />
    </window>
    <window class='worksheet' name='Restuarants and non commercial mapping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT (Non Commercial):nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Non Commercial):nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP (Non Commercial):nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87306AC9-76A0-4088-8C69-21C581BBAFDF}' />
    </window>
    <window class='worksheet' maximized='true' name='Restaurants and retails mapping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:% Share of F&amp;B Purchases from Company:qk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:MARKET_SEGMENT:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME (Retail Stores):nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:NAME:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:STATE:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:ZIP:nk]</field>
            <field>[federated.1jfuphj0vrlnvw180edyo0le9y13].[none:market_segment2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{714030B2-09C5-49E1-919E-6454215AD538}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%F&amp;B Spends of restaurants' width='192'>
      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
      df4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='City Wise F&amp;B Spends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3Rc2X3n+amcq1AJVUiFnAkSIMAANtmkOqiDJavlljSSd2c9npnj9c5K
      ow1e22d3PKPxarye2dGMz1n3SLLs0Upeya3QQVJ3S2p2MzVJgAE5ZxRyBVRC5bh/gASbajbZ
      JMEuEniff+pU1X3v/V74vne/7977u6JcLpdDQGCXIs53AAIC+UQQgMCuRhCAwK5GEIDArkYQ
      gMCuRhCAwK5GEIDArubeBRBe5d+/9P2tr2+/+j26hpwfWnyu511G1+K3/M+/MosnnL7nUO6G
      dNjD7Ir/rpd78823tjsQpmZXtnedAneN9J6XTMdRZaJMuCLUW8SEQ2FSoQg+1xIzi6vIlHpa
      99QzOTXO/Ng4RTYdEsC1MI3YWEp4bQ63N0DNnjaGL51lXdvAwZY6Su1mIn4XAxNODEYLzXUV
      DPReJZaRcuDAfiK+VUamFsmJpRw5uJcL5y6iUEiQqo2kowGKa1owK9L0D0+iMVrYU1/CxXO9
      KNQSjLZK0qu9nJ1Ow9H9VDmKScdC9A5NkMmKOHCog8nhXhIpyEoUtO9rZmZ8GH8kSThxQ6Bd
      588glysQK3RkE2EKyxuw68X0DIyh1pvY21RJ9/lu5CoFeksJBlEYTFVYpRtMutPUOawszY7y
      9tlpshwlFQ2xZ88eFqbGMRfZuNw7jlKapW7PfgoUGa72D6PQGGndU78Np1zg/dxXFai67RDz
      A1eYGbhKXfshAIwWGxqFnO73zpEE3vjJD6npOIZWCvGgi57JNayKGKPzfg4dPkjX2VM4HA4a
      WtootZsBuHixi/o9e2mqq2Ti8lnU5XtoKVdz7uo0p89f5vDhgwQ8q0Ca9WCcjkP7cc4t0XGo
      jb5LVzh17iIdhw7hmxsjlI7j9iZo7zjE6OBVHA4HVfXNVDmKAZAoddgtBqJro/RMeZmYmad1
      /35ci/MkA4tMrCXoaN+PVnHjXuHxh2g/eJgF5yztBw8x2HORU6fP037oELGVSTyxFKueDfa3
      H2BiuBfP4tTmEy4eYGrRA0Cpw0FlVT31VQ7W5ibwxzP0j02iSQfYQEtn52EunDnF6VPnaO04
      BL45lkIfz1NyN3F/HkCsgFyCWV+cGqsagF+/9Sal1Y3UlheTBepbD1FVvHlhj42MoCsogFSM
      2dk5enr7qW3ag1gsJpe90SPjqed+i6XJYd749buEQiFmJkYYX4rQWGVFKpUiel8IEokEECGV
      bn5CjqDPTX9vDxprETJArpDDtX9Fv7Gt4YuniCjMtO9rJp1OI5crNtcvgljQi85i/8Bu33Kb
      AS+DvT1IjXbUktz7tilCJBJ9YB2IxIhyWQCOf+IoZ371C+Q6+431i8SIRDmCQR9D/b1kNFYM
      srs8PwJ35N4FIFVi0mvYW2kHjRWxXINJr6GkyM746BC+cAIxYDaZAFBqjRw98RQWyQbzYQ3t
      DTZyuRy5XI7iur0sjXSz6gkAsOycJ5kBg95A29ETiMIBcrks5KCiyEz3lR6WXV5AjMlk/MDn
      sc7DROJJMpksIpEUk0kPgMlsQmGpBN80zmUXAPbSUlZnpxiZXUGvkW/FazKZMThaSK0M09fX
      h1yt39r162Xe/3n8scOEogmymfS1bRq3tumoa2Fx9AoD405Mes3mShQWVPiYcS4j09oIrTg5
      2NkOwMLsJF0XztHSfoQTxzoJRuJkMxm4lZAE7gvRo9YZbnp8iEA4jscf4bmnT+Q7nG1hbWme
      gYkFnnnycQjM8eZIjN96rCnfYe0KHjkBCAhsJ0I7gMCuRhCAwK5GEECe2NjYyHcIAggCENjl
      CAIQ2NUIAhDY1QgCENjV3HNnuGg0SiaT2c5YdhUhp5N4JJLvMJBarUit1nyHkTfuWQBq9Wbf
      nx/94HvsO/w482OD2CsacC9MkM1k2ff4cxQZFNsW6L2QSwU5d2UWVSbEniOH+e43v8v/8OXf
      5x++9zIFRQ7MpCgo0TO+nORgWz2n3/oVppIKnnvqOGfeeBlL89MsdP8Ee1MnwxNLHOts5+1f
      /ozPPnmApbCEpNRCan2aY48fv+vYgleuEvv12w9gr+8Ow+deRPe5F/MdRt649+7Q1/B6vIjF
      YhLxGJlcDo/Hg0EtJxRLIQqtkFUWUGw1bkesd41IZsDvdhIUiyke6cZitTC0FMTj9ZFTaBGl
      okh0acIJNWIxKPVW1NF13EmIi/V45gdZX1lBWRJgPRRDLJFgUmW50N2HoayGuExDwuPNy74J
      bA/37QHsZVXUVRZRaC1meGgIpdaESqUkl4hiL6vM28V/HZ0SxAoD/TMuHA4bE1fOYy+yk4rH
      SGVvlMtmsyzOTrASBbMcQEzcPU1B+Z4bZTIZNNZKYr4FFMYi3NO9RDOCjXqUEfoC5QnPpUvI
      F5fyHQaKpkaUTbu34919V4EE7g2p1YpCp3sg693NpvZuuW8BTAz3EcmpaC7Vc3HCw+E6E6d7
      ZthbW0L/+CLNzU1Ultm52v0eoWiWQ/sbON09QnNzE57FSZTGYnLBBRYDEp5+6jCn37nIs092
      MDYfIJfeQJVLM+9Zp665g3RwiUhWhSzpRm6qI+pfIRlaYzEgoa7SitsdoOPIEZSSG/H1XTlP
      OKNCk9sgprSgCy+wJrPjmRimtfMYsyOXyaLg8P5a5sI6wotDFFU3IQ17mQtnqNVkmU3pUMQD
      PH78CGd/8SNcsgqMrEM2S/3Bp5jtfh1T87OsjV1AKpFS13GcsZ6z5AJeotYmNGk/Tz/99E3H
      LXL2HBsPwAQbPvcihl1sau+W+6zARhmeWGV/SwPd3b0sLc8R8y0x59ogG/EyteRDLNm8Gp3L
      XmzSEKMzc9d+TzLQP4mjrJQ6hwWxoQT3cDfjziWCsRDjU0uMjY8xNzZDU0cDl7p6GRqbYXKk
      n6klD9OjvYyPjW0tOzk8iKm47KaLH2BxxYdnxUkgGCcY8BAOrePyBfB415FIxHi8XiIhP5Fw
      iNWpfuLaGpprK5lYXCHqWSESCOFd97Dq8QISasvtlNU04vN4yCYjBMJRQmk1031dbMQyPPH0
      US6du4DbtU5VmYWq+mbcLtf9HWaBB8Z9CkBKMhkjGo2y5FpF7ltgzBWhcW87VqOG+uZWym16
      +gZGiAa9vN0zTYVJee13Gy984UVe+cmPttbWO7HEnjI5F3sXSMdCZNIZIMmPvv9j6vfVseyc
      x+lcJpkTUWZU4PTFtpbtPPEUa32nGFty4w8ngM3XoKsuL97VVYIpUInjiBQFW8tkMlkMFhtq
      uYhYNIrCXE7I2cfI5CTeVRdR7yoLwRSH99dztX/qpj2Xqw2oVGq8I+cIosfl8xIP+zh98jRV
      TXv4TaYGrjI9Ncri+2IWyD/3bYKD3lVWA0ksBRrMBjVrngBKvRm9LMXl3iHspZVUltnxeDwY
      dUrcvg2cTif20gri/jUMRRXY9DICcQm5VASLxYzb7SUZDZCRG9DLRGitFtzOWRQGO4pshGBa
      Qqm1gLn5JRzF5s1lY16W12NIEkEqWzrQyB7u4YMPygTvdlN7twhvgfKEf3YWVfzWeZIA4SL+
      mLhvE3zq7Tcprt6DXpzAk5RgEicIiDUU5IJ4kzok6Q2kMimN9dUMj82jFGeoaGgi6lmkf8JJ
      SVExo6PD1NSUI5JbyCWDgIimpkYunnkHid7Gof0t9xzf2yffRp8LMBu18vnnWvn2d9/ky3/4
      Gd47O8Wx/TbeHglgxkNCYkIcX0FhrifsWeTY8ce31vGTf/h7ZLpC1HIx7XsbOHfqJKUtx4is
      DJPQ1mBIOZGYmjmwt5KL597FF4VPPfsk3WfeJprNYqtoZbnvLRydX6ChWAvc2QQ7Xv7hPe+z
      wEfnvltxxkbHEYvF9I5MMjc2xNLUIpPOGRacE4yOzTE4OMTY+BgisYKF6WEmFlaQiWBqdISs
      Uk91TRWpVIampn2M977LkivI2Nj45rrHxpBI7i9El9tFfVUZ9qp6xrq7sFqULIXieL0BSMdw
      +UIsuUKsLUzji2bxr83h9Xogk6BvYAQAr9eLb93LqsuN2V5MJKOgo6UWry/CsUN7cIXSLEz3
      AbA8P83GRgjfRhyf10OWNOseF3FJAaOXL9zfwRbYdrapJbiY1YV5FuYXiGRALhEhksg/ULa1
      0oipqo2Z8SGsNa3U6yO8cW5k63+bRkPTocNb302FxXTsa8a7tkbqfgMFZlx+HDY9Vy5cYn5q
      jBVPgGzUzZoniGvVRTQDLZVWRhbWQaKgbV8zAIXFFfzT3/tvEAM9b79KQlHA4KXTzHoTzA2c
      wxOEVZePDJDKSZkb6SWeFYFEyWNPfIpyuZ+YwoLH56a35ypXe3q3YW8EtoP79gAejwerSY83
      mEAtSRKIgk4jJpWTkkpmIJskGvQSziqpKzURl2gxqGTEQj6GJ5207m8lsO7FarUSXPegLLCy
      Nj9OIC5GRQx/QowoHePAwYM83Lb27riTCRbe5X88CCY4T/ymCZaXlyPWaPIY0e7kvk3wUO8l
      CoqrsahEJKVKfJ4ABRo5IimMjU9TWVfH0uQkxdUNFBd+/B3j3jv1Nhqrg3DAxeOtNZydipP0
      zrDmnOXFz32aK3Mhloau0Np5DLdzDLWplHhgBbnaQFNrBwbVg8lH+JsmuPBf/yvhzU8euG8B
      TM6toJufRWfQga2SX7x8kuOt5ShNWUraXsRu9NO1EmPaeZIvfvEL2xHzXRDE4xdx7IkGvvd3
      p5HFPHildcRdLiwWPZfOX8CnqdhqFU4mEsgzWbxeD8UOAxKx0NNzp7MtZ9isUxJJbvYt7jzQ
      RPfVUQD6r3Th8YeZ7D9PUqq/3SoeEDpyKRe9Q+NoTYV0Hmjd+kesKECcvpGaJJPJYrFaGRkZ
      uvFbNovAzua+PcCpt99EY3FQa1USURhIRHIsT/RTXl/G7GKQpuYq/K4o0bCHfQcOIt1JTvY+
      +E0TrDn+uNCLMw8IJjhPvN8EC3X//LHDxwOkeOtnb1Fa10yZKsabgx4+027j533rOHSgIcW6
      SIKtsAyfa4WIa4nOJx9jcnKFkEiHKrr8Gwb6g4b5UPvee4rs/SZYaPXNHzve5SViUbI56Bqc
      Q5kKEI+F8K97mVl2EfCG6Hj8BNPD/QT866iVcX7+2jls9gJcvkU8fhH7WxqYmxylq6sLb2Dj
      JsOczgge4VFnZwsgk8ZaVMLQ4AB+nxt9NsClcTf7Dx2k72oPkOTSe2cx2B3Ic0HkRYeZW5yi
      okDK7Qz0rQyzwKOJ4AHyxPtNsNDqmz92uAd4eLk+Jlh8Lb+SQH7Y8QI4d/Y9SnRZlLXH6f7J
      f6HzC3/A1NULiCMuKjufxDm5Qi40icrRyfrCCNUWOTgOs9j9U0zNzzJ/6ee0P/c5pgdHOH7s
      8J03+BG5boIVTY3Y/vWfbdt6Be6One0BgKG+y3R1dRENe5EUWLl84Sr+gB+JWsnln7+G3FaK
      Ly7BOXoZl8tNJOAlkkxujfOVFliZ6LmI1+vL964IPAB2vADsZVXsbaylv/syCksJPvc8OnmO
      mLyI0blFysXzeGMKVj03LnD3+JWtcb4gpUCeQ5iid2cimOA8cd0ES6wWtMfvPreowPaw4z3A
      w8p1Eyx0f8gvO14Am9mrT+BeWqBElyWqsrO04mJPczPjgz3oVDI2whFaOtr42S+6OVBdSO3x
      Y2x/zrabuW6ChURW+WXHe4Dr2as9Xi+RgJdYGsLBABKpDLfLxbLLz1OfaOfi2S6yGz76xpwI
      1f3dw44XwOaY5TJIRRhe3MBSoKbIaqC3bwAAuSTNO2+fp66lnsqWAyyM9OQ5YoGPE8EE54nr
      JlhIZJVfdrwHeFgRTPDDgeRrX/va1/IdxIPkpf/yEh0d+/jGN14iFQuw6vKw4V3GHUkxPjHP
      xPgQsYCHydkV7GUWvvXS39JxsINv/803KVJm8IitmNTbf59Yf/1nhP/rdxFrNMITII/seA+g
      Sfo4c+YSYblmM+EV4Gjq4Iff+n/Y39GKy+1icn6Zo0cP4h66Po1SCL0kzoUrQ1tDPQV2Jjte
      AIUNrQz0D1BtvjFh39zQJY4/9zznLmwa3gK1lPfOX+by1jRKFygorWdjberDViuwQxBMcJ4Q
      TPDDgWCC84Rggh8OdrgAbowJ9ntXONxYwuXpIL51L83NzawuTNNYosOVUrMcyPDJw80fW2RC
      S/DDwQ4XwI0xwV6vh2yyAF8oRjQcArGU8aE+AgsyLPUHcfmE9t/dyM42we8bE6yWwJnuYUpK
      bJQU2xno78ViL6N9b2O+oxTII4IJzhOCCX442PFVoIcVqdWKymZDXlGR71B2NTteANfHBIvt
      DYz0D6DW6Sk1wfnuWV783c9z9eyvkEillO85wvzgeSJJMccfP8D5i30UlZUTW18kLdVz5MgB
      JHfe3EcmcvYcycVFYTxwntnZHoAbY4K7zl5g3/GnCbiXqWuux1hgx6CSEYokOfHkk/Sefhl/
      wkB7uZL/+v3XqW1rx+fzkUomSKYzO/9A7VJ2/Hm9Pia4tqme7ndPkhYrbvo/GQ1y9tRJHC1P
      kg45OT+0wm998hA9XZdZWHRiNltZnhwhuB1zNAk8dAgmOE94Ll1CFY8L44HzzI73AA8rUqsV
      uTABR97Z8QJ46a++gURj4p//3mf5kz/9j/zFN77O3/zVX6K1VGBTZVAVWomllUz29fD0p19g
      dXoQpbGEtRUnn3vxRV557RXcSwscOvEc+1sati0uwQQ/HOyKW5BULGG46zSOcjNdw8tkkhFy
      UiUA8WgcjW5zcjqJREwoluZoZweS35iTUpguaWey48+qxWrBZDQSlBby1a9+Bdbn2H/kKYp1
      IjRGC2qtHqVMhtViJpPJUllq472uqzQ3VnLq1ElqGg9gsViE6ZJ2KIIJzhP+2Vk0YrHQEJZn
      dvwT4ONgff3u84amPR5hXuCHgB1vgv/kj/5X/vwv/oyv/M//jhcO78VaY2bcLceokuJfmsJe
      aKSopo6p2QjPtmr41luTvPDMUSq1Yf7yh918/lNP4J4aYHYjQ7leQkahw1FSyo9+/GN+5wtf
      oqZYx+W+MVbn+mlsO4out4ErmqPcUUbv1X60ChHBUABbgQpNzTEONRQBkBgdIy2MB8g7O/4J
      0NFSyk9/eo7Gtj1bv+078BjxjXXUBgtPP3OMyYGxm5YRS250ehCLxYxOz7A4M0NDYz1Br5uc
      soDamlrqKstwT/Vjq9u3VXbSuUZrfQWTU/PU22XIiuqRiQCpmkKj9mPZZ4GPzo5/ApQ1HmF5
      cYlmaxH6HOj0esYGu3FUNeBbmuTdd3s48sRRfv3LC3jCtZj1KrKZDEhVWI1astkEDS0HOaFO
      M+WKUqBVkkhnsVgtAJhKqxgamcNqsZDNZjnU2kjv2BwajYYSux6psgRltJJjxx9nwzXH1JSL
      YEqCPc/HRWATwQRvA1NTU9TW1t7VMv7ZWQw2m+AD8syOrwJ9HNztxQ+bJjgbjT6AaATuhh1f
      BXrpr77Bk5/+HKffehW51kKdTUVAXcJhh5r/8KPLfKLBRF1DJaOLIToqtHQtyRH7p/jsiw92
      nK5ggh8OdrwAYNOc5jJJUjnpVp9+sVhMY5mZ4XkPSeCpF15EG5hm6mQ3slQwn+EKfIzs+CpQ
      S9tB6irLaN5/hNpiHWKNEYUYsmIFTW2HMMhSHHusg3MnT7PiT9DZ2cnBtpZ8hy3wMSGY4Dwh
      mOCHgx3/BHhYEUzww8GO9wCvvPIatcYs6rYXOfnSH/P4P/s3nP67P+f5//HP+fYff4Xnv/QM
      7pQNSTJKLhmh1pgloSvm8oQbu16BXhpHZbDSVGbgb37Rz+c/9QSn3vgxUoWRsspCZAode/Z2
      YNYr7youwQQ/HOz4J8Da4iyDY1Mk1meIakq4fOYsNW0dTJ75KfqizZxA2WQMuUpzUwfogGcV
      vamQYCxLgSjIvDsCbJpncmniWRH7rrUMByPxPOyZwHaw4wXQ0naQzs5Olp1r/LMv/0uqitSY
      rGUkMkqOH22moMCCVqNGr1ZiNiiZ31BSWaTnmWefJb7ho9xuwhVKotbqrrUMZ2nYe4CmCgur
      6zdahgUeTQQTnCcEE/xwsOOfAA8rQnfoh4Mdb4Jf+qtvYLYWU1EoZylXzNH2IrrOzPLZJxz8
      fZeHf/x8Z17iSoyOwaFDedm2wA12/BPAXlbF3jINC74kABLxduZ3E3jU2fECSMdDzEc1tNUW
      o5JCJismHFhjxZ/AZtLnOzyBPHPPJjgajZLJZLY7nl1DyOlEX16e7zB2PcJboDxxPT367RBm
      jnnw3LcJ3uxu/AJXzp2l5cBjjPScx6CSUn30d2gs1gEweOoVJtPF7LclGI9qOPfqO/z2JxqQ
      Wwz0L6R55mg7luwy33pznLJCHbGQj30lBoYSBpRRL9Fo9KbvJRYtSYmKqpomSu2m20QX5Xt/
      +2PaHjtKaPIMAxulmEQuKqrqaNl/kG9//Y/57P/yFwyceoNMKsVn/tEX+dVrP8YbyfL7//iL
      nPn1G0g0BVTbVPzo7BwvPHOUmeHLbGSUGBJ+0sUOCsUZVjZSpJIZNESQKOQoTFX0nX0Ds7WY
      3/7il1DfwnYkRseI/frt2x5bQQAPnm3xAGKxnOqqMlZdbgDcgShmnYK1xTlWPP73ldvcXEdj
      GZeH57d+l0g2f6/fsx9x6nr/GClaSZrQ1jy9N74vrwepKStgYuLGOm6NiuoqO2suN83NzTTu
      3Yvs2j8x1ygis4MLp7vwrU0j0tiRiSCXjJCKb7DkjdDUVI/P4yIc2zTQYomE6ZkZZmZuTJ86
      6nTxzFOfIB0LEYql+cSTn2R1bmzLfDvXk/dwRAU+Lu5bAJvdjW2IUEAuS2llHUcO7MPnC2Av
      q6TYakRTYKGzsxOzyYxJr8PR1IbNIEOnK0CvkpLJZBHLNXgWx7GUlGOzFaIpMHHksQNEAhsf
      +L6nppypBRcajfr2wWXiIFGTy2aQqvQUaORYrvW9GZ8L8Idf+SplJqjb04lFlSSeyaEusKBV
      KZFJxUTjafRqBRmJanOscNxPy8GnefLAHsSGYjo7O3n2yF5OvnOaIkc11Y4iTr/7DvsOHtsy
      33WF8vs9xAIPEMED5An/7Cyq+O37EAlTJz14dnxD2MNK2uMhsbiExGoRUqTnEcnXvva1r93P
      Cn70g+8xvegmujrP2KoLUSzEhZ4RxLkMb7z+Gim5lqRrnnMj80j9s8S0FfRdPsf4YC+T4+MY
      y2o59ZPvICtp4d1Xvou1toqrZ65y8cy7bMhUTPZ1sx5OUmIvvOvYcqkgr7zxHvNj/ZRUFvOn
      f/x1Tnyyk7/+T3/NxNwiKwO9BKLLnO5fxmJS8Hff+ltmnMs0tzTx+vf/mvWshXe+/5f4s3Je
      P3kVu9XEf/73/ycOk4T+qQXGVtIMXz5N4z3cqf0n3yH+izfIRqOCAPLIfXsAr8eL3+8j4PWS
      ZtMohkNB5DozFmMBzc11DM4tkQqsEQl4iaU35+z1eLwkIyHC0QBptYW+rouoLRaGLp3HF0ph
      LzDS2NJAIhEnk7m3WppIZkBOjIxUzsyl69mhV0jHQojkN/fDEYvFlFXVU6YRs54EtaWGdGAS
      mfxGY5lYIuHAwVYudfchEokQKo+PPvctAJu9CFEqTjS1+bYmg4xiu5n+3v5rJTL43GtkAy6C
      Kju9508ilmlRGyyo1HJGzr0Lehs+7wqIFWjEaWLvW7+10MrI8NA9x+coLsBSVEFoKzu0kwPH
      P4lFkUZntaHTm9AqxGSzEA95iGosFMrBZDKhSCWo7zxOgaFgK2GWtbgam91MoaOerGcMjdF2
      7wdPIO8IJjhPXDfBYrVayBCdR3Z8X6CHlbTHQ2J0TBgXnGfu2wQ/7Pinu+haktD7y79hLW3n
      /K9+yuzYIMqSel76N39C7ZGn+ObX/xUVDhPn+6f4+esnsditnHzjVWI5GedPvsFGNI7FXoZs
      GzuSXjfBUqtVeN2ZR3bHEyATZs4jYmLgAgAKjZHM6iCaknLOnL3K3gMH6b/UvVVcIpZQU13F
      6qrr2i9ihBmSdiY7+rRmEmGuTHiwiQJ85r/7QxqryyivbuD5z7yAL5Dhy//yqxSp45isxRTa
      7JgKDFjMejLZDDkRiMhdaznOIsyQtDMRTHCeuG6CpVarkBoljwgtwXlCarWi1OnyHcauZ8cL
      4P1TJD3z+F6KHTUUiDc478xQqJMTXl/laGcHL//k5zx7pJErbgXPHG3n9X/4DlpLBXp5CkuB
      FnHhPsKLl8goy8h4RrE2PcHq7BBB3wqNbUc5vLecP/rT/8hffOP/4N/+6f/F55/Zh67tRWqM
      +T4CArdjR3sAuPUUSRKJmD37D5OKbmaBLq9uoKa2FmvBjfmC3z+X8PLaOvZCAzMzS8xMjaI0
      lhL3ObledxSLxe+bh3iFg63VdPdNfqz7KXBv7PgnwPunSFKIN52sVKVncbyHsvIawv7NNz1W
      iwW5RoNeFSCTybL/yFNEgwHEWgdHSk3Mzg9y8Ol/RHp9lpxCSVOJiTevzm9NjbTZ0vxpzpw5
      R3F1C7lECNWOP7qPPsKY4DwRjUZRq+8wnkHggXPP9yjh5N0f8dFRsncYEyxwaxRNjdvWePix
      jAlecc7w/738E1589gg/v+yixKrm8XoT3zk1y5efqeKHXW6KjCoifg8njh7gBz9+nS8+f4Qe
      l5ykaxoxOWpLC+hZ12DK+Xnh2U7+t3/7Hf7v//BHvP7aaV787PO3jC2XCvLKW5dRZ0OceO5J
      /ux/3zSp3/xP38JoL8GaTWCtMTPhVfPE4Xp+/P2XsRaX8cUvfY6fff+vKWx5nsm3v01F5/MM
      THp44ZmjfPeb/5nf+/wzODckxGUlJFYG7mk6pY8yJljg1hg+9+K2CeBjGRNcXF5NbU0txdYC
      Qj4XGoOFc1dH0UQWWU9kadx3gFx8A4Cyyjpqa2qxmfWwsYrc1khHtZF5TwyzErzRND3nzlFe
      ouHq9O1naBe6QwvciY9lTDCAxWpBLNfwyWefJR0NUFLVwL/4p59nbnmD1ZlBbLNv6SQAABFl
      SURBVI4qbLbCm8paypsxpJcZW5fS3lDKoccOkwoFSelL+OpX/gXxlRniIS+La+sfGp/QHVrg
      dggtwXnio4wJFrg129l6LryoyxPXxwQ/jOymfET3LIBH5TXo5OQUdXW1jI+PY9armHauUFRc
      RnFZKX6PmxxZLAU6BkfnaG3bw8y1Wd9n52YpMhnIKAvQKrY/oW4mfffHLpvNbuVWehDlry9z
      t9zrdj6OfbnTMkIVKE9sbGygu8u+QA/LRZOPZR7UNnZ8V4idxN1eAHdb/mFe5kFtQxBAHhnp
      v8KV/pGPVPbKxbNcHfhoZclleffXJ0kBvZfOMzQ2fVfLnD99kqHxmTsu4lqa5cypU8zNTPPr
      d84QS9+pMpHlStd5rvSPMNhzia5LvdypIhgNeLhw/hzTC66PvC8rzhnOnDpFMLjOm2+dxLni
      +dCyggDyRo7x2UUWZ8f5KHXQpcUlEomPlmc0k4qzuLhEOulh3p1hcnTwoy9DlsXFRRKJxB2X
      MdnK0BHi5Vff5USLlZPdE3dcpqmpkbHRMRaXFoknk3e8ANUFVqS5BAuzfR95X6yFFjbWV5iZ
      nmF9I0rqNml1BAHkDRHZbJZsNnvT9KwfxrEnn2Fp9s4XGIBErkankoFEQTYdI/sRbN7WMqR5
      +rkXmR67cyqavgvvIC3roLXWgssbQqfT3mGJDD/56Rt86YsvcujICeKrToJ3eASEQ0H27NvP
      2prvI+9LJJFjX10Jy2EFv/Ppp+i91PWhZQUTnCc2NjZIhP1EUeMostyx/OLsBFmlifLiO7//
      ToT99A6NYywsRidJItXbsZlub7jfv4w0GURXWLHZGn8bVpwzOFfcNNbVMr/iYV9L4+3FnElw
      6XIvMq2RUpOSQFJKXWXpbbeRjG0wMDhGw942Qq75j7Qvfs8K04te9u9rZLBvgPq9bajlt36T
      JwggT9zLWyCB7UeoAgnsagQBCOxqhK4QjyBjg1fQWCvJJSOUl5ezODuBc8VNcaGZgrImTKo7
      ryOXinD28ggnHjvIO7/6OY76NmLrS4jUFnTEWPD5KSlvpMYi5eenr1JZVU1LQ/UH1uNbnCJV
      UIFNJ7vFVm4msr7MyHKUg3trb1tuoKcbqd5Gc23lnXfkQ5icnGRycnNY6qc+9akPLScI4BFk
      xRXA1fcqco0ZfWEJI0ODFDccILzUw8iCm0KLnWzYDSot0/09lNU0kElsUNX6OPGVURZWXJj1
      Mgbn4cRjMDY2SmVjB0NDwxQUV6EOe4mZLSwsLFCjLSCltDEycBW/awWAeNiDzmzD6wliEofo
      W73Cc888weLoFbSWIlY8GzSV25hbWaJArWU1mODxY0fpO/UGiYpj/P3ffYei8ipymQQGrZqV
      jQQkRRhMBRxttjAfUPCZ9nJO/vIXoDKRiXgIxzLIchKshQaS4jQmcxUh7xwqrYHp6VVM1gLk
      YpBKJTz22GNbx+p2Fz8IVaBHkqb6cmyOCjSZBAPjqxw4+gkiUxcZWYvS2FTHTP8lRmZXmZiZ
      RmGwE3fPEkWJLJdmcnaRJocRX0xMTXUNAMUVtVSX6sikRVzuukw8I+Pg4XZcq2sATI0P8/Sz
      n8btdrO4tEQwlqa10oSowIFJq6LEqKCr6wregJd5VwJJbI3Tp8/hiYJaq0USW2PeFcJstlBT
      U4nCYCcVCdLa5GCwfwhbTS0qqY5YyI9YriEe9hON+glGxAQ9K0SSGXRqFYUaFateH9WNFVw9
      c5LZ1QAz0xPItVbCPg/RjXUi8RvvVTs7O+94LIW3QHnift4CpaJBEhItroVZKmpqCXqWcbo2
      qC01I1HrCW9EcK2tYS8uJJcRYTFq6e0bomlfG7JcnJGpRfbUlhKISzAbVHg8HqxWK9Pjw6j1
      FiSSLLNzi+xp3Y9OksYTzmA1apmdHEOkKkCrlGK1WpmdGEGlMyKVyZDKpLhWXZithTjn5mhp
      3cvYYD8VNXVMT07T0raf1IYXidZEOBDAbNQyMDJFY3UJCYmSTDRJjgxmswn38jyRrBJlLkJO
      ZUJGGolYjAQRl868i7y6nqN76hifnKe40EhGpIRsktHu01Q89tuUm5Qf+VgKAsgTwmvQhwOh
      CiSwqxEEkCdUqo/wqkbggSNUgQR2NcITQGBXIwhAYFcjCEBgV5N3AcQ2/ESSj+70K/71dR7d
      6AW2XwCBOf77P/p3pK99/eFLX+fNC6MfWnxtshen79YjnVYnPvy/7Sbpc9I7sXrHcr29PUCY
      7q7NASO9l7r5zQgvXTjD+VO/YnotxPClszg9YQD+3+98i56eHiZmF4iuO3n9zXd547VX8MWy
      BOZ6+M4P3+DK5Uv88p1z27x3Ah/GA+kL9Ni+CnonXLQ7JGhMZQD4XEvMLK4SiqR48vgRzp/5
      NdPTy7S3lCMBhnu6sdW1sjBylXROhLGoktXRAda1CSQtdZTazSxOj7DgjWAoMNNYWch7Xb3k
      Mmnaj57APTuMO5hg3R/k088d57WfvkFZmYX1DTDrRCiMFViVCWZX1kllRBx/rIlXX36X8ho7
      WakeQ9JJz3SaAtV+qhzF9F48T/2howy8+yoFjU8g9Y5jajhIIpliZWGWnp5eDFYdZBIM9PUR
      XFuj88ln0clFbMRSPHWsjbfPDSGTiZEGPGDVojUW0t7eDkA8sAxSORqRBNG1USRV9c0c2F/O
      q6/+7EGcFoFb8ECqQOaqVnxz/Qxc7af90OYJl4hFZLIwOzZKHOjtHeCL/+T30Uqh7+IpNiRG
      rBI/3UMLSOVKui6ex+Fw0NDSRqndDIDb7QaxjJrqCvrfO0NCpkYjS3D24iDjM4scOXwQSTYJ
      ZJGrDXQcOkg6maLj0AEWpid578JFFDIpzqEruONplDoL7R2HcC/P4XA4qKpvpspRDEBlsYbe
      kUWSMi2rk0NMr/qwqMT41n0UOxxUVtbSWFMBEgX72tqoLZSz6NscR1tRYuf8pVFykiyxWASj
      OEDvtJuw301PTw/T80uEQhFCq2OEFaWMXL0IwOzECO++/UvMpVUP4rQI3IIH5AFEyMUiXAkR
      FvXmJs529XD44AGKrAUAVDc0o5Ru3voam5tZW1kmJ1FQXFJCe3s7v/v5zyKXy0kmU1tr3Xvg
      KAf31vOz115HpVZRUdPAwcef59mje7YSOt0uWZdSpWPf/nb+23/+B5jkN/8nkSvIJG9UZowV
      LawP/wp5QQ3ZbBSJ5P3dfWUgSvFh1DS2UF9ehK20AplEgtGoZyMY2XoC1FSUcqV3jN/9vT8g
      vdJNSrGZX7Sqvpknn/kt/Ktzdz7EAtvCg5koW6qiocxISmbEbilALNdQWahjbHoeuUqHw1GK
      GDCbN+/sOmsZlUbwJLVYlElmnYsksmLKq+twjvYhUenRaZR4VxeZmHFS7KikubWN+eFeVtbW
      UOlNlJg1DE3MsrC0Qtu+vYAYs9l402fb3nqu9gzg9vqxF9mRiKSYzQYACkurCa5OkkROgV4L
      iAms+2k50I6aKAVFdZgMm3MimM12EhEvgVgGs1GP0WxGDKh0RjTyTcEvudbZU1+FTilhxOnn
      cEcTYhFYr+W0LCu20tM3SHnDfjSSFFbLZvdjn2eNkso6LEbDtp8WgQ+yY1qCp8eHCITjpEUK
      DrfvzXc4Ao8IO0YAAgL3Qt7bAQQE8okgAIFdjSAAgV3NA2kI+8GPXuMHP379Qaxa4AHzP335
      n+DyfHgy2Z2G8AQQ2NUIAhDY1TzQvEBte5tJZzJbExUsr6zR3tqCx7tO78AwABKJhKc/cZRV
      lwedVkM2m2VoZJyO/fsYHB6lubGeeDzO5Mwc1RXl2G2FzM47kUqlJJMp1ColiWSSCkcp5y5c
      orSkCKVSQTgcRaVSMjQyDsBTJ46STKVwuT0oFQoCwRClJUUsLC7T3FjHqsuD2+2lqrKcxaVl
      gqENHGUlaNRqMpkM8wtLVFc6WFpZo7K8jLGJKcpKirEVWlh1eVApFYQjUYZHNzM419dWo1Qq
      GJuY4tmnT/Crt89w6EAbLo8XhVzO0Mg4Lc0NACSTKeRy2VasTxw/QiwWZ3R8iiJ7IY31NfT0
      DxONxrCYjVvf0+k05WUleLzrTM86t/XcjY2M0NjczKWLF7FYrQQCASQSCaVlZViuNea51tZY
      XdnMFaRQKGhsbmZsZHMOg0wmg1QqRSaXI5VK0RsMuFZXyWQyWG02ZqemqK6tZXhoCI1Gg16v
      p66hgcmJCXLZLOl0GrlcTjqdRiwWU1VdzdTkJCKRCI1Wy6LTSUVVFR6XC7VGg0arZXR4mKPH
      j3P+7Fk+8dRTzExNYbFa2QiFWF5awmQ2Y7Facc7PU1lVxfzc3MfzBFhcWkGpUKBSKtBq1GxE
      IohEIupqqshkMkzNzDM1vdn8L5fLSWcyaDRq6mqq8QeCXO0bwl5YSDKVYmZunumZ+WsHXU7f
      4AhSqYTpWSc11ZuZxIrsNspKi2+KYXNe3xzXmz38wRCxeByFQrG1/eqqckxGwwdmFlGrVURj
      MSxmE5XlZbjcHopshaTfF/vKqgudVoPoWs82hULOwNAoapWKdCpDU0Mtay43Os3N8xMXF9ko
      LbHf9JvH62NgeIxC62bW6Nm5BWoqy7f+v/7dbitkbGIay7UW9QdBoc1GJBIBIBaNotZoWPd6
      8ft8+NbX2dfWhlyh+MByYrGYhqYmkokErtVVjEYjRcXFJOJxktfmHhCLxVtCsRYWMtjfT0lJ
      CbB5Y6xvbNxan+jaOQmHw1vZNMQiEYV2O5FIhNKyMhzl5aRTKaRSKZMTN6eSD4fDaLVanPPz
      BAMBcrkcOp3uwXSFGBoZZ2hkHLVKxcTUDAaDDpVKSTQaZXnFhVatxu3xsu7zA6BSKYlEo4gQ
      se7zY7dZudLTj0QsRqtRYyu0Mjk9i0qpIJFIEtoIo1ap2AhHqKksx+8PkkymSKVSKBRypmed
      RKNRJBIJFrMJ77qPHBCPx8lks8hkMpLJJGq1mlQqRSwe39r+8NgECoWcyooyYrEYwY0wLreH
      QquF4dEJMpkM8USSQDCIVqNhIxwmEo1iNhtRyOXkcjk2whFkMhlVFQ6USgVdl3tRq1UolQrE
      EgnBYIjqynLcnnXcHi+h0AYSiQSb1YLHu05leSmmggKmZuZQyOVEY3HkCjkezzoSsXjr+/Ts
      HA211SRTKdauTVJ+vxw+2EokGsW1tkYsFiORSJDNZjGaTFgLC8lmMpgtFlQqFSqVivHRUWLR
      KNbCzXxANvummCUSCa61NfQGA/aiIiLhMMlkkngigUajIRqNojcY0Ov1SMRiioqLcc7PU11b
      SzQaRSQS4XG7USgUZDIZjEYjqVSKMoeDSCRCPB5Ho9WSSiZJJpPY7PateFv37ycei5HNZvF6
      PJSWlWEtLCQciVBQUEB9YyPrXi8lZWUPpiV4N78FUioVxON3nl3lYeVe3gKFgkH0hkez75Jg
      greZR/niv1ce1YsfhOS4Ah/C8OAgSpUKmVRKKBTCXlSEa22NVDJJdV0dYyMjWK1Wqmo284tO
      TUyQTqdRqlSo1Wri8Tj2oiKGBwfZ19bG8MAAxaWlpNNpotHoltFtaGra8k35QHgCCNySaCSC
      WCQiEonQsm8frrU1ZDIZNfX1LDqdlJaWkkrdPCYim82Sy2bx+3xEIxEWnU7UGg0LTid1DQ0U
      2mwMDQyg1Wq3yucbQQACt0Sn12/d3YcGBtDqdAQDAcZGRrBYrczOzJDOZNjY2ABAKpMRDAZJ
      pdOUlJayurJCwO8nnUqRiMcZGR7G7XJRU1fH2urqVvl0On27MB44ggkWuIm7NcHr6+tbA5se
      RYQngMB98Shf/CAIQGCXIwhAYFcjCEBgVyMIQGBXIwhAYFcjCEBgVyMIQGBXIwhAYFcjCEBg
      VyMIQGBXIwhAYFcjCEBgVyMIQGBXIwhAYFcjCEBgVyMIQGBXIwhAYFcjCEBgVyMIQGBXIwhA
      YFcjCEBgVyMIQGBXIwhAYFcjCEBgV/P/A3NuAS2wNQSzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Market segment and annual sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3hcaXX/P7dM71W9d7mtvd61vb03ll06IUBCD4EECC0QSEIgDQglP0po
      AZbAAkvZBbY3tnjde5VkyepdGml6v/f3x8iyZUvWjDSyvct8nsePPHdueWfmPfe+73nP+R5B
      VVWVAgX+RBEvdgMKFLiYyBe7AX9KKIrCVNRH50QH3ZNdjAaHmQxPEktGSCpJZFGDUWvCYXBQ
      Yiuj1lVPnasBu9GBKBTuVStBwQAuAKPBEXb0vMTuvu10+06iqkrWx4qCRKWjio2Vm7mp4Vbs
      BscKtvRPD6EwB1gZVFWlx3eShw7/mr39u1DU9LLPKQoim6qu4p7Vr6fKWZOHVhYoGMAKMBEa
      5xf7/4+dvS+RVpbf8c9GFmU2V1/DWy9/BzaDPe/n/1OiYAB5RFUVdvRs44c7v0M4EVrx61n1
      Nt69+a/ZWLEJQRBW/HqvRAoGkCcSqTj3772PJ9sfAy7sV3pXyz382Ya3I0uaC3rdVwIFA8gD
      0WSEb7zwXxwY3HfR2nB5+ZX8zXUfRSfrL1obXo4UDGCZxFMxvvTMFzg+evRiN4W1pev52I2f
      RiNpL3ZTXjYUnMvLIKWk+PbWr18SnR/g0NB+vvPSN0gpqYvdlJcNBQNYIqqq8psDP2d3346L
      3ZQ5bO95kYePPHixm/GyoWAAS+TI8EEePva7i92MefntoV/SPnb8YjfjZUHBAJZANBnlvt0/
      IH2JDjVSSoof7vgOiVTiYjflkqdgADmiqiqPH/8DQ/6Bi92U89I/3cvTHY9T8HGcn4IB5Eg4
      EeaRS3ToczYPHXqASDJysZtxSVMwgBx5qv1RIolwTsdcUbmZKkcNRZYSVpesQyfrafa2YtXb
      KLaUUu2sBUBAoLlo1cz2EmqcdYiCRI2rbkltDSVCvND17JKO/VOhYAA5kEglcu5QsqjBYXQx
      HZ2i3F5BPBXHY/YyFhql0lGFy+RGEmX0soESWxljwREqHdW4TB40khaL3oLb5Flym5/vfLrg
      Fj0PBQPIgc6JDkaDIzkdk1KSdIwdp7V4NfsGdhOI+Sm3VZBMJ1FUFUVNk1ZSCIKAJEgk0gkU
      VclsV1NEExGiySgAJq2ZCntVTtfvn+qje7Irp2P+lCgYQA7s6t2W8zGSKFHpqGYiPE6FvZJi
      Swn7B/dS46plNDhMOBFGK2lxmdyMhUapddUzFhwhHA8hizImrQmT1kyRpYRwIkT/dG9O11dR
      OTC4N+d2Z0sqrRCKJPAFooz6Qkz6IwQjcZSXyeS7EAqRJYqq8Ok//F3OHRAyY3t1kQA5QRBW
      zGNT527kC3d9aVnnUFWVqWCMzkEfJwYm6R3xMzgRxBeIklIUVEVFUVUEQUAUBWRJxGkxUOa2
      UFvqoL7cSX2ZE7v50opVKmSEZUkg6mcslNvw5xR6jX52GLMQK3kfGvYPEE6EMWlNOR2nqioT
      /gjbjw6w/egAXYM+4snF8htUSEMimSYSSzIwHmDn8UEADFqZ2lIHV6+pZHNrGU6r4aKHcRcM
      IEsmwuPEU/Gcj1tdvBaHycX+gT1sKL9idhLd5G3ForfSPdFJjauOocAgHpMXFZVDQ/ux6e00
      eJoYDgzNToInw+MUW0vpGG8jEPNn3YZIMsJ4cBSTqzar/VVVpa1vgt9tbWdvxzCJRTt9dkQT
      KY72jHO0Z5wfPbafq1ZX8KrNDTRWuC6aIRQMIEtynfyeIqkkSStpwvEQvsjk7HYBgV5fNw2e
      Jnb37WB1yToCcT+SICGLMl5LEfsH9tBctGrW7WozONg/sIdad31OBgAwER6jehEDUFWVo93j
      PPDcUQ52jub+YXMgmVJ4/kAvzx/oZXWNl3fedRn1Zc4VveZ8FAwgS/yx6SUdF06EqXLU4DA6
      sRvsmHUWEqkEOo2OUlsZk5EJql21JNJx7HoHCCCJMtFElGpXHYqaxqK3Apm8g2pXHeEc1yEA
      pqPnb/9kIMJPnzjEcwd6L/gE9kj3GJ/6ztNcv76av7xjHVaj7oJdu2AAWZJYwvAHYDri4/jo
      UcKJEB1j7ciijMVk4fjIEXSynmA8gMPoZDo6hUE2oAJuk5vBwAB2vZ3p6BR6jQGAWDKK3eBg
      KurLvf3p+eOCFFVlT9sQ33pwN9Oh2JI+Yz5IphWe3nOSnuFpPvqmzZS6LRdkWFQwgCxRcpAy
      OZNQIkRoJj/41CR6OjoFnO6UU5FMhz4VtjDoz/w91dGjZ4QzLKXzw/yT7GQqzY8fP8ij209c
      Mm7LzkEfH/+fp/jb113JVasrVvx6hXWALNHJ5z6WtZIOgcwCVrm9Eo2kodRWPq92T5GlGKPG
      NJuyqJf16Gf+7zZ5MOssaCUdelmPgIBBY6DUVo4saqh0VOM0uvCai/CYi9BKWgRBRCfrZ8/n
      NLqw6m0UWUoot1ciMPfuqZPnZomFogm+cN8LPLyt45Lp/KeIxJJ86ecv8ctnj6AoK9u2whMg
      S8w66znbKh3V9E/3UO9uZDIyiUFjpMhcTFpNE4qHSClJACrsVQiCQEVxFZFEmLaxY9S7G0EQ
      mAyPo5cNxFNxqpzVGLUmDg7uY3XJOnp83bhNnswkOhFiVfFawokQJq2JeCqG0+gmraSYivqw
      GxwM+Qdwmzz0+E6es+5wZvv94RhfuO8FTgws7WlyIVBVuP/pI0wFY7z37g1I0srcqwtPgCzx
      mBeOx+maOEGxpQS7wYHXUoxBYyCtpCizVWDRWTFqTQwHhogkwoiiBGfcna16G4P+fkLxIFWO
      GkKxIACd4x3UuurQa/SU2yuwG5yzQXKD/n7cJg8pJYkKWHRWhvyDBONBHEYnZfZzhw5ukxuA
      QDh+yXf+M3lsZyc/fHT/ij2lCk+ALCm2lKARNSRn7uoAiXSc5qJV+MKTKKpCSknRNnoEraxD
      K+sY9PcDMOjvZ03JOsw6C0eGD7KubH1mHqDCSHCI1SXrGA4McWz0CAaNEVmUcRhdJNNJ4qk4
      KSWFKIj0+rpJKSmMGhOKqjIeGsOkNTMRHqelaBWjwRGiyQgiwpzV50yohYd4MsV//Gzry6bz
      n+Lh7SewmfW86cZVeT93IRQiS9JKmo899AHGQkv3j9sNjtkJ8IWkxFrGl+/5Bt/47S6e3ddz
      wa+fD0RR4O/euJnr1uUWDLjoefN6tlcwkijR6G1Z1jkuRucHaPa28tSe7pdt5wdQFJXv/n4v
      faO5LQAuRmEIlAPrStez9eRzs683V12Noir0+E5S7axjKDCA0+hCURX80Wmai1ZxYHAPDoOT
      eCqOKIj0TfVQ665HLxsQBZHx0CjSTNTnRHicUls5/ug0aTVNS9FqOsaO47UUMRme4ORkJwCr
      S9YCAh1jx7myagt7+3dT725EEDK6pKtK1nFk+ADDgSEASgyt/Pj3By7CN5ZfQtEE33pwN//2
      npuQ5fzcuwtPgBxYX74RyxneFFnSkEgnkCUNkiihKGlS6cwcYWC6j+HAIOOhsUxYs86MVtYh
      CAI6WY9W1hJPxREEEbPOgihKSKKEKIjYDHbGgqMMBwYZmO4DIH2GurRW0oOqopG0+MKTlNrK
      SKYTgMBwYIjhwOBs57fq7GzdHScSPz13eTnT1jfBwzs68na+ggHkgFFr4sqqLbOvg7HAzHRT
      IBDzE01FCcaD6GQdBo0RALPWgtPkxmV0k0wnqHU3IIsyiVQCRU0jCiJecxF2gwOr3k735Emq
      HKelzwVBZDw0RpG5eHZFOJ6KcnTkMGW2CmRJg8fsJZwIoZW0GLXGOW0WwnUc71laGMelygPP
      HsUXOH90bbYUJsE5Mhoc4WMPfQBFVZBFmZSSnu14iVQCFQVREAknwsiijKqqKKoyu6xv0ppn
      V3ZTSgqdrCeZTqLOni81+3Q49dqisxJPxXCbvQz5B2a3n/lXFjNPoXAiNLtdVUTiva8iHc8t
      DPrlwB1X1vP+ey9fdrhEwQByRFVVvrf9mzzf+czFbsriBBsJD64HXnnS6TqNxP/78J0UO83L
      Ok9hCJQjgiDwhnVvwai5tO+qBtmENrSBV2LnB4gn0zy5e/m5zgUDWAIuk5s/2/D2i92MBREQ
      2OC+m6n8egwvOf64r4foMif3BQNYIjc23MrlFVde7GbMyxVVW0gHX/k1xHzBKHs7hpd1joIB
      LBFJlHjvlr+h1Fp2sZsyh0pHNW/b8F72n1jZjK5Lhe1HlidRWTCAZWDVW/n4TZ+5ZEqXuk0e
      PnbjpxkYjefNTXipc7h7lGRq6TnLBQNYJsXWUj59y+eWpd6Wl3ZYSvj7W/4Zj7mIIyfHLmpb
      LiT+UHzJwX2qqhYMIB9UOKr4x9v/jRpX/UW5fpO3hc/c9gXKbOUAL7toz+XSNbS0GKvU8HDB
      APKFx+zls7d9gVsa77hg1xQQuL35Vfz9zf+MaybeP5VW6B15Za38LsbJodwNXlUUpv7vpwUD
      yCcGjYF3bX4/n7zpHym2lK7otcps5Xzy5n/kL654D3rNabW1qWCUUGxlC2OIgsD6hmI0skip
      y0y5x4osiZS6LQAUO03oNBIAsiRSNrO9yJHZbtDJeOzGBc+fK0MTwdmc50DMz97+Xezu28Fk
      eGLBY+LHjxM7cLAQDboSXFZ+Oc1Fq3i64zEeO/4wU2foAS0Xt8nDXa33cEP9LbOxQWcyHYyR
      TC0tgX8hvHYTsiQQT6aRJBGX1YBGEtHKEg0VLo6cHKO12kMwEqe1yk1aVSlxWdh/YoSWKjf+
      cJw1tV4SqfSs2kMimSYcTeYlSG/cHyGVVnix+xl+vve+WdkYnazj3tVv4N41bzgnZCLwyGOg
      qgUDWCn0Gj13r3otNzXczr6B3bzQ9SztY8dIpnP/wbWSlgZPMzc13sb6so1z7vhn4w8vTb5l
      IbwOE/VlTnYeG+DKljJMeg3bjw2yqaUMr8PEsZ5xmqvcTAdjjPhCrG8opr1vcjZEQVFUhiaC
      1Jc52dcxTLnHiqKqTIdiaDVSXgwgFElwaOggP9r5XdLKaY9QPBXngQM/w232ck3t9bPbU+Pj
      xI8eAQr5ACuGqqpMR6fo8XUTTYRpKVpFkaWYE+PtTITGiKViaCUdsdRcd6WAgEVvpdRWTrmt
      gtbi1TR5W3EYs1NNC0XzO/wZmwoTCMdx2YxsP5rxuXvsRrSyhKJk7vSRWJJAJM6a2iKO9UzQ
      UO7EF4hS7rHiD8e5vLGEve1DNFW6mQxEkEWRUpeF/SeWt4h1ingyzePHHpnT+c/kibaHuarm
      WkQhM+KPHTuGGs98TwUDyCOKqtDr6+aFrmc5MLiP0eD5f+C0kqKlaBVrS9ezvnwjNr0dg9aI
      RtQALCnSMb0CMiKxRIpY4nSRjfHpCM8d6MlsOyNDq38sAMDutkwugkEnE42nGBjPbN81I5K7
      Egz5F/6uJ8MTpNKZKFuA+PG22fcKBpAHVFXl6Mghfnvwl3SMt2UtopVUkhwfPcrx0aM8fPQh
      bmi4hXtWvQ6tfumV3i+UxuyZBrEQ0fiFq0zjMrmZig/N+57d4EAWT3f1RM9pifuCF2iZBONB
      vrvtG3zx6c/TNnZsyQpy4USIR44+xKf+8BG2db+4ZLn0U96XXCjzZLw05R4L6xuKcVoNbF5V
      TkP53GGX3axnQ2MJZR7LrGenzGOhzGPBbNCyobEEj92I02KgqsgGQGWRjXV1RQgCrG8oRhQF
      GsudrKsrosRlzniJPBYEATY0lqDTSLhtuXmIRFHg9pbbZ4c4Z3NTw22I4un30pOnnRIFA1gG
      3ZNdfPbhj/FC17NzUhaXw1TUx7de/Co/3vX9mTTH3DDqNTkf47ZmOpzTaiQUTZBKK4z4Quec
      q7rYzv6OYbx2E66ZTuq2GnFZjdSXOdh/YphgJMGVrWWkFAUBcFoMHOwaRa+V0WkkvHYjLpuR
      CX8Eq1GHJAm4rUaKHGYkUcBu0WM15SaOa9Rp2Fi5iTevf9ucO70oiNzZcg83Nd42Z38lfFpc
      uDAEWiKHhvbz9ee+dM4kNh+oqDzV/ihjwRH+7oa/RzuPLONCeGwmBCGjrJYrnQM+PHYjVUU2
      GsqddA1mVlgbyp30zoz1dVoZSRRR1DTaM542igr6mfeGJoLYTHoGx4NoZBGNLFJb4kBRVCqL
      7BzsGqW1yk08mcag1SBJIhVeK6IgUO6xMhXMTaTXbtYjSyJ3r3otm8o2sX/770n29FJnqqQi
      VENqYBBNaSmCdO7TsWAAS+DYyBG+/vzKdP4zOTi0j/9+4ct8+LpPZG0ENrMOvVbOafw9OhVm
      Ta2XsekwJr2WEwM+Tg5NYdDJiIIwG1pxrGecxgoXqqrS3jdJU4WL9v5J9FqZYCROc6WbgfEA
      XYM+dFoZgUxYRkOZk6HJIFPBGHazHo/dyFQwRu+on8YKF91DU6jAdCiGxailvsyJw6LP2hA8
      diOiIBA/egzlgV/R0tUF6TTQh4+tCFot+svWYX/zm5BLSxGNRpRQRrC4kBKZI77IJJ955GP4
      F9Hbzyd3tryat218V9ZeoQ9+7dFZz8ufAq+5pok3moJM/ejHqLGFjUZyOXF/5MP4vvcDkv0Z
      1b7CHCAH0kqa77z0/y5o5wd4ou0R9g3sznr/syevr3Sq4tNM/fi+83Z+gPSkj8lvfhvJbp/d
      VjCAHNh68jmODB+84NdVVIWf7P7fRQvtnWJVzcUNzb6QSAKU7n0RNZrdd5MaHSU1djpZqGAA
      WRJLRnnw0AMX7frjoVGe7Xgiq33X1BQhia/MZPizKdKBqe9kTsekQ2GYcYsWDCBLdvRuW1AY
      VxY1bK6+Br2sp9ZVT62rHt3M/wGqnbWzQllaSUetqx4BgSpHDUaNCVnUZJVV9uix32cVS+R1
      mqgtvTSy1FaaDWYFNZGju1hJI5eUAAUDyJoXOp9d8L1aVx2RRDhTBMNexWR4ggZPE6F4kHVl
      G0imk5mCGECjt5lQIsSqkjWoKNR7GvGavXPU4BZiKurj4OC+ed9LKwo7+3v55aH9vNR7kk2r
      Lq1c5ZVAEgWubvDmfmBawXLLzUDBALJiIjRO50T7gu+fmOjAorNQbC1le8+L1HsaUVWFQCyA
      RWclEPPPVotJKSlCsQAGjZFQPEwynWA4MDRbd6DMVo5Vb1vwWjt6t56zTVVVHu84zm+PHmLf
      0AAPtx1jRJia46d/JdJY4aKutTZn6SPBoMd41RZ0zU0FA8iG9vHjpJSF/eouoxu9xkgkEaHR
      20IkEWYyPElL8Sr29u+i3t1IMBagwl7FdMRHk7eVYyOHqXBUEowHqXbW4jQ60ct6Bv0D560B
      3DHWds4wKJlOs394bqDZcHSadY1Fy/vglzivvqoRTWkpkju3Sb+uvh7RYsH+trcWFsKyoXvy
      /ApkE+ExXuh8hqSSnBMBOhLMBGftH9wDgEbSkEwnGZnZ58zhTLcvO5WzyfAEwZgf50wKJGSi
      RqWz4mAEQeD117Ww99jwJVcELx9UFdu4sqUMQRKx3HYr0z+7P7sDJQnLXXciiCLaurrCEyAb
      RgLzRxmeQiNp55ROWoilJMOcjYp6TtV6jSRxQ239nJHAtdW1tFR4uHZd5bKveSnyphtXoZEl
      BEHAfNut6NetXfwgQcBy5x3oWlpmXgqFJ8BinEpsWQitpOW6ups5PnoERU1j1lk5Md6GKEis
      KVlHIO5HURQcRiedEx00epoZ8g8wEhymxlmHzWCna+IEDZ4mBqb7cZlcCAgcGz2y4DX9ZwyR
      hoMBtvd20+efRiNJiILAHY0tbKrIlBL685vXsPv40CumPgBAa5WbLavKZ1+LOh2uD36AqR/9
      mMiu3TNhEHMRdDosd92J7XWvRTgjMrRgAFmwUKYRgChISKJIJBEmnAjhMLgAsOltjASHcBhc
      CDL0TfWwtuQydvftoM7TyEhwGJ1Gz3BgiEZvM4eHDlLvbiCtpkmlU5mnygLRoPFUHFVVOTQy
      zK8OHyB5Vvue6GjDZTTS6PZS7DLzxhtbue/xC7+AtxJoZYn33XM5kjh38CJZrbg++AFM1x0m
      +OxzhLp7CUaTBGUdCXcR0uYtiBWVaE6MYtDKWIw6XFZDwQCy4XwxOCoqJyc7qfc0sa9/1+y+
      SSWJS+eezUKy6m2zZUxPhezqJB0WnZVIIoLdYM8Uv5Y0aCQF5TxGp5W1TEYi/PrIuZ0fIJpK
      8ouD+/notTdg1uq4e0sjO48N0ta3sErCy4U33thKTcnpNY5ToWxDE0EOdY3S3h+nW9PChKeC
      0KmAQBXYPpT5dwaCUHgCLIogCOd1S8ZTMax6G22jRym3VwIqta56hvyDRBJhhgODKKqK0+ji
      8PABqp21dIy1Ue2s5cR4Ow6jg86JAaqdtbSPHcOqtyEgnDe/wKw1s2ugl8Q8j/pThJMJ9g0O
      cF1NHVqNxEfeuIlP/s/TBCL5TZq/kKxvKOZ112XG76qqcnJoihcO9bHtcB9j05Gcz6eqBQPI
      Co/5/Iste/t3ARCMz43AHAqcdk0O+jM/UI/v5Jy/EX94zmtfFhIqHrOXnYN9i+43HDzdnhKX
      hQ+/cRP/8dOtpNL5lU25EBQ5THzo9ZtQFJXnD/fw+5c6ODk8hbLMHOiCFygLas8reSggzLgg
      DRoDkiihk/Xo5HOlS7SSFo2kmdlfQBSk2TQ+jaRBK2kRBRFByJS6ng+bwY7D6EKWFv/p5LPG
      yRubSnnv3RtednFCdrOeT7zlKg51jfLRbz3BVx/YQeegb9mdHwpPgKxo8DQjCuK8+b5WvRWb
      3k4incBrLmI0OEyDp4lwIkzXxInZp4JZZ6HJ24IsyoyHxpgIj1PpqCacCBGI+al21jLkH8Sk
      NaPX6OgYayMxzyS43tWITtZR53BxfOz8Eui1zkzyylQohj8UQ6uRufnyGuLJFD9+7ODLYn3A
      bNBy79VNfPuhPZxcogbo+SgYQBaU2copsZYx6O9fcB9fZIJSWzkmnRmNpMWgUTOF7UyZ4ZNO
      1nFyohOTzozT6GQiPD57rMPgpMd3ksnwBFfVXEsoHpy38wNsqLgCgCvKK9ne38NkZP6xr0XS
      c/jwJN/+6X7Gpk/nwOo0EusbirlmTQVbD/df0kZg1Gso91j4yZMHl5TimQ2FjLAsefjog9y/
      975ztpt1FjaUX8HJyU6cRheJdAJFUVBUhfHQKP5YJnlGJ+tZW3oZFp2Vvf27aPQ0E0/HmYr4
      8MemafK2MBYcnVnVlRgJDhNOhOZcy6Ax8o3X/wCD1kg8laJ/eorfHD3EVHSuEcSmFYY7EsRj
      53Hfiplk9KlglOQlOCeQJRFJEogn8iM2sBAFA8iSQMzPJ373t+dMdHPFZXTjj02fN7ZoIe5s
      eTVvufydPNPZwa6BXiLJJFpJwmk0Uud0I4sivvE4v32iI2t90NpSB8lUelbU6mIjkEm8z0Z3
      KB8UJsFZYtXbuLP1nmWfZzIysaTOb9Kauav1Xh5rP8azJ08QSiRQVJVYKsVQIIBGlNhSWsPj
      z3XnJI57cmiKmzbU8JprmxEv8uRYlkTqyhwkllHxJVcKBpADdzTfPePrv/C8ef3b0GksbOvr
      mff9rb0nuf/Zw0sSx/39S+28+cZVfPGvbmFN7RLi65eJAKyt9fIXt69jeDKUF+9OthQMIAf0
      Gj3v2/I3aKWlSxcuhQ3lV3BDwy1MhMMLTlrjyTR/PNCzpPNPBWMc7ByhscLFv7zzBj711qtp
      qnQhrrDOoigIrKn18rl33sDbblvLA388Sjh2YWOWCl6gHKlzN/COK9/HD3Z8e8kyiLlQbq/k
      fVf9LbIoY9UtrA2UjCvnnfQuRlvfBFtWVyBJIltWVbC5tZzjvRM8vquTPW1Dee2YZoOWLavK
      uXVjLQ3lLib8ET75nafyrmydDQUDyBFBELih4RbCiRD37/sJ6goaQbGlhE/c9FmseisADqOJ
      RreHjonxc/a1yUZg6UJdZ4tQCYJAa7WH1moP0XiSg12j7OsY5mj3OIMTgZzckoIAFR4brTUe
      Lm8sYU2tF4MuI7sYjSf5z59tzVkNLl8UDGCJ3NV6LzaDgx9s/zaJdP7ja1qKVvFXWz5CIqrj
      wPAIwWgCWRRYYylnwh/BlwjPpgI2ub1sdFWxf/tzS76e5jzpkwadhs2t5WxuLUdRVCLxJN3D
      U4xMhhj3RwhG4sTiKRKpNBo5UwLJYtThthkp81ipLrJh0GnOmWSrqsoPHz2w5CJ3+aBgAEtE
      EASurrmOcnsl39/2zawzuhZDEjQUy5cjTWzik996CX84fs6kUJZEdAaRigoLf3bdGtZWFBOJ
      pZAlcclxPuUea1b7iaKA2aBlTW0Ra2qXl3K589ggT+/NTdIk3xTWAfJAMp3gybbHePjog7ML
      X7kiICDGS0mMryUWWjj69Gy0ssTNl9fwlltW8+Wfb+PwEmoES6LAVz54OzUl9sV3zhOhaIK/
      ++YTjE2FF995BSkYQB6JJiPs6HmJrSef48R4e1b+fpvezmVlVzLY7eFIm7LkCi9Oq4Etq8p5
      ZPuJnI+9vLGEf/zL6xAEgUA4Tuegj56RaSb8ESIzk1+LUYfLZqChzEltqWN2DL8UVFXlR48e
      4HcvLay0caEoGMAKoKoqvsgkT7Y/yo6elwjGAxg1JkptpVh0VmwGByXWUmpddRSbK/nWb/fy
      0pGF44yyRZZEJDFTzTFbrEYtn3vXjfQMT/Hc/h6O900supCm00isqy/ipg01M0UtchtJj/pC
      fOBrj14SYdkFA1gBxoKj/HDndzg6fGg2sUUSJJq8Lbx7ywcotpQgCAKKovLN3+7imX3debu2
      IGQ6aCyLGBq9VuaK5lI6B30MT4YW3X8+yj0W3nrrWja3lme1kqyqKt9+aA9P7s7PnGm5FAwg
      z0QSYf7tyX9acFJcYa/ks7f9K2adhSd3d/Hth/bkvQ0GnczVqyt56UjfvHUCBAE8dhOJZJrp
      UH7cj5tby/nAazdiMy1cwhUyVSc/+PVHSeTwlFpJCl6gPKKi8nznM+f1CPVP9/F0x+NcXfkq
      frxCierReIpwLMH3Pv5qdhwboKN/kulQDJ1GosJrQ6uReOjFtrzWFN5xbIDu4ScZbZQAACAA
      SURBVCk+8/ZrqSpeeDL91J6uS6bzQ8EA8oqqquwf3LvofgcH9zPaUzM7wVwJdh4b5A3Xt3Lb
      FXXcdkXd7Pb9J0b44v1bV6SC4+hUmM/+7x/53DtvoG4ecd54MsUf9/fk/brLoRALlEdUVT0n
      hn8+JoMBnjtPR8hHDI6iqvx+W/ucapNdgz7+6xfbVrR8aSAc5z9++iIT/nMTddp6JxhfQvL6
      SlIwgDwiCgIuo3vR/aZ9RqLx+YcBoihw44Zqakrs1JTYWVvnxajXsKGxBJfVQH2Zk6bKjPaQ
      LIlsbCqd2e6gudKF1aTj8qYSDDqZXccHZ0OLI/Ek//WL7Rck3mZ8OsLXHthB+iwvz7YjAyt+
      bQCDVubq1RXIkkhLlZsKrxWLUUuFN7PY11DunM2pLhhAHhEEkatqrl0wof0U2mTVzP6ZH6Oh
      3EmJy8y6uiKKHSa0ssSkP4rLakRVocxtoa13ghKXGb1WRlVUtLJEbYmDQ12jlHusaGQJEKgp
      tnP45BiVXhvReIreET+qqnL/U4cZmgxegG8hw5HuMR7b2Tn7WlVV9nacX2JyKQhAXZkDt81I
      7cxNo7nKzXQ4hlGvwWs3MeGP0FDmRK+VubyxhEl/lJaqzI2qYAB5ZmPFZjZXX32e9zdhE2uB
      zOqvQaeZ43ePJ9OcGPCxptbLsZ5xQtEEdrMenTajgylJArIsoaoqaUVBr5MzGpeSiCyJqGTc
      m6eGPt3D0/SNBS6K2/GBPx4lMDPRHhgPMOnPf1XNujInRp2GQCSOy2bEaTVwpHuMco8Vk17D
      7vYh1tYVEU+lCYTjmAwapkOx2bDywiQ4z8iSzHu2fJAiSzF/7HyaYCwIqJh1Fq6tvZHXrn0T
      H9n7DJAZpx/qGkUjiyRTCsOTISQxE4V5cmgKu0WPXiuz/0QmVv/k0BR2sx5JFKgsstE76qep
      0sWJgUlsM7Vyx6bC1Jc5aO/L6AtNh2L8fmt7Totj+cIfjvPUni5ef30r3cPTK5KA3znow6CV
      0WtldrdlnjCVMzWHFUWlqcLFVCBKWlEp81jZf2KEjc2l9I5OU+G1FtYBVgpVVRmY7uPhow8x
      Fhql0dvMzQ234bUU847/eOiChf/euamerYf7CEYufKw9QInTzDf/7i5+8sRBfrf1woU+aGXp
      vKmVoiAgigV16BXj6Mhh/mfr15mKZopMt48d49mOJ3jX5r/GqNNcMANo65vIuvMv1mmWwshU
      iM4BH32jCxf9WAkW+xyKqqKk1YIBrAT+6DTf3/7N2c5/inAizA93fAeNvHhyvUmvwWM3EQjH
      aaxwMjQRorLIRiqt0N4/kbUBjZwnxOHU0AsyWVrXrq1kX8cwRQ4TaUVl2BeirtTBiQEf1cU2
      IvEkHf0+HBY9DeVOOvpPbU8RiSUpdpo41DU2p/OpKhw6Ocr49PKiPq9aXcHIZBCtVkankZjw
      Ryh1WRibCtM7Y1yCAKtrvDgtBvrHAjitBkanQkxMR2iucnOoa5TNreUEInF6RqZxmA2FSfBK
      sG9gD+Oh+cOSw4kQUWnx2B9BEJBEgXAsQf9YAI1GRJYEZEkgkUzjshoodpoXOQeklHMDzswG
      LS1Vbtw2I1qNhFGnQZZEpkMxZEmkfzxANJ6ixGXmwIkR6kodTIfiyJKEAJS6LOw6PkRzpQtf
      MIZGFrGZdXQM+Chyms65Xkf/5LInwHazHkVVicSSSKKI2aBFK0to5ExNhOYZ13B7/yQjUyE0
      sohWI6HVSNSU2JFEEZNeiy8YZToUw2MzoaIWDGAlOF+NL4DyUmHRxa60olDmsVDkNON1mJBF
      kf6xAF1DUxj1GiYDUUZ85190q14gJCEUTeALRNFpJFxWA6VuCxpZxGrU4bGbKHGaqSq2EU+k
      2dBYgi8Yo9xjwaTXYDHqiMSTXNFcyrg/QoU3420RgNXVnlmvz5n0jEwTXabOz+B4gJ4RP0ad
      jNmgRRZFBieC6LQSiqrS1jc5J00zragMTQTRaWQcFgOReJJyr5XKIhslLgvhWGZYWJgErwAH
      B/fx5Wf/dcGk+fdu+RsefVqlo39xJejl8Be3r+X+p49kHXbstBjwBaOzqxgqmaeIqmb87SoZ
      lebRqfA52zlj37PJ59zizLYt6fiz2lh4AqwALUWrWVU8f82qKkcNV1Zt4fXXt6xoG9w2Izdc
      Vp3TMb5gZpiicrqDneosp16PzmRwnb39zG1nM98wbKmc2bYlHX/WwQUDWAG0spb3X/0hNlVd
      hVbSIpDR+2wtWs2Hr/8ERo2RjU2lbGgsWZHrCwK8/ba12M16cg0rMuo0rKsvwmk10FjuxGM3
      Uum10lzpzvlcp3BaDDnvv6bWi14rZ8JBar0YtDKrajx47SbWNxTTVOFCEgWKnWYEASxGLQad
      jFGv4bL6YhyWTFh2qduS+euyIAoCbpuRyxqKaa324LIWJsErhl7Ws7FyM9XOOjSSFq2sZTw8
      zne3fYOf7P5fjo0e5K/uWY/dfP74+aVww2XVXLeuCkkScZhz63wOq56BsQCoGY3OcCyJ3ZLx
      plQVZZ+rfCZFDhMaOfuuVuaxcLx3gsYKF1pZ4tDJMRoqXIxMhghE4iSSabqGpvA6TDRVupBE
      kQqvDa/dRJHDhC8QpbrYjs2kY02tF0GAVTUePHYjLpuBYDhO36iflipPwQ2ab5LpJI8f/wMP
      H31orpBuGqLJKOOhUdrHjvNE28OUWsu47fpX8YenU3mL0FzfUMz77904m51VWWybI4++GOKM
      HtDhk2MEwnFWVXsw6DSUe6w8ubsLm1mHxaBjYDx7Md2qYnvGHZmlJ0iWRG6+vIZ97cM0VbrQ
      yBLHesZpqXLP+Z5qSx1oZAm3zYggZDxnqgobm0s53jtOQ7mTaDxFTYmDgfEAFV4bwejpSfre
      jqGCAeQTX2SSb7zwFdrHjmW1/1BgkOHA96luvZLBjgYC4eUZwRXNpXz0TVvQa0//rKtrvOxp
      yz4ILRRNsP/ECGlFwWm14wtESaRCBCMJXFYDo1Nh/KHcEmnW1Ho5OTSVtQGMT0c42jNOuduC
      PxxHFMh4wiQRfziGVs54fvpG/QyMByh1Z4Y3douezgEfzx/owWk1MD4doXd0mAqvlUgsiT8c
      z+RMJ9IkU2mqimwFL1C+8EUm+eLTn6d/undJxzc5NyL6rmFP28jiO5+FXivzphtbufea5nNK
      J50cmuJj337yggrOnolRr+G7H7ubHz66/5JLhoHCJDgvJNMJvvXiV5fc+QHafXtoXDPAZ//i
      OtbVFWWVFGPUa7huXRWfefu1bFlVQTAS5+z7WXWxfd7srAvFhoYSrCYdld6lzR9WmsIQKA/8
      8cRTHB89uuzz/OHIb/nXV13Nv7zrBkZ8IQ51jdLWN8n4dJhwLIk4E/Y8MB7IpFOq8NKRPrYe
      ylSMFAQwGbQ0ljvZ2FzGtWsrMRu03HN1E1/55fZlty9XREHg1Vc3AtBctXiiUL64/co6/OE4
      7X0TuG1G6sudvHiwbyZvQsSgkxkcD+K0GgpDoOWSTCf5yIPvZyqL8qbZsKnqKj503SfOKc4d
      iSV5fFcnv9vanrWSg9mg5ZbLa7j3mmb+42dbV3zh7Ww2ryrn7//8akRBIBJL8s7//N0Fqfyy
      tq6IvlE/HrsRQRDQzORKJFMKGlkkmkih00iZHIoVb80rnAODe/PW+U+dLxgPzBbnVlWVzkEf
      3/ztLnpGcouoDEUTPLS1nZeO9HPHpnq6Bn1LVp7LFbNByzvuuGx2KGfUa2ipcrP/RO5znFwp
      dZnRayRODPpw24wkUwqptIJRryGdVlBVlf6xAFtWlRcMYLkcHTmc1/PFU3GOjx5lU9VVqKrK
      jmOD/PevdyzLTTo+HeH+pw5T5DAxtEQBrFwQBYH3vXoDJa65wXobGksuiAE8vut09tv5omYf
      29lZmAQvB1VV6fXlX924fyozmT7UNcpXfpkfFYdT4c3ZFNheDgLw+utbuG5d1TnvbVlVju48
      MuwXg4IBLAMVlUgi/+rGwXiAsakwX31gR04F7xZDVTNGu1Iq0KIo8IYbWvnzW9acM4eBjBrd
      2rrlSarnm4IBLAMBAVHI/x1NQOQHD+/Lm2zhmaQVFUkUecvNq5HyWBVSr5X563s38pZbVgOg
      KOo5LlmAuzY35O2a+aAwB1gGgiBgNzroncqfuC3A0Gh6NsF7Jegc9PGaa5r4z7+6he/8bs+y
      K7Q4LQbWNxSz8/ggv3+pnWAkgSQKOK0GKrw21tZ6ubypFKtJx9q6ImpK7HQPL62OQr4puEGX
      yW8O/oLfHPxFXs8pjt5JcGplF44aypz81wdvI5VW2HFsgAdfOM7JoeyVGyQxk1Se7RDNpNdw
      2xV1vObaZo71jPPF+19aTvPzhvS5z33ucxe7ES9nDBoDz554Mm/nU1N6wsOrWWh02lDupNhp
      JpZI0VLlJhJLUuqyIAiZHN9KrxXfjOejqtiGJGR84JVFNqZCUZoqXETjKcamwlyzthK7WU+F
      18Z166pw2QxM+qPEE6nM+SQRScz808oSTouB1moPN1xWjVYWGZoMZV0sL5lSaOub4IUDvWxu
      LWNoMjSbf3AxKQyBlkmNq44GTxMnxvMj+VGkuYxuNfOzmA1aqovtDE0GqfBYGfdHqC11cLBz
      lLpSJ6m0MrM6LFBdbEdVM0ktLmsmBdCglWfDocenw2xsKqVnZJqGcicHu0Y50j1GmdvCyaEp
      vv/wPtr7J2djhrSyxGUNxbzl5tUZYS6NjEEnE0+m+fLPt7GnfXhJn88XjPLvP93Kjeur6R6e
      umDrEgtRmATngbde/o68TIYdRhdr3DfMvm6t9uAPx+ZobB7sHGVdXRFHusfoGvKxvqGESCxF
      MpUmlU4TjSVnKsVkVjwz2xVC0QRGvYZQNDGbodU54KN7eJrP3/cCx3sn5gTMJVJpdh4b5Lu/
      34tGljDqNaTSCv/1i23saV/e/ERRVZ7d1z0j53hxKRhAHmjwNPPatW9c1jk0kpb3bvkgkchp
      z8yu44P4w3FC0QQHu0YZmghSU2LHH47jdZhorfZwoHMEj91IOJZkOhSn3GtFUVUkScBm0hON
      J5kKRakvc7Lz2CCrqr2zys0T/gg/eeLgeb1Np4plA/xua3veJucqXJCwiMUoTILzRFpJ8ZPd
      P+Sp9kdzPlYjaXjXpvdzff3NfOUX23hhJrhtPk6FFpxvspptudQih4npUGxR2cSaEjsf/7Or
      +Og3n8i7xKJJryGZVi5a0YzCEyBPSKLMX175Ht6+8V1oJW3WxzmNLj524z9wff3NAMiLDAsU
      VV3UU5OtCkQknsxKrcEXiPKLZ46siL5oJJ7k2jWVeT9vthQmwXlEFETubL2HjZWb+MORh9jW
      /QKR5PwrxV5zEdfU3shdrfdg1Bpntzut2eXwnvKlb2wqndX8N+hkRnyhrAveee0mwrHkvAtW
      Z6KqmeHYSqCqGYN97bXNPPhi24pc43wUDCBPKKqCPzrNkH+A4cAQVr2VjZWb6BxvZzIygaqC
      1+xldek6rqjYTJ2ncd4nxUJiVmciABaDDgHQayVGpxJ47EYGJ4JYjTpkScSk1yxaA+zKljIC
      kfiiVVs0skggsnJDlAOdI/zwU/eSSKZ5ZEfudY6XQ8EAlkFaSdE92cX2nq0cHj7IWHCERHph
      IdoBfz9DgUF29+2k2dvKlVVbWFOyDr3m9F1/VY1njmbnQmhkEY1Goq1vkqYKF/FkmurizFNB
      gEWD3gQywWl6rcyPHz+woD/fMCNNMhlYOZ+9PxxnfDrMO+9az1QoxrY81EzOloIBLIFEKsFz
      nU/zxxNP5RwGoagKk+FxXup+npe6n8eqt3Jj/W3c0nQHLpM7s9hU5eFg1+iC51DJeHAcZj0a
      WeJ47zixRJpIPInFqCWZVhbtsOVeK1XFdkrcFkanQjy+s+ucuYVBK/PeV2/g8Mn5dU7zyYgv
      RInLwgdfewXJ1MqGgpxJwQuUA2klzZ7+nfxsz4+YCI/n9dx6Wc+rV7+OO1pezaETk/z7T7fm
      9fxn89ev2cgdV9YDGR3S/SdGeGZvN4MTQWRJoKHMyZ2bG6gqsvHln2/LSyX78/Hpt17D5lXl
      s+257/GD/OGldlZ6nazwBMgSX3iSH+/6Hnv7d6EuS5xvfmKpGL86cD/bul/gHVe+n5YqN8d7
      J/J+HYDKIhs3ra+ZfS2JmWJ7lzeWkEors8rUp0KatRcghl93hpSLJIq8887LaKny8L0/7MW3
      gsOvght0EVRVpWPsOJ97/FPs6d+5Ip3/TAb9A3z52c9T3TiMXpv/jidLIu979YZ5O7UgCGjk
      TK7smfH8LpvxnH3zzdneL0EQ2LKqnK998HauW1e5ZFnGxSgYwCLs6d/Jvz31z3kf8pyPRDrB
      C/2/wV5xdFbhLR8IwNtuXcOa2tySUhrKnXlrw3wYdRrKZjQ8z8Zu0fOxN1/FP/3l9TRVuPJ+
      7cIQ6Dzs6t3Ot7Z+lWR65Sq6n4+AfABzaYrw0GqyXNtaEEGAt966lns2VpOamAAERJMR0bD4
      ukNrlWdFyiedYnWtd9HknA2NJayrL2JP2zAPvng8b8PDwiR4AdrHjvPFZz5PLHnxQ3Zr9Tcz
      0FWx5LpiRjXFmxxxtkQGSQ0MoMRjgICo16GprMJ8/XUYN29C0M5dl1BVFdIJUBW+8ut9vHh4
      ZSbCn37bNWxuLZ+zLZ1WCEYTjE+HmfRHCUbiKKqKKAjotDKjU2GOnByjrW9iWTFFBQOYB390
      ms8+8nEmIyszCc0VSZR4z8aPc/iYxLP7urMOIZZEgQ3qNHcO7scTO7+YraayAue73422sSEj
      MqukSO7/GcmjD6Imo/Tp1/IPRzegLlIEPFfqyxx88f23zsYvHeoa5cVDvXT0+xibCi9a6VGr
      kUjO7KPXykQTqZxkIAsGcBaqqvK15/6TPf07L3ZT5uAwuvj3V32FSERi66E+th8doGdk+hxj
      kESBCq+NK5pL2Rjow/i7X0EyuyGcoNXi/siH0K9fT/LAz4g/90XOLEfx49CdPB29PG+fSZZE
      Pv+uGyhxWXhm70me3HOSsamliwxIokBzpZumShdum5HRqTDTwRj+SJxYPIWKikaS0GkkbGZd
      RlW6YABz2dW7na8//8WL3Yx5ubnxdt616f0IgpBZk+g9wO/2Pc54wI/L5OXVa+5kbVU9Jr2W
      ZOcJxr7wb6hZdv5TCDod3s9+mtTOT6OcleQTE4x8MfkhTkzlZ+p495ZGtBqRx3Z25k0eHjKT
      /cYKF2+7be2iKhQFAziDeCrOZx7+GEOBgYvdlHkRBZF/v/trVNgreaLtEX6+7745E3SHwclH
      b/w0NdYqRv/xn0j2LhxWfT60tVWY6w+i+s86XpSJ3X0f//rIUM4qdWdT7DSTTKVXNMRCEgWu
      XVvFu1+1HqtJN+8+BTfoGezo2XrJdn7IhFE8dPhXjASH+fXBn5/jnZqK+vjZnh8R2r1ryZ0f
      IHGyl3TUc872iKWOfaMSDeUuzIbsQ77nY8QXWtHODxkJmOcO9PDJ7zxFR//kvFGvBTfoDGkl
      zRNtj1zsZizKnr4dlFrLFhTk6vGdZHj3Y+RWGOlcUsplGJu8pLqeAyWJ31jPF0fupq/zyOw+
      Bq2MTitnpV8kADUlDib8EQKR3ApsLJfhyRD/8P1n+NvXXcn1ZxUOLBjADN2TXfT6cgtsM2vN
      hBIrr7V5Jiklxa7e80idqypq3/Jj9xO9Qzg/+J+ooRHUVIJfbR2lr7tnzj7RRIq33b4Wj83I
      s/t62HdiGFVVUdWMh8agkyl2mllbV8SqGg//98ShC975T5FMKfz3r3cSiia4a3PD7Ep3wQBm
      yDXMocJeSZO3lZ29L7G2dAOD/n5kUcZpdNHt66LaWctUxEfnRAcNnmbsBjs9vm5qnLVMhidm
      4m3krMspnYk/No1W0pFIn9uZSo3F6FPBnM95Nmm/HwQR0VqGoqh0js6vgXpycIpYPEVb3wSp
      lIIkCVzZUsY77liH1aRDr5WJxJP88w+fW7YA13JJKyo/eGQ/FqOOa9dWIghCYQ5wigODe3Pa
      P5wIAwKCIBJJhLEbHMiShoND+2gpWs3R4cPIYub+IgkibaPHaPK2cGBwHxpJM/O0yRhcub0S
      s27+UID5iCQjbKq+CuEsn7xBY+DNG96OLOXhviaejhUShIVLne4/Mcz/PXmI6VAMRVVJphS2
      HenngT8eRa+VSSsqX//VTk4M+JbfpjygKCrf+M1O2voykvYFAwBiyShD/twmv6IgEk/FKLGW
      Ek6E0EpaJEGktWg1fVM9NHqbEUUJo9aEJMrUuxsZmO6jtXgVgiBSaiunxFqGLMoMTPcRimd/
      104rKdaXbeRvrv0Y60rXU+Os45qa6/nsbf/K6srLEW3LV5WTvV7GwyGe6mzn0fZjNDU65hTf
      g0xt3kBk/gSgZ/Z1MzYV5qGtbSuWTrlUEimFr/5yO9OhWGEIBNA/3UtKyc0PPRmZpHOineHA
      EDpZx8nJTtJKGq2sI56KoZN1JNNJPOYijo0eQStpiKfi6GQ9iZm/46Ex0srS4msGpvt4w2Vv
      YVP1VSiqgiRIs+Na/apWQoPL63RjZSU8uPMlIjPrCKIgcMN1ZUz0J5jwRyn3Wrl6dQVf/vm2
      eY9XVdh6uI8Hnl1+6aiVYGw6zP8+sr9gAAAjgdxVzlRVYTiQyVqKp06PxeOp2Jxto8HhOa9P
      vR9LLc8FOBLMXFsURERh7oPcdO01hJ56mqx1C89ClSR2FrlnOz9k1CjG1QAfftN1GDVaZEkk
      EI6j00hEF4jFeXj7iRVRksgXWw/1FYZAAP5Y7os668s2YtPbEQURm/50InuFvQq9rMess1Bi
      LQWg1lU/qxxn0popsZYhIFDjqkMUpEwqpDG3UF9/dOE2a+vqMFxxRc6f6RT6TZvwOc+tLBlJ
      JgglEmjkzNPGatJz1ZqKec8hicKKJrLkA0VVCwYA5Bzx6TZ5MOssJJUkpbZyqp21QGYlVhRE
      mrwt1LkasOhtrCm5jOnoFE3eZgDq3A2YtWZWFa8hGAvQUrSKMlsF5fbKcya1521zamHfuyCK
      ON/9TiTPuYtZiyGXluD6y7fjNZvPec+k1WHV609fR4D33L2Bq9dUzElYaalyZy3vMh8CmUJ3
      Oo2E12Gi3GNFEoXZkksem3F2PiIKAqUzuQRumzGzNqGR8NpNWV2rMARaAhPhcSLJMDXOOo6O
      HMJuyNwttbKOQMw/q/MTjPmx26uYjk7htRQDkEjFCSWC2Ax2pqNTFFlKiCYjCGRSELOOTFlk
      P8lmw/upv2f8S18mNbpwgv2ZaCoqcH/0I8g2G7fWNzEUCBCIZwxNFkVuqW/EfFbItFGn4eNv
      vorBmwMMTQRx24xEEyk+8/1ns/scZPSMyj1WhiaCGPUaHGYDZr0GjSzRVOGirW+C5ko34ViS
      5ko3GlmkQpbY1zFMS7WbQDjO6lovqJn0TVVViSVSJFLpRRfpCk8AQCfPHyeyEEaNEbvBQTQZ
      ocZZh9PoosxWQTgepNpVSzgRJp5K4LUU0zZ2jMvKNjIZnqDUWk4incBrLqJjvI21pesZC46g
      kbSIooSiZp/1opE0i+9TVkrRF/4F0403grzwvU7Q6TDfegtFn/snNCUlqKqKVSdweYmIXuhH
      TXVSbh5Hwyj+2PQ5RirORKBuai2nttTB8weyLxguigLXrKlkeDJEsdPMhsYShn1BdFqZIoeJ
      tr4JGitciKLA0EQQm1nHhD9C/NS8Q4WB8QAOs57x6TDxRIpEMs3YVPgcr9W8n70QDAfPnXia
      723/Zk7HaCXtHA0gnaQjPs/C1ClOTVZz9TYtxObqa/jQdR/Pev/kyAiR7TtIdHaS8k0BKrLL
      ja65CeOmK5FnhksHB/fzRNvDHBk+REo5N5JUEiRai9fwqlX3sqbksnNqgcUTKf7qKw/nnLxT
      6bXSPxZAJbPmcGVLGe39E5gNWnQameHJIGUeKycGJmkod+IPxQnFEiiKSqXXxolBH3WlDgKR
      OOm0isOi50DnyKL6SoUhEOAxe3M+5mwBrPN1fsgEsuVyh18Mtym3yuua4mJsr33NnLv3mZ03
      kgjzo53fZVv3i+ddEU+raQ4PH+Dw8AGuq7uRt298Nybd6flCz8j0kjLX+sZOJ+z4glGeP9Bz
      jndpcCKzVrLreMYDZtRpiMSTs1KQS5l0FwwAKLVVIAkSafW0y85rLqbMVsZQYJASaxnjoVGc
      JjeyIHN05NCsAdj0dtaUrmPQP4BFZ0USJQ4PHaTWVcdocBiH0YVNb2PQP4heowdVpcZVR/tY
      G7Ioo5W12A0Ouie7qHM3cHBwH0WWYuLpBFa9lcnwBKgqgfjcjK4y29IEZeer3jgV8fGlZ7+Q
      cyzUC11/ZGC6n0/c9FlshownrK0vP1l0C7lWzyQSX36udsEAAIfRgcPonKP8YNaZkSUNWkmH
      VtYxFfHhNnkZD49h0VuZivgQBAF/bJrJ8CS9vm7WlFzGVMSHWWdGK+sospYiizKHhg/SWpRZ
      AT4yfBC7wcFkZJxGTwuyKHNwcB+rS9YBKpXOanSSDkHIhFnoZX3mfnyGAYiCSJ07P9UWY8kY
      //38l3Pu/Kc4OdnJfz//ZT596+fQSBq6Bv9/e+caHFd53vHfOWfP7tnr2atWu9JaV8sSNpIv
      MjYGE8CGEC6TQAwuCZlp2hloJ2FoA5kpJclkWjpNM5lO2umk0w9Jp20YhktJoDRugTTEQKHY
      2Jbluy1LtqTVXVrtrva+5/TDysLCuljW2lrI/vabdvd9j2bOs+d9n/d5/v9L632CXjvh0Rhr
      63zoOkylMrjtZnqHozNeBVDQRVVtJrrDBQM9q1kubGazeVb5VfJ5jchUmnxeI53NY5IlVvlV
      egYjNFa5iU6lyWs6DouR88NRBKHgQeCwmIgm0gTcNiSpIDtpVWRO9Y2VN8EX2BianTfXdI3j
      Q0cZiQ/R0f8R6wJt2Ex2mnzNRJIR7CYHTvNsuRC74qDe04gsyaiKk4A92hhOVAAADkhJREFU
      AIBRkud1kDEajFiMVvJ6nmgqis1oxyDJ+O0B/PbKWcrRF/DZ/Pins0rL5bUj/86pkePLGuPE
      8FFe7XwZgP7RS3uPvaoFQQCvw8LQeBynVaHz7DCV7tmpSpddITwSo7HahVWRcTvM2C0mfE4L
      ubzGqb5xaiud1AddxJMZ3A4z2ZxGJJ7CbjGRyeWxKjLHzo3iVS0E3DZq/CqaruNVLYiiwPFz
      o6jWwmfzml5+Alxgc2grb5z42NxiKDZIJp9GQGC1bw1HBzsRBYGpTAKbycZk6mObz96Jc2i6
      Rkf/RySyCXw2P+/3vINZtqDICrXuBo4NdWKRCzfzuYluNE2jd6IHHZ2gGuLE0FEU2YymaViN
      VrpGT5HJZbArDqrVEKlsktj0U2BjdftlZYEWYzwxxn8df33Z4wC8fvQX3Lb6znnX/7oO+0+G
      2bC6knQ2z85Ndew7EUY2iNQFXJzqHSuoWptl4oks5uk0qK7rZPM6qlVBlkRiiTRWsxFJFOgd
      jqIYDbQ2+Bkcj3N+aJLNzVXcvrGOvR3nqPGrGAwimqaTz2soVgWDJJJIZzndN15QwStngQpk
      8xmeevWbjMSvvhDschAFkWfv+dHM4dtyeKXjBV7ueL4IV1Xg/nUP89oeI9FPyLI3r/KSTGcx
      GQ2kMjliiTQTsRQVTivDkY8be9x2hXX1fvafCFPlsxdsn2JJ8lrhF9xokBiLJkllcpiMEqIo
      FDJAfeM0VrnJ5vIMR6aIxFN41YJtlNloYCpV2Cs4bQo2s0wyk8PrsHCqb6wcABfzy86XePHg
      cyt9GQvSXHEdz9z5l0ji8mQTdV3nmf98kp7xuev8r4QqRx0DnduJJeeXiC81ynuAi9ix+vOz
      6npKkS+1Prjsmx8gq2XpjxRX6Go4Nkgyt7DZRqlR3gNchF1xcN+6+/n5/n9e6UuZk/VVm7g+
      sH7W33L5HPFMjGQ2QSaXwSgZUWQzdsUx05AzF4nMFNk5DrqWQ1ZPopHl4tsq4LGxutpDdCqN
      bBBJZ/NEp10uhyemWOV3AALvH+3lC1saefvQOdwOM0ZJQkfH77IRS6TpGYxwQ0sVvz7Qzd1b
      V/PB0T48qpk1IS+nekdx283EU1mOnB1G03VCFQ5W+VWO9YxQ43cST2YwGkRMRgMjkSnWNwY4
      OzBRDoBPcseau3m/5126Rq+tVc9imGUzj7T/AQDDsSE+6vuQY4OddI91MZWJk8ll0NEREJAl
      I1aTlVp3PW3BjWyobsdr9c06A7jSPoTFcNkVxi5q/iooToukMlmM0+cgE7EklW4beU3j5Pkx
      BEGg2lc4CQ64bWTzGqIIml74bjKTI1ShMhFLYTcb6R+JUlvpZHA8RvfABKd6x2kKebCZP04M
      CNMvTdMxyRKyQeHc0CT1ARexRIau8Dhn+sfLAfBJZEnmsW2P891ffXtWnf9KIiDw0IZHyGlZ
      /n7vjzjQt4/sPFZMOjqZfJpMIs1EYpyDfft5/sC/0BrcwP2tu6lx1SIIAnaTHQGhqHLvJoOJ
      +kovY+NjH1+PrtM9EMFhmS6iEwQUo4F0NofHYSY8Fgddx2U3Mx5NIhtEqn0O8ppG33CUnsEI
      dosJi8nA6GSSoNdONJGm0m2bLh4sDCuJAmaTjMuuEJ0q6Ige6xlBEkUyuTyyQcJuMZLO5vCq
      lpnvlTfB8/Be917+8d0fF7V84UppD23BrjjYe+Z/Zp1WLxVRENnR9Hke2vAIFtnMU68+zkC0
      eO2KVWqI7b5v8NPXDxVtzKXic1oWNf27mPITYB621W5nODbIy4eev+qmGAuhmp2cHjk569zh
      StF0jTdP7qFzoIPHtz9FW3BDUQOgrWojrdXFOaC7UpZy80M5AOZFEAS+eP0uNF3jlY4XViQI
      BEEkmpws+tyD0TB/9eZ3eaD1IURBQlvGU+UCoiByS8Nt+G22S/L7c1HltVPhstI9EKE+6CSd
      zdPVP8G6Oh/9ozGcNgWzycCp3jHiycJmfW2dDwGByamCu73JINE7EqV9TZCPToapqVRRrQoD
      43FiiTQ+pxW3w0w8keFM/9yqFOU06AKIgsgDrbv5+pbHinLyerkICFTaA4hFXqNfTCIzxSsd
      L+BZYivmfGyp2UbIWYNJNtDeHFj086pNQZJEqnx2zoYjZLJ5rq+v4Ej3CJVuG0aDxKHTQ9RW
      FpqNBApl0qOTCUyyRNBjx6OaUa0mjLKI067gtCl0dA3hsitsaalmIpbEaTUxskAwlgNgEQRB
      YOeau/jOnc8ScFRd9fkUg5n7Wx8inUsva71/OSSyCUanRpbUijkXbouHr23+w5ks0x3tDYuO
      mNc0OruGGI8mcVhNmE0yiVQWh9U04xZjNhnIa4U9mA4cODVAQ9CFKIqER6MEvQ7qgy5SmTx1
      ARdGWcJokMjlNIYjU5hNMv93vH9BS6jyJngJJDMJXjn8Im+d2lP0DJGAQFvVRr7a/nV+vu9n
      dIQPFHX8hfBYvWRyaWJL0Ca6gENR+fbt35lVnarrOt/76W84vIC/sN1sZCqVRdN16gJOUpkc
      g+NxGqvc9A1H8agWLIpM98AEoQqVs+EJ6oMucrk8Y7EkiWSWKp+DWCLN5FQa1WpCp7C06h2e
      JJHK4XIo+FQr49EEw/PsDcoBsER0XWcoNsie46/xTtfby5Y3kQSJNRUtfKn1Qa7zr2N/74f8
      3W9/eE33HAICX277PT449x59kctXla5SQ3zj5j+l1nNpXdLhriG+97PfXKkyyzWjHADLIJKY
      4INz77Hv/PucGDq2pJu20h5gY+gGPtdwe0ERYtr04s9f/xa9kcvvqS0WVWqIv7j7h/zq2Kvs
      Of4f86pPA1iNVu5quY97rvsiijy/+sOz/7r3mjm+XwkGSSwHQDHQdZ1EZoozo6fpjfQwMBlm
      MhUhmU2i6XmMkgnVrFJhqySoVtPka8Zj9V7SnXU4fIgfvPX9lfkngKd3fp91gTbyep7D4YMc
      HzzCQDQ8rWhnIqhWs6aihXWBVkwGZdHxwqMxnvzJGyRSK+OyuRj3bmsqB0CpoOs6//DO3/J+
      zzsrdg3bG27jj296oqhjvrGvi5/8Yt8KnqTMTU2lyl8/uqOcBSoVMvk0xwY753xPEARuqNmG
      0+wiqFbT7F+LLMo0+ZqRRImAowrPdJO8KEis9q3BIMoEHEG8Vh+iIOKzLW6OfWygs+ieyDs3
      1XPH5oaijrlc7BYjf7JrK1bFWA6AUmE8MT7vaa/H4sVsUEhmEzR4GplMTlDnaWAgGmZdZStO
      s5MqtSBRWOdpYDQ+wpqKFlwWD5WOIC6Lm1p33aLXMJYYLTThFxFRFHj0vo1cX7905Y2rgWwQ
      eXL3jdQHC+cL5QAoERZqTBmdGiGairLa18x73Xtxml04FJV4OoYoSCSzyZniOFEQiGdiiIJA
      Opcik0szkZggOS3/6DS7qJzWLJ2Lq7EBlw0Sz3xtO60rHAQmWeLPvnIz6xs/LtcoB0CJEEnO
      755iMVrxWL1MJiM0epuQJSOnR06yobqds2NnsMgWMvksIWcNg9Ew6wJt9EbOY5SMaLpGha0C
      VXHiNLuIJCcYjM6fmZlIjM373nIwm2SefmQ7t7RdmZzLclFtJp5+5Gbam4Ozkg/lWqASYSGB
      3kRmirfPvHWJqtyBvn0AM0snWZTJalkO9u0HZgfVYOzyJOBTV7EE3KLIPLFrKzV+J8//+gi5
      /LWptG0IuvjW7hup9jkuea8cACXCXIJVF5BE6bJEc4vd4XU1MEgiu269jtYGP//02n7OzKEj
      VCxMssQDt7TwwOdaMBrmbiMtB0CJYDNeKkd+gc2hrSSzSbrHu2j0Ns388l/nX4cgCIzEhwm5
      ajg9cpIG72qiyUm6xk7js/kJOVdxduwMNe464uk4uXwWt9VDZ7hjTu3Pha6jmDSFPPzgsZ38
      94ddvPruyUWrR5eCQRK5cW01u29fS7XPseCPSzkASoSKBYSuJFEikU0wlY7PSDIaRAOZfBZN
      z1PpCNLRf4CNoRs4N34W13SFp9vi4XD4IOurNtE/2YeqqBglmbOjZ/DZfDMONxdT6Vi8krNY
      yAaJe7c1sWNTHe919vLm/i7O9E9c8dLIaVO4+foQd2xuoMavLnjjX6AcACVCyFmDJEqX9OoK
      CIQn+6l119M9dgaDaEAURHTAYrSg6zqaruGxeomno7jM7hlpRVEQ8Fh9JLIJHIqKyVAoGHNb
      PETmSLlKooGgOrfjy9XEbJLZ2V7Pjk11nBuc5H+P9nK0e4SzAxOkMzny2qXLP1EQME5LI64J
      eVi/upK1tT7MpqWVrZcDoERwKCpVaojzEz2z/q5Pv06PnMChOElkEwTVajK5NOcnehAQiKYm
      qXKGODZ4BL+9klgqRq27npPDx6l2ruL44BEq7H5i6Rialsdl8cyZ7Qk5V+FYgl1rsREEgdqA
      k9pAQZpG0woN9GPRJFOpLNlcvqAep8g4rCa8qgV5nrX9Zc9ZLoUoHV48+By/7HxpxeZ/cP1X
      uL/1oRWbfyUonwOUELc27kBaQMvnaiIJEjfX37oic68k5QAoIXw2P1trblqRubfVbb8io5BP
      O+UAKCEEQWDX+ocxSkvzLFsuZtnMA227r+mcpUI5AEoMv72SXesfvqZzfrntYfz2a5f+LCXK
      AVCCfKHlXtpDW67JXJtXbeXO5ruvyVylSDkAShBJNPDotsdp8jVf1XmafC380U1PLCii+1mn
      nAYtYRKZBD/+7d9wZKCj6GOvr9rEN7c/OacF0+8S5QAocTL5DC8c+DfePLmnKB7DBlHmrpZ7
      2NX2MMYlGoR/FikHwKcAXdc5PnSUlw49x6nhE1csmdLobeKr7b9Pk6/lsupkfhcoB8CnCE3X
      6Awf4s2Te+joP3BZynEG0UBrcAO3N91JW3BjUdxlPkv8Px8Qc1/W7CJoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Market segment and average check' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3RcR5bn+UufSIsEEjbhvSVAEHQgQe8kkpJQqpJU1WW7VVVdbXfPbveH
      qdmemp2zvT07bau7p07LkhIpL1L0HiQ84QgQ3nuPhEvvcz9AoxJJyJBiiVQhf+fkOSL0Il7E
      e+++F/GPe28I/H6/nwABVinCR92AAAEeJQEDeER4PJ5H3YQABAzgkbG0tPSomxCAgAEEWOUE
      DCDAqiZgAAFWNQEDCLCqCRhAgFWN+H/9h8/nw+l0Psq2rCpcLhd2u/1RN2PVI/70P1bTorDL
      6UQikyH4yjX5cTrdyGTS+yrls1jwuN1f+ewBvhqfGIBQKEShUADQ0VBB16iRuLQ8ouU2GjqG
      yduwBft4Ox3DsyRk5rM2PR6B4LePz3hvC9W3OhBIZKzfsJ6mulokqhC2bStGJRNQefkMqUWH
      0PnnuXC1DFVoHFuLClka6cQuC6Gl4SY2p4f49DVovCYS8tZjGu2kvnWQwq070PjnqeuYZWdR
      Ds3tvaxdk01faw0mcQwFmdE0NbezNn/Nl+q0ZX6St149RuFTz7M+LYax3lZcmkSSQwWcPXMF
      tziIbbt2ofYtcO5qJU6Pn/Q1G0gOFVFZ20RiznoyEiIR4Kf3dgWnrrTzk1/8Ea7Zfhpa+lmz
      sZhwuZ1rZfXkbtpOfLjmnjaMv/8B3pbWr3r/AnxFVpwD1F+vZ2tJCYXZBo59cJF9+3YTJILm
      mloK9x2m8sw7mN2+O8oYUtcQ5h4lqegZwoULjNk15EUL+OBCDR7LBLdvNXChrAX73Aiz6MkI
      8/HGh1cYbi6n1SjiqW05jFqD2JyfQeXl8xgXJjh++iYH9m7lvSOvMjnaxeWzFxkxmrh6owrw
      U1FTR8W1y3j9Xq6W3vjSnT574n2ik3KJClNhnRvj/Im3aRqYwz7Vw7BLx1OH9hOilCHVRHJ4
      QzyTvkjWpkfyxtH32LxzF3Vn32J8yQ2YOHW5kbXZ6UgEXhYsfnZuLeC9d9/nnTffZsO2rZx8
      +y3cq+fD+o1jRQPweU1cPHmS2z3TbMyJ4dhb72C0uvF5bJRfvYRHoUcuEmJbmub69XKsTu89
      dQx3N1NR30ViQgw9deWkH/4FC12V/K8jY1KyMU0NfWbDnFODKOOzkQZpCVH6sdg9bCjaQH1V
      HQBe0yBWcSKhYjOzFtd9dXrv/v20N1VR39yLUh9H0doMAAQaA4kqM//6j/9I/6zlzkKOWVxB
      keiUStITQxiYXAS0bCuMobT8JlMLDpLi9Lz/7vts272HRaefUI0Omc+CPeD18NiyogEIRRoO
      lJSQlxZJypqdvHBgE+cuXkcoDiI2TI5HqEYoALlaz6ZNGwiS3ltNdGwCCwuL6ENVVLWNYOqp
      Y35+FqN1+WGdGu5BExH/mQ2TRiRgG+nE7TCxaBeiDhITFBKP0j7KrM3L7fIKvEInVouJW11j
      99Vpt1DJlu07GWuuxvSph9PjFbJp+17WJoQwtWC9s5Bcj9Q+w6LNRs/QAknROsBOVFI2WzIT
      uFxey6u/eYXdz/+UjVlxaGQC5s2LOAVK5GICPKaIfvWrX/3q7j9KZVLCo6ORAAPtjTT3T7Nv
      3x5Cg9Wk5RcRLTXhkuvRKmRIJOJP5gIiiQxdeDQqmQhlcDj7dm6iv3+IhJRsdu/cTnpsKH5F
      OEvj3Sx6VBzavw25XI4uLBKdSo4sSE10uA6pTIYhKYtkvYjym7fZdfBp9FolCo2OrPRYEKnR
      R0Wzb98u1uZm4XB6CZM5udXRS0hUAirZ5z9x1oVJLl+5QfFT30blmKKhbxaveZqwmAQ66ish
      LI0ta5IRCgQgECFTBhMdFkJqUhTVlTVkbNpLSlQwAgT0ttZQ12Plhy/swbq0xOjwALNmH/u2
      F1JedpPi/YfQq+X3tGG+ohLx9MxDuYkBHhzBao0HsNvsyBVBD0EF8mKzeVEo7k8Fmh0YIDgo
      6CufPcBXY9V+nMUiIX54CAYgRCy6dw70hUgkCOX3fhkCfL2saABulxOX24NEJkciFGB32PH7
      BcjkcvxeN26PD5lMgtPhxA+IJVKkEjEOhwO5XI7P68EvECES+PF4/eD3flKfVCzC63Hj9oJc
      JsHtdCAQSxHiw+cHl8uJ3w8isQSJSIDD6UYmlyMW/Xae4fd5sTucSGVyxEKwO1zI5MuavtNh
      B6EYmVRyh0z7aWyL0xx9+Q0Kn3mBwhQDU4OdOJSxJIQraa4pwy6PYtPaDDzmac5drcLthdTc
      QlLDJFTcbCQ5dxOpcWEI8NPfVsVHl9r4yR//EVqpl6bmDvLXFzDb30ZNSy+6yCS2b867Z7K1
      +OYx7AEZ9JGz4hzgjb//W4ZdXi5fKCU7VsF/+5djSAQ+5Coxx18/jtmyiE8sp7H0JK+friAm
      NhG1d5w/+/kvydl/mMmqt2mzRKD3j3DsQjPtl977pL6CwgKqT7/GS2ca2V28nv/4518ytKhA
      Zmygeghmuyv5tyOniIyO5vJH77JgtmL1SYnSBwPg93k4efwIw7ML+EQK5JZ+/vq//D1JBcUs
      dZRyqrKLqdk5UhLjEApXNoAPj71GiCGLlMwExLY53j36MiZtNrrFRuqMIYjHarFqkzGE60lV
      W7k6LKNkezov/c/XeeLb3+HKu68RnrEejczCa0fPsTYri5iEOPpbq3n56Gn2PLmHK++8w8bn
      fkBeYtSKX5nAHODxYGUVSKhi+949SL0WPF4fQqEIkUSCRCTEarEQlphNelI8xVs2kp6zljVp
      sTRXVfPjP3+B69ebPrc+t9dF16Sf9ZFehhZciIITkFtGsbh9CGUqtm7ZQkp6DutzU3DZrEiD
      o8hJi/ukLqd5inGnksNPHCA72cCtWx2UlOzjdnMHfp8Xq93J+sJ1d3wx7mb3vr203qqiqXUQ
      pT6O4nVZAIwPDxKbkEh8VAgjUwt3FvpYBg1RKclMDKF/cgHQsKUgiuuV9cyabOSs30qsXgX4
      yd+ynrrT7/Kvr76HZ1XOsr4ZfOY6wCv//f9CnrwVpUxEuCGJ9evWog+N5n//q/8Ne9dV3i/r
      /lQBNzeb+5mcmaOvsRKhWIrH7cHn8yAUie+oTzDXS//EDMb5WeqbugEBO4vSKa3uuKtlEn76
      l/8HMfJZfvPamd/+WSTB4/5fPkt+mlpvMzNlpPlWHSkbn+TFb+/m2L/+M7Ouzxbf/WItxdt3
      MHyr4g4ZNNIQw+TYGOMzS0SHa+8sJNcjsc+wZLfTN7xAYmQw4CQuPZ/N6bFcvNFwx+FqfRxP
      lZTgmR8PGMBjzIpDoLH+UUp+8WcMVZxBGxXP7eYmzEsmFEoppVeuM2dxkrW2kFCpiwmTn5TI
      IKacCp575hkWx7vJ2bydpsqr9A1Osmn7Lhyzxk/qmzd72PTEt9lfvI6W1k40SgkFm3bRXXsB
      fUYRCSFiBqeWyEmL49LZDxmbWcKQmkPT9ZMEJ+SgVathYZiqpg68Hjt2kYHvvlCCdbQDq8tJ
      Q3MHyDVkRIg4V9XLWFslkrBkghWST/pnNo5x+coNig4+i8Y5TX3vNG7TDMmFe/BPt+ENSWFT
      duLHMqgQiUKDISyUlIRwqiprSN2wm1SDDgHQ1VRJfY+N73/3AB215TgRMmtyER7kpay6gc17
      DhIRrLxnGBQYAj0efDNkUL+T9vZhsnLSHoJqs4zNaiVIee+Def94sFq9KJWy+yo109eHLqAC
      PXK+GQbwO8DjciOSSh6KN6jb5UEilXzxoZ/COD6OTq1+8NMKhYhUqgcvHwBYpesAdtMsR186
      QuEz3yM/Lpia8grE+kQ25aXSUluOXR7Fxrw03OZpzl2rxueDpOx1pEfKKa+qJyV/M8mGUAT4
      Geq4yYcXWvjDX/yY2d7bdI/OsbF4B8FiK9eu15K3ZSfROsU9bVg4+ga2ryCDivR6DP/2669y
      GQKwSiPCTr33NpFJueiDZcyOjZBcsJW2iye53XyFlgU1ix1l3B5bWvYGXR/LiDuMtemRvPbK
      MdZv30H5iaNMmj2AiQ/O1ZCfmYzA70UTlsiuTRkcf+cEbx15g7VFm3j3jTcD3qCPMavSAHbu
      2U3brSraOkeITExj4vYNPIZ0XKPDxCYkER8durIMKo8iVKUiKymE/ollGXRzXiQ3qhuZN7sR
      e+d47fXjZOStZcEBYcEhyH3mgDfoY8yqNACRPJTi7Tvor7tBY9V5bi8G8/PvP0OkwcD05DiT
      RhNR+ruCWOShSByzmBwO+kcWif9YBk3KWcem1BjOX60GVRQvvvhjWupqUEsFLFnNuASKgDfo
      Y8yqvDUu6xwNjY1sOfQsKscYSs80pz46z64DezBUXcMRmcva+BAAhBoDRbkeEATx3RcOUnbp
      Ipk7SojVLk96h7taaZ928KMXN9PfVs/kvI1nn32aCImFa1euceDZ55A+LOkqwEPnExXI5/Ot
      qnyVVosFhUr1UGRQi8WDSnV/kqaxrw+N+P6Uo08jEIuRxBgeuHyAZT4xAK/Xi81me9Tt+drw
      ejwIxeIHMgC/34fPB6LPcbf4IpaMRtSKe9WhAF8vnwyBRCIR6o916YGOTqKzMpH7/fS11dM7
      aWdr8QbaasqZsfrYsnMXetWdCz9+n5fbdRWYhKFsXZ/DcG8nUUlZmKf68aujmRrpIzcnh8nB
      Dlr6jRRtLmByeo7UaA0dY1ZyUmOYGemhrnWQwqJizKOttPVPootMJi1SRG1zL3HpeWRHBzFm
      kZASE0JnRwfaIAmikDh0EicV5VXE5WzAN9tDx9A0uphUdqzPuafTTsscR159nfUl3yMnUsrl
      yxW4pVoOPrET82Q/5XXL8mTuhm2EiS2U17Wxacce9GoZ+H00l52nbsjJj767j2vnr+IC4jMK
      KMj87Ai3u5n613/DF/AGfeSs+AqrOHcBE+Ccaeejm5Ns35iDy26ipmWQJ3cW8upLr+O7q0zj
      xbeYEMUT4ern/ettVF09x5IT+prK6J40ceKjj1gYvsWJyiG2bS7AbZ7lSnkVJ469iVgTAlg4
      cuwSe3YX43M7qbpUzdaSEnZsXkNH5U0SNm2nt+IEPbNLXDh/FdzzXLhSR/fNq3SMz3Lk5dfI
      LtpBqFLM5cpaDhx8asWHH+Cjd44TkZiNTiNhqqMOuz6LkoO7kAoFhBpSyNT5EceuJT7Ez8tv
      nmPv3q28+dJ/4HD7WBy9TVmbkZyUKNyoOVhSgkFqZsryADEBAR45n/sNl4bEE+af4PSVGoQi
      MZb5KWpq69Ab4hAAM6N9NHX2A9DWMcv6wkTS1q9nvG3lN1t/axM564tQqNQoZFIGW6sYIZKM
      CCWgJCdZzbsfnsWFGK9niQsnT1LZ2IkfF62NdSy4pERExiFwGBlqriJx467lIYxtniVpBJEa
      BSE6LdjmOXP6FNXNXSu2Y/uunbQ21dDZO4EiIhHBdCv//X/8O1bvnWbtmBtCY8hELtcSrhWw
      aHehjUwjTmujorYNl8cNficVLZNsy0+4z0sf4HHgcw3A44HDL/yQnHAHV2u6kSlUTPR2YkhK
      Az+odWHERoYBkBivobt3hsnuTvQpaagUMhbNFhaXbGiVyxNEQ1IK/Z3tuJwOXB4vCTmb0bvG
      GJyzg9dN4e4SDhalcepcKSKxlidKSti6LhMBYpQiB4t+FVq5jILYIF6/Pkrx2pjlhgZpkNuN
      LDlcWG12UIRw+KmnKcrPWLFfElUE27dvp7fmGna5noNPPUOU2MbCXStW0uBobLNDuN12Fi0+
      1HIpHp+PtZu3kh0MF2/2Mlh/BX3eHlSSVakof+NZ0RvU5zXRfKsVkVRFd0s9s84gdmwtRKlQ
      ceCppxhsayE2KRG5XI4iaHkuEJuSxkBTFZeulJOzdQ9b12XRWFOBLCqLDdnxCASQs64YsWmY
      Wx1DRMfFoQhSsbt4Hd0DRmKjg2mpq6ZrZIHtO7ejkjm43dTGzKKbuJhIkvM2kxbswehWkJVm
      wGgVsz4rCYDgiAQKswxUllfhV4QQLnNzq7WDaYuXBEP4PZ2enxjg8tUyNux/mhiVn7KyCsKz
      1pMbF4FAIMDv96MI1hMRGkaExk/FzUY27DpIVIgKv9tBTcU1RqxavnN4K5MTs2wqKkQuvj8D
      CHiDPh48dGc4j93ElMlNTETow6z2oWMxmVFo1A+0EujxOHC5hPcdCP9ppru6CJY8uAwa4OGw
      ar1BHyY+rxeBUMRnhCCvyNz0NLrg4Hv+LhAKEQQM42tjVa4Ejw/1oYlKQGiZYd6nZGGgldg1
      RbhnhxDrI+mqrsAsULC1uAiJw8ilsjpAxpZthdy6WYNPqmPb1k3IJUJctgWOvvIahU9+j6wo
      KTdKq/EI1ew+uIPPWxqbf/U1rCvIoPKCtYT/9V/9zvoe4E5WnAMc/f/+b25Pz1F6rYosg4xf
      /t1L2ExLBGmCeOu1I4yOj+ETyyg7/SYvvX+VsIhYggUz/Ownf0XeE4cZq3iLVlM4ob4h3jzf
      RNv5tz6pr6Agn+rTr/I/T9azu7iQ3/z9XzO4pEE6XUvVgJf++gv848vvodHpKTv3Pv0j41j9
      QUSHffy2dJn55X/+G0xmC8rweGZaSvkv/3SMzTu3UX3qDWpaB5iet5EYH/2Zi1ylp95BGZ+D
      o6+GulkB7dc/YtquwNpfizXMQNXlBg7vy+M/3jhFbpiLWmMYzz25GZF5jIu3ZtmWLuVExSAF
      2Ym8c+QlQuLSiIk1YBtoYEiQwKFd65AIhZ+7yPZZcwBxVBTKLVvu9z4GeEBWHgILVDxR8jRS
      9yIujw+FWkdMrAGlTIDJ7CSzoIis1CT27d5OdsFGCnMSaa2p5g9+/i2ul7eC34+f5ZGV3+e/
      qz43XRNe8sPcjC65EQYnIl7sx+r2IpCp2bNnNxnZaykuzGRx0YQhJZf8jDsXmMQyJTExMWiC
      pDR3D3JgcxLt/TOYlpZQh0ezZWP+fY3tg0ISkZgGsXqWZVCBQEBwRBLBjnkWgfbGSs5cvI7V
      7cU4OURb9wiRH6tfO3ftoKXuJv3DMyjC4/HNtvMvv34Ja2BZ4BvB5wTF/w2yxKLlNIfqYKKi
      IlFrovjzv3iRsbpTnKru+20Bv5vqhm5mF5foqi1HIJbg9Xjx+7wIhaI76hMt9dMzMsmccYr6
      5l5AwI4NyVyv772rZRL++C/+Eqm5m1eOX7rjf0nlKqKiopAJbdxu7sY4P0tdbRNPff/n5IRL
      +PW/v4Ln7pW6T6FVBjG3ZGVhyYJGpQCBkN1bsrha0f7JMS7rPCaJAg2Qu347JYf2opSKCAoK
      or1zgOSkZQk2SBvNrm3b6a69hFMeweGnS4iWmjCuHq+SbzQrGoBGF8PP/s//jH/0JmNLHuyL
      k9TXNTI5OcK581eYtggwhGsRiiSoFUG4rPOErSnmu89+n7x4OeEZmxhtusSpy3Vs2JB/R31l
      Ne089+Kf8tNf/ClL472oVWpCktcjd0wikYkRCEVo1Ar8XjdXL56mf2wOQ2wkp98+wsSSExCi
      j4giJiYG11QPBU/9IT9+8U9QuSa5WX6V5u4hIqOi6ao+TVXXGG+9fJS7n8WiA08x31HNhCCK
      7Tlx5K1dgyYun7071hGl1pAUreDCtZt8+7vfQxEaj3Chk5MnL2ARadi+vZg/+dOfMdzThR+w
      zk9ys76B/B2HUPnNXLt4joh1+4n/CtGOAb4+vhkqkN9JU1Mv+QU5Dy0o/mFiXlpCqdXe17Br
      uqODYNG9GoRQpURiCHh5fl18Mwzgd4Df54MvmKh+yZpYrur+apqbnSVEp7vzj0IhAmFgRfnr
      ZFXKoC7rIsdfPcq6p19gTXwES9MjWMWhRIcq6G6uxS6PJC8jAbd5lmuVywmvYlNzSY1UUFN7
      i+Tc9cR+nDhror+JD8/f5kc//QFqqYDenn6SM9JYHOujvrUXdXg8m9dl3fN1mH/5lXtkUEVR
      Efq/+LOv4xIE+JhV+bo59e4xVOGJBEn9WGaHef03/0R19wwzHWXUDPsYrb9I+7gJiTKE4jQ1
      bUYp6fGhvP7yEVLz8rn07mtMW7yAibdPXCclNgK320tLXSn/8OtXcAHXz5wnefM2CnNTH8th
      W4BlVqUBbN66ha62BobH5lCGxbN7cx4AI/29JKRlkhITxsDEHAKhCLlMhlgiReKZxyaJwKDX
      k5MYTM/4AqBibaae2uZu7C43eZt2kBiuAfykrc3h9qVTvPnBJXyrcpD5zWBVGoBaH8/27dto
      K790R27Q0PBw5mZnmF20EK67K+mULBiRYx6ry8XwhImYcA3gIW9TMevi9Xx0ufaOw2NT8yl5
      9ttYxntwBQzgsWVVGsDi9DB1DY3k7ziAa6KLtmkv5oE65Kk70Zo7sWiSWZeoB0CgimRdhgGE
      Sr5TspMr584Su+EJEnTLjnDtDbW0T9l4em8h9eWlBEeEcr28nvnJAc6cOcv2p76DfFVe5W8G
      n6hAfr8fn+9zVo9+zzAtLqEO1j6E8bmbpUU32uD7i++daW9HI7jTMkRaTUAC/Zr5xAA8Hg8W
      i+WLjg/wkDCbzZ/EYAd4dKy4DjDWP0BYchIyYKS3laEZB+vW5dJ7u4F5m4+CjZvvSDcOy5kS
      ulsasAh1FOSkMDE8QFhMMra5UfzKcIyTI6SmpGIc76NrZIG1+VkY5xaJC1fRP2UnNT4Sj9NK
      Y0Mj4Yk5JEYF09JQQ3xuEVqZn+7WRuacMgpyk5maNZEQG8Vg/wDxyUlMDXRgk0WQEh3MwOAI
      SUmJn9tpl22Jd15/k4KnniM9VEJVdSMeiYrt2zZinRmhoXXZLSM1t5BQsZ36lh7yN2xGp5SC
      30d7bSkNQ05e+NYObpbX4Aaik7LISor+0he+92//DllLy5c+PsDvhhVHp9dOfMQS4Jrt5L3S
      HjITI7FaFrlS0UR+ZiyvvPLGPUHxLdfep8ukRDTdxOmqLm6cP8GiE7rqrtA+tshb77zD0lgL
      715pIyM5DvviNGevlnHunWPYhHLAx9uvv4IuPoMgkQ+XZZLS8x9ytqqb8dbrVA84iY/UsDg3
      ztkrVQCcOvERXrxcOneWsxeugc/NRx+dubs793DmvWPIdAYkQi9TnTcZ9YawcV0uYkAdEoXO
      PcOCNIowpYdXjp4gNzeVo6+8isPjZ3G8lSt1gxj0QTh9ctZt3IjUPETv1P1+PQMz48eBz52e
      iTVRaN0TVDb1ECSX4rKZGR4ZQa0LRQAszIzTOzwBQHPzOEVbsskvLmLgVvOK9fXdrid74zbC
      IiJQyaUMtVbR6wwlLzYYWGLWrCQ1JpzICD2DTdVkHv4F0y03CDakYh9rpqV3AtldewA75wZx
      6bLR2scxOr/cQ7V+00Z6OpqZmF5CpjMgXuzjldfexuEHkUSKMkiOXKHEuzSEIjITvT4avcLN
      gs2JWp9IlMrB7c4x/H4/KpWcxm4jO9clf6lzB3i8+FwD8AlkvPCHPyUpyMilqm4EQgEN5WWk
      5RWAH0QiMVLx8gMZE61kaGQB4+AAwfEJKORSLDY7FosDVdCyYhIRE8fIQB8etwuP10t89ga0
      jnHGl1yACqnQhMnhxulwUNXUw8JAG5NTY1iFWn784k8RTzbTMGjG47Lgddvxi6R0NzdjNs9g
      sS7S1DX+pTodHJnCju3F3C49j1cXz7eefZYw7yJG553fNak6AvvCOB6vC5PNh0omwS8Us2X3
      LlLkNs7W9DB2uxRN5g40MtEDXP4Aj5oVA2IctllaWjoQiqS0NNYy65BSvGUdMpmCkueepbW2
      lsS0VJRKFcEaJQBxKSm01tzg/IVS1u8/zKbcJG5WVkBIMkV5ybicTtYW7cI12UlT5yCRMbFI
      JHL2bcvndo+RhJgIEg06KiprcCFBqYvi0BN7SdCJMftENN6sxhUUzrbNG9D6TdxsuM3GXU/i
      dzvYvf8ghXmpzM/bCPIu0dHTjz42DaV0ZfueGGjncmkla3ceIFru4kZZBZqkPPKTDQgEArxu
      F1JtGNFh4QSLbVTWNbJmy37iwrV4HGbKrl5m2KziW4eKGR0cY/O2IhT3mRUiEBT/ePDQneFc
      1nlG5lykxEU+zGofOovzC2hCdA8WFO+yYXeJUKvub1ukTzPV0oL2foKIA/xOWLXeoI+aubk5
      QkMf78wZq4FV6Q3qtpt4/423yT/0LbIMYZiNE9jEwUQEBzHQ0YxDFkZmcgwe6xzVDW0ARCak
      kagP4tbtduLS1xAduqzhT4+0cupiK9/70XMopQKGBkaIS07ENDVMS/cQqpBo1uamruAN+irW
      1gfPDRr5d3+LNDb2gcsHWGZVLtKfee84KEIR+FxYZod59d/+BxUd08x2V3G9c5GuyrN0TZoR
      yTVk6T1U9VmJCdfwxqtHCIuN49xbrzNr9QJmjr97iYhgBQ6nl5ab1/i7f/gNLqD0o1OEpGWT
      mmhYebXZ5wXvV/gFPtwPhVVpAAXr19Hf3crMvPUOb9Dhnk6Ss/LJjAujb8yIUCRBp9UQpFSj
      FCxiEoSRHBtLTqKarrEFQEFOSggt3aN4vF7yNu/8xBs0MSeDrvLLnLhQEfAGfYxZlQagj8lg
      x/Zibl05e4c3qE6vZ3F+jnmTjdBg5Z2FpFpErgXsbjfjUyai9GrAx8Zde8g3aPngYs0dh6fm
      buJb3/4OS0NtAW/Qx5hVOQeYGeleDmTf9QSuiS5aJpzYRbUoDj6BrPIqc7IYDiQtpz0RKMPJ
      S3GDUEXJwS1cOHOasLw9JIfKACcN5eW0Tlr43otrqS8vRRWi5Xp5PSlqL+2D42x+4lsBb9DH
      mFWrAi3MzaMNDXkIn0AX83MuQkLvb9PqqeZmtF/hyssy0hEGBT14BQGAVWwAj5qADPp4sCqH
      QLOTYyj1UQhsC5j9cswTA4Qn5+JZnESkDUfmtdDa3kN8eg4hQdDc3EJEYiYxoUHcvtWMSxTE
      mtxssM/R0NIDIjlrclLobm9DrAonNysV0RescS28+joem42IX/3N19PpACuyKkenVZdPM7Hk
      YLrzJmVtg5x5702ulDXSfP0c3dNzHHn9OLqIKDxOG8deexVlmIEr7x1lzDjFhdT+nxUAACAA
      SURBVNIGQmUOXnrzBAu9VbTMiklNTsAzP0JF2yhC8xDHT934wjb4PW78btfvvrMBPpdVaQB3
      o4pIx2fsweH14zSO4FQnkBwfS7hWxpxLRkZiLIVpIXQMLCANUpKUuQ7/3BAOoL+jiaqGZtxe
      HwqVltx1RcwMtn/hOQM8HqxKA1DKZJhsTiw2x/IONwIhO9cnUVrbi0Stw700g9vrxesXIvA4
      cHq8jE6biQxflkY9DhMukQIpkF+0m5IndiOXLHuD2kxGJArd55w9wOPEqjSArQeeZLjuGt1m
      JTtyE0jPTCM0dQPrsmKICIvh6R2ZnDl1mv5pC999eidnTp1CHF9Idkw4YQovZy5e5+nvPI8y
      NB7LYD0nz1zGKVYjsU5wuaKF555/5lF3McCXJKACPSKmbt0iOCgIeWbmo27KquaOoPilpaVH
      3Z5Vg8ViQaW6v7WDAA+fFb8AUyN9jEzNExoVT4TST9fgJElpGbgXJxienCc6MRVDWPBdTl5+
      THOT9I4Yyc7JAccig9NmMlPimR0fZHB8Fm14DOkJ9waOex0mbrV2IVOFkJWezHh/O9MLNoLD
      Y0mKVNHa3o0+JhnP4iizSw4EwiDyCnNZGO3Dq4ggOljG2MwSMVGhjI9NYoj5/NQiboeFM+9+
      SO6Bw6RGhGBZmMYh0qJXCWhpasXhF5GZk0OQz8qtth4AwgyJGEJkdHT2Ep2UQfjHrhLGiW4u
      XG3n2Reexmebo7t/jOSMHNQSN61tPSRmZKNdYTO9vn/4R2TtHV/+Tv2eEvqzn6LYtPGRnX/F
      OcCldz5EbjCg00p57chxQkK1LCwsUXrqQwS6SN47+io2912bSi+OcuTdK4QFy7E6fdSXXeTY
      W++z5PZz49QH+EIM6INXTgPimGyj9PYMi301XKrr5dSJk+gNBkKDVbx39DXEmlBMiwvo9BFc
      u3CW0OgIRPg5/9E7fHjyCn77HG+fugp4efft97+w0+c/OI7ZK8Fus2CZHeblf/k7brRN4prp
      5mLDMIboKGRiIUKJnEiRkYuNE+jUMt567QgStYaPjr3OnH3ZG/TN46eRi7xY7HY62rrRBAk4
      +tYHnDx+FGQS3njzXbwrDDL9Tid+my3w83juvThfIyvvEOOz01xXx+jUEtE6GXXNXWi0GvCD
      1+tGIJIgFIDHaWNsbAK3189EZz2G/GLiEtMIVQnoHl5gb34ELf0z+H0uWhrqGByfBaeRf/+n
      33Dy5ElKq+oYGxnB5QWfz4vH60cqEeO2L9JQV8fghJGkhChqq+uQqTQEh0agUauJig4H0wB2
      dT4y2zBm1/0l9MpZk8vwQA9WuxdlWDx7PvYGdQtVRCmdnDlzlnmrG6FETnREGGpdKMFSC/O+
      ULJTU8mNV9I5uuwNmhavpWdkFoFATMGGAnpbm0lKy2BswUFuZjZi2wy2R3uPA3wOKxqAUKTh
      QEkJeWmxHHz+p+zJjeDIe+fx+72011xEGJaJTCTA63ExNzeP1+cnWB/J3MQYPq8H22w/fVOL
      TMwu0tTYhFAYxN7DJRRmJ4Hfg0ajY3R8Ar/Pg9FoxO0Dy9wYl+sHWZseg0wTyeGSEgqzEsnb
      dpg/+NYePjhyBMen2ni7ogqra5H52Rm6py0I3Q68Hg9+oQifx4XN4cJms+JbwRc5OiWfXdu3
      cvPciTu8QaXaaJ5//nkKomR0jM3fWUiqRuhawun1MjVrJjxEDfjZefAgueFK3j1XwfuvvYQ+
      fy+Ht+UhFQlwetx4BRIkgXj5x5YVg+KtpiUMqSnI8FBx8SJdY0YKNxWhkQkpOvgC/olbiPWJ
      hGrVREaGIxYJkOsMOKbaaWrtwoeIvKL97N62gbnJSQyRIYQnpKAUAx4Lt5u6EUck8OyBHURG
      RSH2ORGHpPBMcQp1nVPoRGY6e4ZYcolZHGmjsbWLhJz1pMZGYl4ykZCSQv/oLM8++wz5GQYm
      TWIyw/1U1LeQvX4rwd4pyjrmGG6vJjw+E/ldAeuD7Q1cuVFN1pZdRIpMVDZ1s7RgJFSnoaay
      nAWBlp0b85CIBPg9TsxeBSmx0YRr/JRV3kSbuI7CdAMCXJSeO0Nzv4lnni5moHsAt93ErNnH
      1rx4Ll6tIHvzbhIi7t0POBAUv4xiwwakcXGP7PxfvwzqmOKNo5fw6KP5w2f3fq2n/jRzs0Z0
      YfqHsBDiZHbWSViY5r5KTTY0oPUGtpKUJicj1usf2fm/fgPw2ujrm8AnCyItYfUmgg14gz4e
      rMqFMI/TyvkPT5Gz90mSwoKxLs7iFKkJUcsYH+zFJQkmISYcr32Jls5+APRR8UTpZHT3DhAZ
      l4Jeu5wNen6qj0ulHTz97YMESQRMTkwRaYjGOjdF3/AEQdow0pNj74kL7vunf0be0XnfbQ/+
      3guodu78qpcgwMesSleI8x8cx2j1YjItYZkd5qV//ltKWyeZ76/j3M0+ai99QN+MBYFIitY9
      zqmaAZRBIt5+/XW8YjEfHjvCnN0HWHjjzRMIPDbMNjctN6/yX/+ff8EJXPvgPezKYLRq5Ypt
      8Nvt+Mzm+/75Xe6v9Vr9vrMqDSAzO4ux4QGcHsEdMuhgZwtp+ZvJS4qga8SISBpEvCGS4NAI
      QuU2Zj068jKzWBMXROfoPCAnOVbDwMQiYjEfB8Uvq0NRKYmMNddwo7YlkMDhMWZVGkBcRiG7
      thdRdfr9O2RQtTYYs2kJk9VBsEp+ZyGJGqHLhMvrZcZoJuzjLZT2Pv002WFy3j5TdcfheVv2
      8p3vvMBsZwOOgAE8tqzKiLChjkaq6hrI3rIb10QXTSNmrOIa1IcP4C29xIgslMMpEQAIFCFk
      xLtBpOapvQWcOnkCTcpW0sLkgIPr5y/SOm7iuT86SH15KWKFjNLyOuJlDnrGpsnffZigVfma
      +WawKifBAMbpWUIiwh7CJ9DBzLSL8Ij7lEFr69A8gBuANCkRSVTUfZcLsDIBb9BHRMAb9PFg
      xS/A3PQ0mogIJIBxcoRZk5ukpDgmh/uxOP0kpqSivGujCr/fz/TYIBafnOS4KOamRpmz+khO
      isc6P8XIpBFlcBjBUjfjM4toQiMJwsr0nBmFRo9eBSMTRiQyNalpCQj9PiaG+7H65CTHhmFc
      chCh1zA9PUdEuJ75mXFmTG5SkhOwL04zND5LSEQM0WFaRvp78Eg1JMZGIVwhA/Pi3CxybQgC
      pwWbX4rNOIHOkITXPIdQpWF6oB+nQEJSchIij4XO3mFATHJKPCODA/jFClKSE5GIBHhdNi6d
      OU1W8RPEaMX09gzgFchIz0lDcs+Zf0v/v/waeVf3V7x93zwi/uuvEIeHPepmfMKKrhDv/+Yl
      YrZsRjrfx8sfVJFi0IFYwLE33iM71cAH5ytZvy73Dm17oOES5b1W9BoZ/oUBPqrqQ4eRqq5Z
      5pvOsqhbgyFUSemZt5CFpxIWouXc0SPo1+QRHKSk8dwJTCGxRAWr0WrVzHSWcaZxjki5AJXc
      zqunGthSEM9LvzlOdkIQx843ExVkprR5EstAFZOE0XLlBOalaVqNEtRiD3p9GGLRvYOci+8f
      RR6Xg62rjMoJH9Xv/wfzwigWWq6xFBrFqSMfkpqk49TVBtKU87xdYyQv1UCQz8iRUzeJVpio
      6TGTk2rg9DuvY7T70YRG4J9q5mqHmfSEKIJDtJ87vJorLUU4PIzf4VhVP9X+fYgeoy/f5w6B
      RXItQtsMcy4RWoUMmVJDeGgwQsG904ablR3sfmIHOZlpdDa2UbC9mPVbihnvage/j76uVoan
      5sDjpLuznYmZJXweO52trQxPGgE3fZ3t9Awt7/KiCA5ncbwb1MHIBEKGu29x8uQZxhYsdNfX
      kLttH2u37GWurxGPQIQhPgGtQoo63MBUbytBqhBEn5ObxP+pPbo00Vl4jZ1YXcuuCUFqHbnr
      tiCYHcIMTI7009rVi9vrR6MLI1itRPBx+czMDMaGRhCJpQjkOmTeOUrLq/Gsnh1nv9F8hgH4
      cNrt2BweDj33XYKtXVyoXg4M6W2tRxuReE924txcA9U1bUxPT5OclUhrfSuj3W0ExyUhEIrY
      eaCEorw0kKnZ9+Rh1mUnIJJo2HXgAIU5yQiQUbRrD9s25iEEPCj4gx/8gJHqE7RN2olPL6Ck
      5DAxOhVJuXm0199ksrcReWQGEkAgEPKdn/0lhtAwfvjD79J04T16x8dpauuhv6OZGZPzk7ZG
      h+kYGJ5gcGyGqDAdCEQc3reRMxeXpUyf18PcRB82pR41kJG/mQO7i1FIRPh9HlpbOomIjsAP
      SFVhbF6/nopz72EV6TjwxBMIF4dZcBLgG8CKQ6DgUAWdt9uRaaMxTfRgEkeyuyifyIhwctcX
      I3EtEKyPQCT87Rs2PDEL0dIQEyYfWXmFhAgWGVoUcnDPFoJDwwkNDUUuBl2IHn1oKBKREK1O
      RmdLB4tWPxnZiQx0dDA1ayEmPhqZRETHrXq0qRspSI8lIiyM0GAtYeFhxCTnEBlkp2fGy9MH
      itHo9OhDQgmSipBKBDTV1xGXv5X0KC0WuweFRIBMrSNIuuyXHJ2cgXm0C0lUNhuy4gkNDSU0
      KoGkBAPx8YmohXZGF9w889QTBCnVLEwNMDw8SWRSCrHRURQVb8U8byQiXI8ENzdKy9n7/I9I
      ClfR0thAZtF+EvSf/5lfrd6g6gP7H6sh0KqVQR8mfp8PhML72nV+zmgkRLcK06cIhQgeo62h
      VuVCGIBlaYkgrZYHiVXxup3YXX5UyuXVYoHw/lcTPDMzuObmv/jAFRDp9YhDQx6obIA7WZUG
      YBzr5fibH1Jw6NsURkv44Hw1qpAIDj6xE/NkP1euV+ESBlG0fReC+UFa+kZJy99CVmIEfreD
      0rMf0j3j5YffL6Hi8lVsDgshSYXs3vjlU5yYPjqFs+XBtkjSvvA82meefqCyAe5kVS7SX798
      kajEHNKTopjobsKpiWXntk1IBAJCDSnkx6jRpW0gVuPkzI0ODh9+ktJTb2Fxelma6qJ1xEZh
      QR4ymZqDJSWEiGxINfdGfQV4/FmVBnDgqW8x3neLS1drCMvYRF6UhJd+/e8see/ULl1Lkyj0
      cYjFcnRKMRanm+DobNanq7l49jKTC1b8HjONA1bWpz3e28IGWJlVaQBz8xZy121ifqCNqQUL
      SZk5BMv8OO+KUJSHJmKZ6MBimcdoEaJTyHBYF1GHx1MQp6GmfZT2G2dJLj6E/IvyoQd4LFmV
      c4AQnZLOjnaeeOGHJOrEVFSWU/ztHxIuW34fRGdtQCPWIQlS8tMfPkVFRT3f/+lPkYsF+BRa
      zMYR5hUp/GB7BgPdPg6lpDziHgV4UD6RQb1eL1ar9VG352vD5/MhfAD1Bpb9nvx+EAof/K1v
      WlhArVw5WuwLEYkQiAK5Vh4Gn3wBhEIhQatozymb2YxMqXwIY0AfZrMd9WeEPn4WltFRxHb7
      Vz777yPi6Oivbf+zTwxAIBAgkSz7L94qv8TAnI2EtDyCvbO0Dc6QVbAJ20gzvdMWIuPS2Lou
      644FDefcMC0zItZn6qiu6iFCZaW+Z5rw6ESK8hO5UVoO6gh2F69nqL2RzuE5Nm7bToh/juNX
      WvjBs08y0N6IJiGHCKWQC6c+woGE5JxC1qTG4rItUVlRhV8Tze7NeTRVXcStyWJDtoHGmnLG
      552s31LEYFcnRUWbaGq4SVpu4T1eqwBz4/0cf/MDCg59mywdVDW2IQ+JYfemHCpKr+CUhbGr
      eAM+yzTnLl1nwe5n7YYtGIIc3GzuIColj8LsJAT4aa6+yJWKPn74i58x2VJO34yFuLQ80vV+
      SqtbSF+3haz48HvaYD11Gs8DyqC/74T/8j8hyc35Ws614guwtbadbSUlFGYb+OBcGfsP7CNC
      q6CruZWN+5+mpewcprtyg7oXRmnoHgds3Ky+zWBPJ+kbd7LQdo1TH7yPO3odRQWZ2KY6udw0
      yYH9u9HKJdy6cZXJ4UEGl1z0t91i1uwEn5vOISMlJSWsSY0F4Nqpd9ClbWDTmjT8XhcN7UPU
      lV/GMT/E1eZpDuzdjloKN2/WAdB8qw7bZ6RMLL10nqjEHFITIpBrwth34Ak6q6/R0XiJGUkS
      UmMnt4bmkGoiObw5hSVpLGvTwnjn/Uvs3P8kfZWnGJp3ASauVrRTkJeHWiaiprqBtVuKWZsZ
      x3vvn2bnvr1cPfl+YJ/gx5iVc4N6TVw8eZLbPdPs3ZLD8TffoHdyAa/byoUT7+JSRaEQC7Eu
      THD+/GXMjhUSPHkclF0+x4RLw44nD2Fqu8yJC+VMjw0SGZuGVCpFJhVQO7DAc9viKKu+c1uh
      pakhTp48SefgNADjM1YSDKEolQps0504ZfEIHPPYgqJZFyvm6LF3mTV/uT239h96hpGeBq5c
      r0cql1J2/m2WRCFYpqcIi4wiIkTN1Jz5zkLOBTxyPWq5jERDMGOzS4CWJ3dnU1p6nd7xOfYe
      eoLhWxW89s55LC4/aoUSid+BI5Ab9LHlC3KDhqONzOG7h7Zxo6wakUTJuvw07PblB16pi+bJ
      J/ehlosQ68KxT41gmhhHGhYOYjk79h/iz//85/jtTg499wNEk914w5MY7qzHZrMyNz2M1eFm
      YEnKZHsVnzYjbWQCJSUlZCYux+Ymx2hp6Rplbm6e+rKbaHRilCI31bcHSCnczv4NMZTXdiP3
      O1iwO7Fa3QjdJtq6Bxjuacf4KeNYMDlYu3Erc73N9E/OsO3gHxCDEVFkAiMDvQxOGImPusvV
      ICgMmWMSo9lM28ACaTEhgBWRKoKi7BQq627hF2rYsH4tVpOJEDlMzxtxCFUErUqt7ZvBis5w
      Ax2dRGdlIsdPd3MtvZNmioq3YZ4YQJ+UweJQG4SkYAj57UTF7/cz0t1M2/ASO3dtY2liAJk+
      jhClFIdplhsVNegTcliXlcj8RD83WwYpzM/E6leSFK2jp7MdudhLY1s/iZn5OKZ6mVywfjIH
      8Ps83Kopx6GIIkwhIDktA5/VyMCMHfNkL0anjB3FmxE657lyvZr0tVuI0wnoHl1ALbSjikpD
      r17O0780M8KRI++x73s/JlJipbq2majUPNZmxNPeUIFNHs36nGQEAgE+2xw9M14yEsJxmIyU
      VdaSVlBEQqQOAX7aGy9yqXKRP/7Fd5gf7uR23xRbd+xAiYWrpTWs3bqTCO29E7rev/1/kQXm
      ACsS/sv/hPxrmgOsWm9Qj8eDSCy+Lw/OlfHh8fgRi+9PljROThKi1X7ls/8+IpDJvjaZd9V+
      nF12BzK16oG8Qe/GYXeiUivuq4zf7UaouL8yAR4+KwbE/L6zMDnI0ZeP4NNFo5e5uVF6nf7J
      JRJiwqguvUTPxBJxMVF4zNOcPnOW2lut+KUaxPZZSm9UYPXLiQwLRoCfltqrvPPBVVJzc+hv
      vsnNhmYkmnDE9mkuXL6BQKX/JI/op5kvK0ebnv4Ieh/g06xKX6Ar588SlZRDYmwYVpuDdcW7
      Gay6SlPDJSaE8YimWmkanl+WQTclsyCOYW1aOG+/e57t+w/QVXaS4YVlGfTyjRYK1uSilIqI
      S8tj56Yszp6/xHvvnmTbnt1c/PC9gAz6GLMqDWDfocMMdtZzveIWuvAomq6dRJm9Ef/0JOFR
      0UTqNUwaTXcWcs7hkYehkctJitExOrMsg+7fkcm10jIGpkx4LBO8efx9UjJzMbv8aJUqpH5b
      QAZ9jFmVBmC2eincXIyx+xY3S08wrcji+0/tIiYxidHBfoYm5oiPvCtcMSgcmWOSOYuFjoF5
      Ug0hgA25zsDWnBTKKmqxiUN58cWf0NpwE50cZhbmcAjVARn0MWZV3hqVQsTt5ib2Pv8DlNYx
      prsHOXlynF1PHmCNtQK7YQdrYpYVGqEukX0bvYCUn7z4fcrLbrDt2R8RoRIBchyL43TOw89/
      voeBtnqap6385MffQye2c+36TZ7/4Q+QBDylH1vu8Aa1ryLnLI/bjVjyebnbviw+3G4/kvvc
      CW9pbg5tYIeYR86KznCrAY/LhUgieSjeoG6X876vncBuh+np+yoj0ukQPqgLdYAVucMdWiaT
      AdBSfY3eaRPxaXnohYvc7p0gZ91m7GMtdI0vEZOcxcY1qXd4g7ot03x46joyrZ4dm9Lpn3Sh
      cY5h0aSyJsLP7UkQL3TSP2kmODqJXZvyME32cqasmUhDAsVFhXQ11RKfkU3Ntets2n+I8duN
      xG/Ipqmyk5wkDXV9JvYWZdPY0kNhfgYNNRVMLbnYuHUH4dog2mqvf2b7Ps3i9DDHjrzDusPP
      sTZayqkLVUg1eg7u30pDeSkOeTjbNq1d9ga9XIbF6Sdn3WbiNF5qGlqJzShgTVrs8kpw/TXO
      X+/mxz//AZ21lRgtVqTB8ayJFFLbNYo+Kontm/PuMTTriZP37Q0a8id/TNC2bfdVJsDns+IL
      sKnqNsUfe4O+e+oa+/bvQaeU0tbQxIb9h2m4cvJeb1DLBAv+UEoO7YGlcSpvdTPYeYvLpdU4
      5keobhum7nYbOw8cYtem5R1ZTGO9iCJySJBO8e7lWzRUlzFvMtPc2EBVXQtN5RVYsHLlSg1z
      o32UX7/O2LyJypoG6s69w6I6lQO7tyEXL3fj89r3aS6fPU10Ui7xhhAmuxpxh6byxJ5ipluu
      MuI3wHgzzcMLH8ugSRhFBtamh/PWW6cp3ruP1msfMLK4LINeuH6bgjXZBMkUbNv3JAUJaoxW
      P9WlFeQW72Tr+tzVqTR8Q/hCb9Dthakce/MYo3NWvG4rl0+fxKWIQCG61xu0p/kmJy/ewPNx
      cLlAFMSGFA11Xf9/e+f9FeeV5vnPW7mKClSRCgooMgpISICEQECBEMqyzfbOrNs9032md+fM
      7p49+1/szDkzc3ZmZ3a2e8Zuu52ttj2yrYwEiChyzkEkkXMoisr7A2pZyLJyW3JTn98o7n3v
      fcNTdd/nfp/nuftTb1vm8oWvqWi8X/kpEJuWxkxX171PAiJ3sTbajX2L/1wg/VAKtbcaAWgf
      miVth56Lv/uAlsHNDGsPzu/7KDh1moHOWsqr29DHJBMqmuMf/v6f6B8dI9S0mWF6YvaBVPEb
      8ziVweiUSuIi9YxMb7pBj2bFU1xSzujMMl6vk8vFzZw+mkbGsSOMNVTwL29/gsu3D/DK8hg1
      aAjGmAP87GwO12+UIZb6sXdnOA6PBIStalCAhH2HKDyRuyUjc8y+w9xuqdj8Q6nj1NnXyU7d
      fd9oXnqqqjHt3/ftR4KEvINmSmv6t8xLbYxDujjIot1DcnQA5S1T7N1hYm5+M5Tz/vk51+fp
      G5pgZKCHFdvWwnJWu8CBTAszPQ3M2eDAYQvBCjf+YVGMDd1mZHKByO+4QYOQ26ZYWLPSfZ8b
      VBMcRdaeeEqqmpm/3YLXmEyQUgRiDZYjeXjW5n0G8ArzUCmESq0myBiCFBHjg+009U9z+tQx
      AgP0RO9MIVrrYkOiR6v89sVPEEnRaA0EBWgRSaT46wOICA/FEByGMSiA8MgoogIUNDS2MLns
      IDrciEgm5XZPO+LgHRzP2I1arSEkNAy9v5bI+J3otQpi4+MxaP2JNEeg1RvYGR+BXBNMZt4R
      NsY7ub0gIuvQPlRyCUq1+t78Vp1i1mwusK+g1AffywsK4FxfpOhaMUd+8hZRBgVVZTeJS89n
      /959eGZ7ERl3k5oYvvkOIZah0ekJMfiza0cU1ZVVJFtOYw5SIyBmrK+B2j4bv/yz06yvrrJ7
      337UCgku6zyllQ0cOfsGBrX8O6K7Z8kNqjyQhsxsfqo+Ph7NtlWDOuwOpHLZC1GDOuweZA8J
      vXwUs2NjGJ4ySayg8kMklz1VHx+PZltuhMFmCnQvL8IAwO128dSX0unEs7GBIJEgCXp1KqZs
      N7alGnRl9g6//bff4A0woXGvUFx6k+lVN5FGPXXlxQxMrRERFrKpBr14mabWTtxSNQrXEiWl
      5djFaoINWgS8dDeV8fG56yQkJzPcUkl5XTNrbjn+EivXim4i1YWg1yi+M4eJX/0a2wcfYmtt
      Q3P82Eu4Cj5gm2qBrnxznrCYPUQY/RHJ1OSfOEVLyUW6m65z22HENdpAy+hdN2h6NDNCKPsT
      Q/joo/Mczj9KS9E5xpacwAqXbjSzP2kncrFAZWU9WcdOkLbLzGeffE5Gbg4Xzn3qU4O+wmxL
      Ayg4eZLetltU1XWhUqsou/Ax86IAVifuEBYRQXiwP+MzD7pB53AqQ/BXqYg3GxieWgJ0HMmI
      pvhmJeNzK2TmHKLm8pe890URK3Yveo0/Mq/VpwZ9hdmWBrDhknIoK5epjlqGZxfJfe3PiRbN
      4wmK4M7IMKNTi0QYH8j2rAhCZpti0WqlZ2hxs3AgNgymOLKS4rhRWYcmIIqCfAtLc7P4ywXm
      lxew+4LiX2m25a2RiZw0NzeS95O30HqsXL90kYS810lPjkdaXcpGQAbJEZsGIPI3cyTVBYKc
      n//iT6ksLSH9zFuEaiSAwOLUEF2zLv7Lf81jYaiT4s5Z/vxnf4KWZW6UVVH41ls+NegrzD03
      qMfjYWNj42XP5wfDbrcjk3/XP//0eLDb3cjlTyeGWxwfRytXgESM2N9XW+BlseUX4FWq3fSH
      RqH4rmfm2RAj4MCLjKfKlev1gtcDTg/u2dnvbSaoVK9UUbk/Nh6aHLe7qRlzyn5UXjftDdWM
      zjnIzE6npaKEZYdA6uFcIgI1Ww40O9zFiiKcCK2b8vJqAqKSUK6N0jk6h7/RTH5mCng99LbW
      Mzhn53DaLspulCD4Gcg9ksdQYxkD08sEhseTc2A3rbdKkIcls8Psx4V/Lybv9AlEG7NcLe3g
      tTcKkLDOhc8ugs5AVk42GrGDoqJycs+cRvWYN5vb3e0YonYgWr7DjEfLbFctMenHcE72Ig2L
      pK34BhsyNRmHs9C45jh/oxa51I+c3DQqb5YhUviTY7GgU0lZW5jgk/c+JOXkmySbZFwrqkKQ
      6zn+Wj6PMrH1L77E/QRqUM3JE6h/8fPHtvPxbDz0UakrLmUNsE93ca11BalLUwAAGhBJREFU
      kfzsNASXjebeCU4XHObT9z/kQa3lna4a2kcW+Oy375FwIJeYMD0dTTUcyC/cfPiBiY5Sbo26
      yctMxbk2xcSGisNxMj48X0VDUytHjr9GzoEkPPYVqpo6KS8pwetdo/byJZoHphlsr+Hrq6Vs
      KntW6R/bIDtRx0dflTHRW097ayMN/fOPPem2ugrmrA4Whjtpvj1BU0M9N0sr6W+qZnRpifa+
      OfIP7eLddz/EOt3HmjKOwsKT+DkXGF1RcDBezblvbgJw/ovPidy5F1OQlqmeJpxBOzlzOu+R
      D7+PV4dHflfKA2OJlM7y6fmrOL2wPD3ClatFGGMSEYA7A+2UN3Rs6TNvhbAAP3RaLc4NK0WX
      zlNet9mmr/M2u1P2oFT5IZdKGOlppqiincREMy7rApcufs2tlh7mR7vwN6exNj+OBzAn7eVO
      TxfDcy7iQ75NMTJxu4vrlS1EmU00NXVx9qeFdNTceuqLINeFo7SOs3xfMl2V3oTBucIS0F5f
      xvmL17E63Iz2t1Ja1UpMTBQAp0+foq2mmrrmXnSRO1GuDvB3f/uPLPtcnz8KHmkADrsdy9k/
      ITNWRmlNH5rAMKQbi+gCjeCF0KgdpO/dmtvGX+lhct7K8soKUoUfx04XknNwM81d3M4oOho7
      sK1bsTvdhEXHsTi3gDFIi8TPwOkzr5OxbwfNtY1YV6dg6Q6NEzYERRDytV7sylAk962zQ8wJ
      vPbmLzidHkHv2AK97b2M3O5hZW6Cibk1hgZ7cTwkb2+AVs3k3BLTc4sYdBoQBAqO7Od6ScO9
      NhvLkyzKtPgDew5YKDxTgJ9MTFhELKtLSxgCN2OG7V45OTm5THRVseSUYzl6ApOfg+Xt40/4
      UfNQKYRE6qC5rhmxysBIdxPTDg352WnotFqyjx5nbrQfY0QkUokYyd0UdmKpDP9AI4fTk2ms
      qmBDoiHMoKG1pYnJRRsxEaFoQ6KQr9+hpfcO5uho9IYgjh/Lpb/vNlFGLU1t7cyuuQkMDefY
      0TxSkhNYs4kJDwkkxhxCcFQCoYF6TOEmRIhQKjVERBhx2dfRR+7AkpWBUSNHJHGz5JCzND1E
      UGgUD4brmmJiGWmrxaGJJic1AaVcgSl2F1oFxMTvxLs0Sd/kMmfOnkWjUjDY28ZA/yhhsTEY
      DMEcy89i6PYIkeGhbCzPcK2omKzX/hNmvZSq8nLCk3PYFRHwSA/Tk6pB5fFxKPclP8099fEU
      bFs16Itkw2ZDrlQ+lUt1dmgIf+XjUyOK/FSINZrHtvPxbGzLjTDYXN5J5PJn2gr3uN24PF5k
      0s3Lp3iWcj5iMcLdQHpBJEKs9+0FvAy2pQFYF6f44J0PSXv9TfYaZVwuqgSl/l6l+Ju3mvEI
      YvYfsqDzLHCruYfUw3mEBajB46K+5AJNY05+8dZJSq/cwO5xY0pIIX1PzBPPYemjj7HddYOK
      9XpMv/qXP9Tp+ngE21ILdOHL3xEWu4eQQD+mehpwh+zhjVN59yrF7w4UozCnYNa7+eDzEo4f
      z+V37/8Gm9PD4p02avpWSN5hxivarBQfKltjyemr2vhjZFsawNFjx2hvqqKpdRCNKQHJXDt/
      /Tf/B6tn6+7GxsII2rAE5HINQVoRSzYH+rBdxBg2KClrwGp3gGeDyvZpsvdGvqSz8fE8bEsD
      cEs0ZFtyGW2uZEVQU3DqNUwKJ8vOrf4AuT6CtalBHA4rC6sedEoZDscGO1IOss8oo6hugIGa
      q4QdOIFKsn1kJH9MbEsD8DpWaWxsJONkIYFyL+VFV0g88jphdyvFB8UksStcj0wVwp+eOcSV
      Kzc48+YvUElFiMUSBrvaGPMEUZidyLoslNcsP0w5Hx8vni1qUIfjyaos/jFgW7ehUD2d6/L3
      eNxOnC4B+VMGwt/PwvAwGtlmgLsgFiMJCXnmY/l4du7dQa/Xi9v9kG3TP1IEYTMh8LMtXERI
      JNy9Xl4cDhcy2dPJob1SKd67ilQv4FhYQJBKfWWTfmDuGYBYLMbvbuLV/vYOwvckofR66Wmt
      4fb0Boez02mrusmCzUu65QjGByofTg20U902gC7EjOVgIj39kyTtiqG9o5v4MB0XS+tQ6IJI
      3xFGZV0bSn0YSeFK6toHkeuCSQiW0tY7iiBVkXPkCHqFg6tfXwdtIHl5WYy0VtMzNofBFEdm
      UgQlJeUERieh3Jiga2gSqUJDbn4BSyNtLAoB7Ev8/pdS2/IMn/3mfdJe/ympcSZmRnqwKcMx
      B/vRWlOGTRFK+r5EXKvTXCquxu32EpuURkKInIrqBmKTDxEXHoiAl9udtzh/tZ1f/rdfopV5
      aGvtZk/qPuZud1Ld2ofe+PDcoBPnfvcdNagqM5PA//k/nvOW+ngaHvoOUH21iFXAPtPJxYZZ
      8jL24bavUd85yqn8dN5/57ffUYMONFVgSjmGo6+MttFJikpqATdXi66zNt7NmiqeM0ezmR2o
      QxGZxom8dAYbK4hMO87p/MPE7zmIZ32a/YdzCdQocNpnGJ4Vkx7u4bff1NBYV0PmsUIsB/fw
      7++8Q2zOcUwGJYkpWTjnhjmYewKd3MvVslpulV7F/Yj97a8//wxjzB6C9Eqsc2N8/tG7NAzO
      MdVeTMeSlpWectruLG8GxR+IYMwVzP5EI+/95hMOWHKpPP8BEysuYIV/v1zLvp2xCF4vXU1V
      vP3epziB8qvFHDj5GnkPefh9vDo88t7IAqIxMsmXl2/iFUSszo1zs7yS4MgYBGBquIe6tj4A
      vB4XFde/oWHcRXSA/IEjeWmtK+VqaTVuDzSUF3GtshGv20n59QtcK6vF85AHdnywi4qmfmLN
      oTjWl7l64TzVTT1kHj1M0Scf0DUyv2UJY1+bwisLQuWyMv+ISPQjR4/S0VRFW9cwfkGRWA5s
      pmq8MzJERHQMkaEBjE4tbu20MYtDYSRArWZnjIHbk4uAlsx9RkqrGplftbHnYDaRgRrAS3JG
      GnXfnOP/vvvFI43Rx8vlkQbgdLg48R9/RorJQ3FNHyqtgbXJYYLDo8AL+pAIdsSEAyCIJGQX
      vEZugor2STfYl7HZ1hBECkAg+WAeJ/IyEYsgLecYx7NSEcRScgrOctyS/tBoqsCwMEaGJ4kM
      1SNT6ThxtpDMlB0oAqL4y//8c5pvXsB2XxbooZZqlmzruBxLVLaMMTY8xPraIuMzS1uOKyj0
      ZFtyud1Qzsp9dhISFs7U+B0mZ5cJC9RunYwiAOnGLCs2G4OjS5iN/oCdqF37yUgI50pp/Zbm
      upBoXi8sxDk/5kuL8grzUDWogJWWxlYkCh0DHQ3M2v3Iy05F7ach/+Rp7vR1YYqKQi6TIb/3
      8uelo60Zry6K7LS9mIOkVNa0k3WkgAB/DXKNnhCDH4IgQq0PxqCRI3g9tLc1MzK5QGxUBGKx
      mKCQMBR35ZsKlYEzpy10dw9hCtbS3t7O7KoLrdhKeXUDuw9aiAoNQCQWExwazuqyjbyTJ0hP
      SWJlZZ3FidtoNQpGZu2Eh3yb7HZlZoyiG2VknvoPaB3T1PdN4ViZIe5AAe7Jdlz6WA4lxSAS
      BEBAotRhCg4g1hxEZeUtYg8cIdFkQAC6Giuo77Pys58ep6uugg2vwOyKkyC5k7Kqeg4dPY1R
      7/dEuUGlERGo0g++uLvr47FscYM6nc7Htf+jYd26jtJP9QKC4t1YrS78/B5c9j2a+du30Uq2
      eo5EfirEvrJJPyhb3KDbyQCkMimuF3S+IpEbh8PJ0+QU8CgUuO+qSEVKJYJYjAfwbKN78Cqw
      xQ2qvpt9YLCzC9PuXSi8Xvrb6xiYsnE4O52O6jJm1z1k5h4h6IF8l07bMqXFZQTHJRMTINA0
      sIglI5nJ/jZGbSrSk6JoqLqJXRVKZsou3PY1KssqCIjZS0KQiGs3a3F7IGbXPmRuB7t2J9LX
      1Ul0gpmunikiAwRKa9qQyjTkHz+K6r49qKnRAcSaIOZm59kZH01PdzdmUyDD8y52xoR956RH
      B3vxN8UgWp1m3uvHfF8LUSkWHNODSILD6Kq4yapIRU5ONnL7LBeLaxAEBTl5B6mrrMSr0JOb
      cxiVTIx9bZ6P3/sNqad/RlKYjOLrlbjE2scGxU/+0z/juesGNf7N/0IWHf0ct9HHs/LQl+DK
      y1dZYdMN+nXtNJb0vThtK9S0D3Mq7wDvvv1dN+iXb79NbM5xgjUSpgeauHThOvM2F6VlRdwo
      rqDsy3exBSXht9TFpeouPn33HaJSshgs/5z+dX+ydwWxJDWyb0cwVy8XA1By9TJ2+xznL5Uz
      3tmEMjqNs6e3PvwAPQ1lDNyZ4FpJNeDl+rUrrEz2cb2qg4fRVFnMzJqDucEW6vruUF1ewo2S
      arprbzK0uEBD+wSWlGh+9a+/xTrRxYI0ejMo3jHHwLyY/RFiPv7qJgC/++QjTIl7CNDImOqq
      xx64k9cf8/D7eHV4tBvUEEWwd5yviqoQxBLW5iepulVLkMmMAMyM9tPUNQBAuiWda59+yODk
      KgKQGGuit6sTidaIRPDSMr5GRnwwSXv3MtjfzpxVQVSQlozUeFq6R7eMuzI1zPnz5+kYnLrv
      Uxe1N4u4eLkM+wu+CAq9GdnqCGv3eZTUgWYMjiUW2RoUPzXaR0PrAOGmUACOHcun5VY1Xf13
      8AuNxTPdzt/+3T+z6guK/1HwSANwubycefPnJIfYKb7Vi0KtZWaol9DoOPCCNsBIlGlTw6IJ
      S+Av/+LPuFV0HrvLgzkhgcaKUkIjYgCB+AAFnRMrDA30E2FORKvYYHrFRnvXCDviTFvG1Rqj
      KCwsJCnWeN+nEtJzj3HmlAWpc52J6QVgMzf/6rodrVqNe2Mdh3MDp1d6bz0+OzWO1bbBnfHJ
      e0fyV6uYXVxlfnEFf40fCCKO5iRxo7ztXhv72hxLUjU6tgbF63R6hobGiIjcnJtYFUSexcJg
      UzHrEgOnzr5BuGKdeV9Q/I+Ch7pBvZ5VWpraEMvU9LXXM2NXkZeVip9KzfEzZxnubic8OhqF
      XI5Ssen9mB3rp7ymid0HczCHBuIXFIVGsLEreR8qhZLcfAtddeXMewM4lpPGzgQztRUVqCL3
      k7E7AgGQqnSEBmhBEBMRYQIEwsIjEEsUREUG0dnWysjIJOtT3Qw7DMSG+tNaU4rXkEDq7gRM
      OhHlNU0cyjtBiF6NVKVjbWYIqVpPT28fMVGb8oiwqCj6GquxKkLJPbAbiUiEeUcyYucKsbuS
      cMyMMjCxQMHJ0/ir5HR3tjE0OEZYTBQ6fQinCg7T1XObaLOJ5akRrt24yYFjhURooby8nKDE
      dPZGBz9xULz6aD5ivf4RrX38ofhRBsUvLy+j1eleSHWXF4F1dRWlRvNUkoeZ3l78pZtqUIkp
      DJH86dyoPl4MP0oDeBG4XW5EEvEzGZHX68HjAfEjSrE+jrmpKQz+/ggyGYLIpxZ6WWzLoHi7
      dYH3f/0eBwp/yu4QGddvVOGSajl5Ipe1yUEqGjbrGO9OyyZYaqWiroP03HwC1TLwemituELd
      kIOfv3mUkqslOIHIxP3s3/HkYZGL777Hels7of/4v5EajY/v4OMPwrb86vnq048JMu9Ep5Yw
      1VWH1T+RsycsSAXQh8USr3UhhO3BrPfw9gffkJefwQf/9uu7QfGt3GybYVdMME7UnDh7FqNk
      iQmf2+dHybY0gJxcCx0tNfQNTqEMjkKYaefv/+FfsXm8CIKASBAQBBEbC8NoTLtQKf0J1ggs
      2RzoQhKI0K5TVd+N0+VCJLiobJvEkhz1sk/LxzOwLQ1ArgvFYrHQW30DuyqYM28UYhStsfBA
      ULxMF8b63AhO5wZLVjcahQyXx0vq4Rx26dxcqelnuOE6gXuPopZty0v5o2db3jXr4iT1DQ2k
      5p9G7V6j+MpFIjOPY7obFB9gTiQ+VIdcHcpreUlcunSF/Dfewk8mAq+b9qZ6Rpx6zmQmsODU
      8Hr+vpd8Rj6elXteIK/Xi8u1fdaxayur+Gk1z+QFcrvs2J0iVMqniwO+n7neXrRiMVKz+V6K
      RB8/PPcMwO12s7a29rLn84Ph9XqfqyTU8/ZfXVpC8/vSR5Jt6Yx7JXjoPsBIXz/GhHjkwFB3
      E4PTGxw6lEJPwy1mrW7Ss3Iw+Mm29Jkd7aOufYDYpFQSzSF01JczOrNKaPRuAiTOe8fr7ezE
      T6NAExSJWuLg9ug8G/MjjM6uEBazC3/vIt3D0yTsPYC/dxG3fxQBYivDcxvERRrxup3UVt9i
      T0YOwuok3eNrpO4y0397AqMWyuu7CI9PYm985PfKkx3WRT58+33S3niTncEybpbewinVUnA0
      C+v0ENVN3QDsTMkkSGqlurGbtMMWAu66QduqiqgftvNnf5JP+Y0yHEBE/F72JkQ88YXv/+u/
      Qe5Tg750HvoOcPPrCywDjpkuvqwYIS0pBpt1mbK6LnIO7OSdh6hBe2tu4J9wiN7Sz2i4vUBF
      aR2ZBQXsTYi4dzyA8+fOMTvSTnnzEDM9t6jrn6e0oobcIwXsiY+krvwGO9KyufDBuwgqgc8+
      +4bq4suseTYNbmWqh7Kii9xsm2BusJGPPvuamaUFLlwuZry7BmdAAisd17nWPPK9J/31uY/R
      hcXhpxCY7qplXmmmIPcQUgF0IWYiZVYchnhMWjdvv/81GRn7+eDtf7uXG7SkeYLYcD0Orx+W
      ggL07hlGFl+0RM/HD8EjX4Kl/uEY3BNcr2pFJpViW1mgo7MbfXAoAjA/OULnwLdKTolUTl52
      Go3NvayvTHHt0iXaBsa/c9yYPSmM9XXS1NxPxqHd2JamuXLlEh0D47iddnq7OsBPhyYgjnj1
      LC3zCvaYN7UyHfX15Pz0lwzUlQGQkZ7ErbpvZc8SiYys/Bw665u+97wys7LobqtjaHQWRWAE
      orlu/ulf3sXmAZFIjFQqQSKV4VgcRh22E602kCC1lyWbA21wHCbNOnUtA7g8LmRSqOmaJnf/
      k2eG9vHq8EgDcHvE/OTP/4JE3TJF1T1IZDJ6muuI3pEEXpCr1Oi1W0t49vQOEBMbgUoXxtnC
      QlIesjsq05lQ2e8waFMSpZOgMoTy+uuF7NsRiSAWbwrYDBFIvLArJoSQ2D2IBQE8Tpp6RrnT
      3cXYSD9OrxetaRfCXA9LG/cFx3f3EBYbB8Di/Ay2DTvTM3P3/u8XEIHFYqGzogiHJozXCwsJ
      YZV5h+eBeYayPj+Gy2Vn+a4b1INAuiWXHWonl2/1M9pUjD7pCBqfG/RHyUPVoE77Aq0tnYik
      Sjqb65jdUGDJSkOp9ONs4Rv0NDdijotFpVSh8dsM63M7Nmhta0MekkhuagKrC2N0dvWz5pIR
      rIPWlk6kfsHoVFKi4uLRiTaQGhOJDQtidWaMjp5+1txSjAH+pFpOIl8dRuRvQiMTIdMGEuKv
      wuOw4VGFcKIglxCVgDzYhFYXTGJkAOseBTtjw2hra8MhD+VkbgoSkUB7QzUStYG29nbiYjbX
      2TOjfRSVVJB69AwmlZubNyswJKSQHB2KIAh43G4U/oGEBgYToHBQWdtIiuUkpkANbsc6laVF
      jFi1/ORsFuOjk2QcTkcpfToD8KlBXw22uEG3U2rE1eUV1DrtM7pBN9hwiPBTyR7f+HuY7e5G
      K2wajSw6CsGnBn0pbHGDrq6uvuz5bBtWV1fRPGPtL4/Hg+g5FKTP48J9nrF/73B8GWN/X98t
      QfH+/r46VT8Ubrf7ma+3y+VC8ox7B16vF4/Hg1j8bBVtnmdst9u9qbV6xof4ecb+vr6+HZgf
      Ic/68P6e5/n1eJ6xn2fc5x37+/r6DOBHyPPsQD9P3z/GsR/qBfLxh8dms7G+ME5RSSUSTRAG
      7ZPVBehtLqe0upFFm4fIsOAnHs+6NENpeQNRsVEsjfdx9UY5Up0Rg+bxJV49bicd9RUs4k+g
      wsa5z76if2QcY3gkStmjv5W9XjftdRVUN7ShCw5n+U43JRX1aILD0Sof70RYnBqmtLSMqVU3
      IX5OfvfFZQbGpomOjULysISy9zE72kdJWQWTS07MRh2l1y4zNLtOpMl4N+3lNlWDvip8df4i
      mZZDXDj/9RP3qbtVS1LqYQ4m73iqsUZHBrhxvRSX18m5Ly5z9MRRLnz+Ga4nCIhdX5ymqaaM
      7vEl1sZ7uePUcSQ3B/8n8YJ5XaiDYsiM13ChuIrzlyrJzUji/NdXnmjeG07IOXqMhmsXGOpr
      Zl1rpiDvMPInWE6p/EM4duIETaVX6Lj1DSv6vdgG6+mZ/tbZ4zOAl4aXVYcLvV6Py77CkwZm
      Z+efYKqvll+//9VTjbYzORW9nwzcTtbdYjQqDSLXOq4HNS0PQR0Yzt74TZ2TNDCezHgtn7zz
      K/pmHu81FAQZKhY4V9LLmawEHCI/dDoD66uLj+0LEBISxLUvPiI++zgRMSnsMLj4f//4f1l0
      Pt5lL5eLuf7Vx9jVYczfuUOYyUSwXsn0ku1eG58BvDQE9AoJk5MTSJWGJ96PcIvlHMo4yMYT
      PkDfQSxHK3YyuziLW6rjKffvsFnXid2dQkywmuX1x9eU83jW+NffXuGv/vtfYTIaUbiXmZoe
      R+3/ZMu3K+feIyT1FGdy9rNu3SAp5SBBSi/rzsdb7szcIgWFP8dgHUNtjmOgr4/R6RUiAr9V
      L2zbrBAvm/n5eVQSN+W3mknJzCFI+/i1OMD0SA/1HcMczLIQrHuyPuDmVkkRk0s2tMYosveE
      U1zWwMHco5uB/o9hZqSbqqZuvAhkWPLpa6xEERLPwT1xj30x9TiWuXSxGJcgEL0zlWiDl+rm
      AQ5bLGgVj/fBdDVU0Ds2h0zpT/bh/dRWVBASv589cabHjj07PkBtYxcRO/azN95Ec3UpXn0M
      KTuj7vX1GcBLYn5+ngBfKvSXjm8J5GNb4zMAH9sanwH42Nb4DMDHtsZnAD62NT4D8LGt8RmA
      j22NzwB8bGt8BuBjW+MzAB/bGp8B+NjW/H8EGpqqVSgtNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Market segment and menu type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Market segment with %F&amp;B' width='192'>
      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
      O/i93pWO8d9t57SLwG6HLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Restaurants and retails mapping' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Restuarants and non commercial mapping' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGiklEQVR4nO3azU8T7QKG8bsWSkElSPErKjaCpAkLNyxITAxx4cK4cKOJa9Ym/jdsWGmM
      RjbGsNCwEIMQQhSJ8mWhQgVB+ahAoS3Ydt6FkRzfc/LuzsGc+/qtOu1M20nmms7zTENBEAQC
      TB066C8AHCQCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCwB9peXlZi4uLkqS9vT29efNGMzMzCoJA5XJZqVRKw8PD2tjY+G27crmsiYkJpVIp
      BUGgIAg0Pj6uTCYjSdrd3dXq6ur++gSAP06hUNCjR4/U39+vIAjU1dWlUqmkyclJPX/+XF++
      fFEymVQ0GlV3d7ey2ez+ts+ePVM6ndbIyIiGh4c1MjKihYUF9fT0qFwuq6+vT5FIZH99AsAf
      JQgC9fb26ubNmzp06OfheeTIESUSCbW0tEiSzp07p2vXrunkyZOKxWKqrKyU9PPsv76+ruvX
      r+vWrVuanp7W0tKSrl69qlOnTml+fl61tbVKp9Mql8uSCAB/mNnZWTU0NKihoWH/uTNnzuj+
      /fvq6+vbj2BgYECPHz9WbW3tbwGEQiFJUjgcVrFY1KVLl9TV1aX19XWlUiklk0llMhm9ePFC
      klTxP94/4B8NDg4qn8/r/fv3SiaTam1t1erqqu7evatyuazu7m41NTWpo6NDHR0d6u/vVyqV
      UktLi8LhsH78+KFyuazd3V1VVFTowoULunfvnoaGhhSPx5XJZHTlyhU9efJEkhQKgiA44H0G
      /s3W1pZ6e3t1584dPXjwQDs7O9rb21N7e7tCoZDevn2rcDis3d1ddXZ26uHDh+rs7NTY2Jhe
      vXqlUqmk27dvq7GxUZlMRoODg7px44Z6enq0srKi9vZ2tbW1EQD+TL8Oy1AotD+b8+vy5u+v
      /1r+++N/Xf5P7xUKhQgA3hgEwxqDYByYxcVFbW1tqbm5+be5+f+WdDqtbDareDyuXC6nYrHI
      LwAOzsTEhBobG/Xy5UsVCoX9u7fZbFZfv35VoVDQzMyMSqWS5ubmlM/ntb29rc+fP2tzc1N9
      fX0aHR3V5uamksmkisWiCoWCksmktre3lcvlNDc3tz8GmJqaUlNTk6LRqEZHRzU+Pk4AODi5
      XE7pdFo1NTV6/fq1qqurNTY2pqdPn6qqqkoDAwOKxWJ69+6dKioq9u/sRiIRjY6Oqq6uTmfP
      nlWxWNTa2poGBwc1MDCg+vp6ffjwQUNDQwqHw5qcnJQkbWxsaGJiQvl8XmtrawqFQgSAg1Nd
      Xa14PK7Lly9rdXVVCwsLqqmpUTwe17FjxxQKhXT48GHlcjnNzs4qEokoGo3q+PHjqqysVCQS
      UTgcVjab1fnz51UsFhUKhVRZWalSqaRv375paWlJVVVVkqRYLKa2tjbt7e3p4sWLWlpaYhYI
      B2dlZUUnTpyQ9PPs/OnTJyUSCeXzecViMW1ubmp+fl6JREIfP35ULBZTNBpVfX29MpmMjh49
      qqmpKZ0+fVrfv39XLBbTzs6OlpeXdejQITU3NyudTiuRSKi6unr/84Ig0PT0tOrq6ggA/18W
      Fha0vr6u1tbW/b9I/BMCgDXGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALD2Fw/1Kp6B+imCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAG2UlEQVR4nO3a3UsUfQPG8WvWtxVF6JYtozcyS8IWs0iwAw+EDkLpBYos6DSof6azDhPp
      xEoKCTKCIEukgiQDpaKw1FBXpbI1XWfHeQ7iXh65H7hPHjS4vh/Yg52d38wszHd2ZnaCOI5j
      AaYSm70BwGYiAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAGy4XC6nX79+bfZmSJKKN3sD4OXnz5/q7e1VNpvVuXPnVFNTo+HhYY2OjiqVSqmtrU2l
      paUaGxvT69evtW/fPh0/flxBEKxbztzcnF6+fKn29naFYaje3l7lcjmVlpbq4sWLmpqa0tDQ
      kIIgUHt7uyorK9eNj6JI9+7d4xcAG6unp0fpdFpHjhzR4uKi1tbWtLq6qtOnT6umpkZ9fX2a
      nJzUxMSETp06pUwmo7dv365bRhRFun//vt69eydJymQyqqio0Pnz53XmzBkFQaCFhQW1tbWp
      tbVVQ0ND68bHcaxHjx5pbGyMALCxksmk5ufn9ddff6m+vl5FRUWFGL58+aL6+nrt3r1bJ0+e
      VFVVlRKJxD+O3oODg2ppaVF5ebkkaXZ2VlVVVcrlckomkwqCQI2NjYrjWJ8+fdL27dvXjZ+Z
      mdHKyorq6+sJABurs7NTYRjq7t27evbsmSRpfn5eAwMD+vr1a2FnX1xcVFdXl3bt2qXa2trC
      +IWFBWUyGR06dKgwbdu2bcpkMurv79f169cVhqHCMNTz5881MjKisrKywrxRFOnx48fq6OiQ
      JAVxHMcb8cUB6ffpx/T0tLLZrJ4+faorV64UPgvDUN3d3bp8+bK6urp06dIlVVVVrRv/96lL
      aWmphoeHdfbsWXV0dBSuEfr6+tTc3Fw46sdxrNu3b6uzs1OSNDExoe7ubm3ZskVjY2MEgI11
      69Ytzc7OKgxDHTx4UC0tLbpz544qKiq0tLSko0ePKggCPXnyRDt27JAktba2KpfLKZvNqrm5
      WdLvHfvGjRu6du2aBgcHNTo6quLiYq2srOjq1au6efOmEomEoihSOp1WU1OT+vr6dOHChcK2
      9PT0EAA2VhzH+vz5s5aWltTQ0KAgCJTP55XL5VRcXKyysrLC+7+VlZWpv79fJ06cUDKZLCwn
      DEOVlJRIklZXVxVFkZLJpBKJhNbW1rSysqIgCJRMJjUyMqKKigrt37+/sNwwDAkAGy+KIsVx
      rOLizb8LTwCwxl0g/BHiOF73+jffvn37v6yXAPBHmJ+f18OHD/XgwQMtLCwUpsdx/I8/wiT9
      z2n/7f3791peXv7X9W7+SRggKZVKKZ1OK5/Pq7y8XP39/SouLlZdXZ1evXqlyspK5fN5zczM
      aOvWrYVxy8vLGhgYUE1NjVKplCYnJyVJk5OTmpub086dOzU+Pq7KykrFcax8Pq+lpSVVV1dr
      eXmZXwD8eaanp9XQ0KB0Oq3l5WXt379ftbW1mpqaUlFRkWZnZwvzzs3Nqa6uTocPH9bU1JSC
      IFAmk9HevXvV1NSkqakplZSUaGVlRdlsVi0tLSotLdX3799/P2PERTD+FPPz84qiSNXV1Roa
      GlIikdCxY8f05s0bpVIpzczMqKioSBUVFQqCQA0NDYqiSC9evCgc4cMwVBRF2rNnj8bHx3Xg
      wAF9+PBBqVRK+XxeP378UCaTUWNj4+9gCAAuPn78qLm5ucJzSBK3QWGOawBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY+w/w2SRm+0tF7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHqElEQVR4nO3Z20tU3R/H8c+MMzo6B09jHgYPoURK3phhCUV4IQXVVdRtUNBf1J2QVxKG
      IBIdiI4oohBGjtrkIU0m1DygjeNxZv+uHLJ4eG5+Gjzf9+tS1xoWw37P2nsvl+M4jgCj3H97
      AcDfRAAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhG
      ADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0A
      YBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHA
      NAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBp
      BADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMI
      AKYRAEwjAJhGADgW6XRa6XT6by/jD56/vQD896VSKb179057e3tqa2uT1+vV/v6+otGocnNz
      derUKblcLjmOo1gspkgkomAwmJnvOI5WV1fldrtVWFgox3E0MjKi7e1teTwenTt3TslkUmNj
      YwoEAqqvr5fL5ZIkLS4uanp6OvNZjY2NCgaDchxH0WiUHQBHr7u7W6urq/r586c+f/6sVCql
      hw8fanNzUwsLC9rZ2ZEkzc3NqbOzU7Ozs4fmv3nzRo8ePdL4+LgkaXd3VwMDAwoGgwoEApKk
      9+/fKysrS/F4PDNOkrxer4LBoILBoAYHB7W7uytJGh0dVWdnJzsAjt7+/r6qqqoUiURUU1Oj
      ubk5RSIR5ebmqry8XDk5Odrf39fbt2919erVP+a3tbWpqqpKi4uLkqS1tTXV1dWpoaFBbrdb
      LpdLV65c0e7uroaHhw/tHkVFRSoqKlIikVBZWZmKioq0vb2tkZERXbx4kR0AR+/WrVuanZ1V
      V1eXotGoVlZWFIvFlE6n1dvbq8nJSb169UptbW3yeP79N9nj8Sgej6ujo0MPHjxQKpVSIpFQ
      Z2enPnz4oMLCwj/mvHz5Uu3t7ZKkp0+f6vr163K73ewAOHrZ2dm6dOmSUqmUXr9+rfb2dtXW
      1qq5uVnl5eX6+PGjxsbGNDs7q/n5eeXm5qqmpubQL/mviouLde/ePUlSX1+fVlZWdOLECd2/
      f1+O46inp0c3b97MjE8mk0okEgqHw0omk5qYmNCPHz8Ui8XkchzHOZZvAWY9fvxY09PTchxH
      58+f1+XLl9XV1aWNjQ3t7Ozozp07KigokCQNDAwoFAqpoaFB3d3dun37tnp6ejQzM6NEIqHW
      1lZVVlZm7vkl6e7du+ro6JDb7dbe3p6uXbumzc1NbW1t6ezZs+rt7dWFCxdUWlp6aF19fX0E
      gKPnOI7m5+eVTqdVXV2deePjOI5cLlfmjc3BWEn68uWLEomEmpqa9PslejD+1/kHn3fw/56e
      Ht24cUPZ2dmH/v77uggAx+KfLsL/1/jfpdNpud3//ohLADCNh2Aci7W1NcXjcUnSyZMn5ff7
      /3Hs1taWNjc3FQ6Hj3xdBIBjcXD6mp+fL5/Pp2/fvikUCikejysej6u1tVVLS0vKz8+XJC0t
      LSkcDmt7e1vz8/Oqrq7W169fFYlE9OnTJzmOo+bmZi0sLKi4uFh+v18zMzMKhUIKBAKKx+Oq
      ra1VIpHQ5uamfD6fCgoKtLGxoVAopOXlZa2vr3MOgOPh8XiUk5Mjn8+n6enpzGHUwWGY1+vV
      xsaGnj9/nrn/dxxH/f39CofDmV3hxYsXys/PVyQS0dTUlNLptIaGhjQ0NCS/36/R0VH19/cr
      FAppaGhIT548UVZWloaHh7WwsKC5uTlJ0uDgoHw+HwHg+O3v7ysvL08ej0cej0dut1vfv3+X
      y+VSXl7eobc+LpdLfr9fY2NjKikpkdfrVU5Ojtxut5LJpKampuTxeLSzs6P8/Hzt7e1JkgKB
      gFKplCorK1VSUqL6+no9e/ZMp0+fliSFQiHl5ORwC4TjU1FRIa/Xq3A4rFgsprq6OpWWlmp8
      fFxFRUXa2NhQU1NT5uJ0uVxqbm7WxMSEGhsbNTMzo+bmZpWWlioajerMmTOanp5WKBRSKBTS
      +Pi40um0WlpaNDk5qZaWFq2vr0uSysrKVFFRkTlpXllZ0eLiIm+B8N+wvr6uqakp1dbWZg7V
      fjU7O6uysjL5fD5J0vLyssLhMAHANp4BYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0
      AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkE
      ANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgA
      phEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBM
      IwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhG
      ADCNAGAaAcA0AoBpBADTCACm/Q+pAlshOTBuLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='USA Map(commercial)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eZxc110n+j13v7VXr1K3NsuWZHm3ZTu2YzuxQ6LscQhhcSZMPhOW94Cw
      hJnwgADDAI/PkMeQ92A+LGHgARNCyALmZXBwHMdbbMe7FcmWJWtXd6v32uvu5/1Rfa5O3b63
      6lZ1VS9yf/1pq+rWXc459/x+57cfUiwWqaqqYPA8D7Ztw3Ec2LaNIGRZhuM48DwPgiAAACil
      /r/sT5ZliKII13XhOI5/PaUUhJBln8N+5+8dBv480zShaVrT+a2ubXc/QsiytgXPaYew51NK
      Yds2JElquicbt+BzguMV1Y64fQ320bZtKIqy7Bxd10EphWVZTfMgmUz6nz3PAyEEtVqt5fOC
      7VZVFZIkwXEcSJIEy7JgmiYcx4Esy7H6wSBJElRVhed5sCwLrus2/c6eHfXeJEVRwBMAACiK
      gkKh4A8+u5h9JoRAEISmm0qS5L9EQRDgui4sy4IoilAUBY7jhE7OVi+1Hfj2EUJgGAY0TYs8
      Nwp8/9i/hmH4k5R/Kax/wUkZNSHDiDk4rmFtDCNGz/M6JgLGpDzPC70mOGHY757nQZIkf5Kz
      33Rd98fD8zyYphk68cLuycDPBcuy/MkbfHfBNofND0opXNeFqqoQRRHVarXpt1bXAoAUdpA1
      MJFIwDRNv7GMU/AvkH1m1zDicF3X53aiKEIQBL9DiqLAtm3/e3CytKNa9lvwhTuO09Rhnqu2
      ekbwObVaDYVCAalUCqZpQhRFn1uZpolsNotqtYqhoSF/ggXvEbWCAI1JGWQgbOwopaGTlY0r
      f27YmPDHRVGEpmkwDAO2bTeNGbtHGFGpqgpFUfzJyd+PtYH1g92/FQEE4bquPz8AoF6vhzKu
      VisjA0+EwfkQh6FKYSfJsgxJkmDbNmRZhmVZABodrtfrkTdTFMWf9MFGiqLocw7XdX3OEtXo
      sGWfPyc4OKqqwnVd1Go1JBKJpnvwLzF4z+AAs/YpigJCCGRZbhLrMpmMPwZxCDWsb0BjLHlx
      kv89iqj4yRdHNCKEoF6vw3Xd0MkUJAYASKVS/nsSRRGmaTYxrjBCT6VSoROwFdg9g5M/akxb
      ic3BMegExDAMGhSB2A0rlYrP2VVV9WVCxmnDBpXvHP9bmCwYvJ4/xr4HJy9/XthxoDGoqqou
      01H4trUdGE7MkyTJn0RBMEKOSwSUUhiGAV3X/e9sdezmJbK2set5kTDI4cO4tGVZUBSlieg0
      TYOu6yCEoFqt+u8kkUhAluVQ0atQKMA0zdhjQCn1Jz9P+GHzgb+mk7FmCGO0DEIU5TLKTiQS
      SKVSIIT4cj0b1E5eWPBcXmEOHgu2oxXC5HFZllEsFv2XFyZPdwLGBKLGaaUQRTGSs7V6VpBZ
      sLEI6m1A+OQP3pOf3ExEVVXVP87ee5jYxAg6Dnh9LaxPgiBAkiT/mUHi7gZhjMHzPEitOCIh
      BIqiNMnBDEysiVqG4xBH2DVxOhpcJoNcQpIkDAwMwHEcVKtVXyQKnhunbUFRI2pp7gRBWZxZ
      hYI6UfCa4ITndbCwNrLxiFpFgQZxp1IpAPBFPGbhcxwHtVrNnyymaUKWZSiKAk3TIIqifz9J
      knyrXzvUajV/8vN9Zas2Y7aMCIPvOWwM2TFBEPwVrV6vNxlmgAazUVUVlUqlMVfaNZYpRZ7n
      NREAAH+gguJMWEPbWWGiJmY7YmKd45/Dd9rzPBiG4Vu62DLLK+VRcF13mTweh1MH28dfH/Yb
      pdRXsoMTlu97UEQIQ5h4EiVasMnF3iMTparVKjRN8wmCWQRZ33Vdb9JH2D3jMD3G+cP0HF6E
      Cns3/NizVSkodrHrbNteJl3wfWbvX2I2/1b2V35Z9C9csuOGKVVR14chjNMysBfXCq30DKCh
      1FUqlSZFi3957YggTB7tBEEuFRQheMJiRBD2HLbaBleCsGfx34PydVA/I4T4Rovge3Zd15+s
      jLMHJxYD0x1a+QTYeUHiiTovuJoxMBGJfeZFM0EQYBhG5H1d10W5XL7IJIOKUhTYQ5PJpG8l
      Yg2Low8EZTB2bXCF4H9nS2/wPmwZFkWxpejA2hg2edmLCJoj27W7GwUseK9Wz3AcB4Ig+OIF
      Ox4UL6JWlOD74MWgIBGy+4StMswxxY4xuK6LUqm0jLAFQfAV57jjERfB8aeUolar+eIZj+Dq
      GRyHIARVVZs626oRiUQCiqI0eTGjJn6c5ZCX7VjHgpM+OPGYmMCWa9buKCJm7Z6ZmUG1Wm2y
      PzMiiHop3U764D14QuOfGUUcjuMsW5XjWK+iCJqNK28tCnsuIzTe9Mv7axhM00StVgOltMn8
      yeTvfiCo18RB8Nyw6yRm56/X602cJwxscJPJpO8bYI4yZtdmoRRBTh7VsHYrAt95oNmLGMVN
      2b9MVHNdFyMjI35bg0pVHALolgiCfQ3rU1j7eeXYcZyOHE08Q2EKJf9b2KRgIhbPVVOplK+M
      BlGtVptEEXavVvOHf16cPrDzw/RC/rfgWIYxCyYtBK2eAnAxviOOM4NxCdZR9pl5DnkfQdjk
      CesQ35Fg54JLbfC64LnBCcfc5IxATdNEpVLxVwKee4VxzjgiXiccqd35PFEyvaBbBFcctkIw
      jy7v5wiGTDC08n/U63XfhMusgjxBdIq449jJ+cHxDLZPAhovP51OR3Y27KbMPMrifAzD8DlA
      GHeP4mBxJkOrc4PcjOcIvEWAES4z+S0sLCCfzzc9J6gP8fcL4zTBNrRakTp5uVHyfavf292P
      l+P5NjGZn+87/86YUh7WfhYoZ5qmL/4wRTiKcFu1PYwxsmtC5XfOSBI2Pvwx1p4gMxP4izqh
      XnY+U87CGsIGlHGbOEonvxIEVwS+c63EkiBRsHADPpZpYGAA1WrVJw6eS7YTjcLGohN0en5c
      Q0Or50X1jzEyNkbB9wc0K8FBVCoVmKaJarXqi8VhkQVxEdbXoJ7SijG2YzjLDCVdtxQXg9o6
      5W5BkSj4mf83yLmC3DoKPCdjA8oiDtlq5XkearXaMlk2TE6OY7oLa0Ow3d1M4m4nPkPQ4sPr
      CPwzgscsy0IymUQymQQhxI/6tG0buq7DNM0m/YAxGz4EJUy07aZ/7eZM2P3CiCXYjhURAO9k
      CssfCLN0AM0humFKbxjC7hO1NALL/QrsO1P2Xdf1QzzK5TIymUzkvdtx7CjdIc61cRBHeeaf
      HXZNlMLInxO8xrIsf9WmlPq+FGYBCoo5hBBUKhU/Rt8wjJ70P6wfUeiUWayIAGRZRjKZhOM4
      vkeOp3jeQwuEUzE7N8qMGeQg/LWtwDh8mFLN9BF2n2QyiVqt1hTPwrc77vPCuGg7eT4OuhGZ
      gtdF6Sf8u+IJhB9zPqQgkUg0RbDyYKIU8xSHBce10pPaHQu2m+9vJ4YIfgXsfF0PNIS5pMOW
      uGDQHH8O0yGCsmlcDhe301GEE2wLE5HYb7ziGHeVCj4DiPZPdIpORbAwhTJsfNlqGBQvGVhu
      AM/x+dgqdj4hxDfbUtoIHY9KTooC80F0MvmjjrE+R4lLvjTSUQsjGsScLPyD2IuPUpCDSi4h
      F82rvC2Z59ydKIOMuMIGIExkYTIt60fYZOh2OQ+2u5XoFryGgQVxxUGYOBNFQMF3wEQe1gbT
      NH1LkG3bkWJNUK9oNSmjwBJ44owzIY1oZV3X/faF9TFKqvCZcNsntQGltCkZhR1jnWDxGcwh
      Fda4YKIHr3R2w0ElSYIsy76yy8uxUeIUpRTpdNpXivloRf6cVjJ0XNm0nTwe9jshxDdLtvIN
      rETmDmMu9Xq96Z7MS82exZ/PfAyyLEMQBN9AErdNtm0v0yODbZJl2feQM6W8k3TM4G9dEwDL
      42Rig6IofvYYWwqZDMgHKzGxiTc/RnWWNbKV6BIM8mKcP0g4fDh3mEjG2plIJDA3NxdKAEGE
      tTXseNg1nYg0zLeyEqdYq/a0Ex+CK3IymYRpmj6DCb4fJgbxUajBFT9u28JEuVbBbmHPDAM7
      viICKBaLfgMty/ITaACgXC43nc8oO7hERslofEPDJmLYMs8mCR8gx85haY7BCNYwIshkMqhU
      Kr6ViFemwxCc1OyaOIhSWBmXY/cMC0foJYLjzH9mk5mQi7nfzKHIK8g8WCj5SsVGhiCji9OX
      qPvxv3VNACz6jw2AbdtYXFyEpml+QkLQScYeHpZRFlwJwjoV9nLCOhsWNdlKf+DDfYGLaYbV
      ahWqqrblIvz948qvPMKuYyElveT6Uf0PeoCDdvzgNawEDbMA8uHUvOUoTF9oJ84S0sg34MUh
      PoylW0TpJisigHQ6DUmSmsJj6/W6nzTOB9exCcbn1waVQn5CRxFBVOdaiSnsfvyLDj47+Exm
      EmX5xexeUe1o1W4enYg+neo+YeBzlqPGj5/wcdrHy/YssZ+B6Qh8WE0n/WDviTFRlpbZqhhD
      p+CJfUVKMBsAURRDlyY+tJlZeSilfkhCNxQdJr7wYATH5wjwVo6gyNWOY0c561pZh+K+8FaE
      2wuE9S+KeKMQRthMIWc54vxxSqmfQdYtTNP0fQnMmBGXwfBgcxNAU6IOL9at2AokCAISiYS/
      ZEXJqoyyGWcNhlDwVqMwjtxKB+CPs3IuYbpFkCh4XYEHf1/GfVjVubgiTtSLCovH7xSyLEPX
      dT+zqVU74oBNhqAoFGYtYyJsoVDwjwcZTCu9Lk6bKKX+hO100vNIJpM+0+XnZk9EIAZRFJFI
      JHztnFeMg6CU+qHTQb8BbzVgjWzV8ahBjrIFM67V6bIcXN3aEUEYkUbpB90qiCxJpdOJEVQE
      g2PBi4Nh/WHfgyIkj6Dy3O5+cdrczbmM+7N+Mr0i2OYVEwC7IXuIIAgoFouhJfcobdQayufz
      SKfTfqMJIb5JLawzfKNbncOWuyj9IXiPKBEkStwJmzBBtHPGRC3lUQp9FDpJkAlDsA9833i9
      IWp8GKJEqigC4BHm02A6Yrdcnz0vmAPOVw3ksWJPMA9CGuG1iqIgkUj4g8iHOfAOM0mS/IhS
      1vhWk5h/TpT83yqpJ2jVCFaTCMNKRZYgwfIWsGB7wtraa4QpxK3GqxfPC35XVRWZTAbJZHJZ
      tC/v6OoUfHv5Wk5hRQgYekoAQGNSZTKZpuWHPZj9GYYBy7L8TK1UKuVnE8Vx9weXcoYoKg+7
      ltKGzyAs7CLYn6BZtVvRhX9OEDzHDRJJr8C/A74fYZw4qp/BdxpEO67PEmdYX4MV/Or1elem
      37BxYsyQVSgPa1NPRKAgRFGErusQRTE0O4hSinK5DE3T/MpjTC9g8eRxXj4/afglPCijBi02
      vAgU/M7+5TkTaxtfqSEuosQI1q5gacUw0Yh/ZhQnayWWtUNQ9wq2k90/OI6tEEYEgiDg777+
      RZyvXMBv/cSvgtJGdKmmab4/CYhfvjIIfi4wy1G9XvfDcULb1NWTYkCSJGiahkwm47vGebBk
      lGKx6Cdis+WPzx4LdpD3LjJuyX7rBsyMFzXxgIuFd9myynNoZuoNVrNoxcF5Th98VquqDkEr
      Tdizul0x+HGMUtyDz+hmzKeqs3iq/gqee+l5ZLPZ2MyuHXhxm28vM9cyy2CwD31ZARiYHTeT
      yaBcLvvLEP8iXddFpVLxuev58+fhui4mLkzi5PlTHT2PAAAhAKVL3yg72HwibfzPcymIcPE3
      z/ZAJOHivfjrCFCtVJBcCgHoFpRS2LYFRek+bTBs2tHAcc/1IIjx+Jtt26AAFH4fhJBntp2i
      HgWRCKhHIQgk9PzzsxMQByQcPv0a7r37np46uHgEV3MmygYJra8EAFxUjHO5nF8yha/MBVys
      MMDc69VqFYdPvYq/Ofk1kJgvMRzRr8yzXMwcnYG+I+cfKx6ZQ/KywRU8b/2g+sb8qvfFvFDC
      4NWDEOTod0ayBAQCzhUm/eocUYi70vCrVdCowXQOXdf91cAwjIvBk512slvwm2SEybussoBt
      25iencGAnkP2dQnla5q5dK9AXQoiChAkzgohEghS67o2GwbC6vdFyuowF+tIjmfanvtq4Tj+
      9oG/x81X3oAr91zZZJETRbFJZGlHAK18LWyrJyZi67oOTdMuJgFF7Q/QL7CGlkolfy8yRgiK
      ouDUqVP4o//3/8Hey/Ygq6TxxQvfgJzpfbUxx7Axe2wWCW4FKByeRWr3cM+ftRYoH5tF+vLV
      7YtdrCM5JEMbSrY/GQD1KLyKDWfRwseuvQ/nipN4ZvIlqKKK+649iB99z0ebaha1QlAXZIlV
      LKydrzzNM95VWwEY2DL1+HefwLaxcYyOjELTNN8kuW3bNvzgD9yHTCqNT/3aLyL7/vH+NCRE
      Our9OvPmAqUA6SDYjwgEYkaBmFHw5ZlvQlBEkHEVFoAvvf4vODN1Dp/++KdgmAaGBodi+yt0
      XfdzFljpnqhyN6tOAAz/dvgRnH76PO4YPYD77v2AHyDneR7u+8CH8OBD38Su7TtRmDKAXX1o
      Zv9i0NYF1oKYiSTAqVpQB+JvlsEgas3vWBxQ8WThJRz+3Z8BMgI+8+6fw+1vuR22baNWr+H5
      l17AO952ry9B8HnNLEWSbZJCKcXQ0BDy+fwys/iaEYBFbSykKvhG9TH8yxcegi5o2JoexUAq
      jy2ZEVSnSqiVqpBVCU4MObBTUEobFqNN9AwNXa13nEXOqajmKAAXv/bt/4qDz92Bq6+8Gn/7
      7FewQEt4/tTLUCUVdbOOH3vnRzG2ZauflXj69Gk8f+Q5nDl1Bp/5hV9BoVDAiRMnMD4+3lTF
      etV1AIb/+ld/iH+68K1QBZdSCnfSwD252/C9156Hcb3Y0rLQDeyqhbmT80hsz/rHyq8vQBvP
      90XpXm1Ujs0itco6AKUU9kwRQzeM9uX+nuUCpLHSBP0TZNrGHmzHb//8b+DsxBn82Vf/FAff
      +m7cf9/HkEwkl8zPNs6fPw9JkjA2NtaIVlgrAlgsFvC///Ev4Yx0YdlvlFIUn58GWfBw3V03
      4kxiuvl3r2Hfp5yZn7q0yaLTDnbFxNyphSYC8EwX1bNl6OO5FlduDFSOd6/QU9cDBNJg5pSC
      ehREEmMtmPWJRQxdNwxR6b8FilIKr2Djcn07Pnjg3fjoez4CTVXx4qEXYBgG7rj1raFOw3K5
      jKmpKQwPD6+dCJTP5vADV9yN/3H6H5f9ZsxU4Zke9AENU0fOwb1GgKhfbGr5zCJUTUDdEiBS
      F4kRHbOHF7Dl1rHYzw+TgARVBBG8xgvf4KvASgSR+sQCxFQKrmHAsxyIigSiqNCG2sv2ylAa
      tfMlpHfnV9CC9vDqLj644x34+P0/gt27dzdN9APX3xx5HSEE6XQaqVQKFy5cWDsCAID9u/bC
      OWJBSjabOctvLCB37QjcM3XMFxahOXnw/ESSCAybQBIpqAvUJ8tQNKBedaEnY3IeGvSdsuOA
      UzEhZzor6nQpQdBVeEvZeoIiQx/LoD5VBNCeAIhA4Bq9r17BQ6wR/Nrbfx4ffucHYznJvv/a
      9/HUoSdh1x188kd+wo9U3rp1a/9igeLguquvw4DX7DTxHA+CLGL+O+dhnChDzquQ080EouRU
      OHUXAmwQVYMnCEjtzMNZqMZ/eMT8T+zMwl6owC53n4C94SEQqAM6rLIFatuonStASMSz7BBJ
      AO0uli1e02rA//mBX401+T3Pw//3yAP4/e/8Zzxx9lFctfvqZUWQ13QFSKVSuGXrDXi4/LTf
      GUESIGoyFAD77r0Gk6n5ZddJ6QQG9/Hl+RovR8nGN79FiQiCLCK9fxDVk4VGW/TuYtPDYM0V
      4VEFsk5RmzEhUgu2KyG9ewCCtH5ELm2wEe+U2zfS8bWENGKB+gGv7uJX3/Yp3Hvb2yKjVBlc
      18X//cU/wnP1pyCZCv7gx/8IW0a3LDt3TQmAEIJhMY8tCzlMJOYgLU02fTwF4TIRk8mFjhwr
      HcHXoMPblbo8j+Krc9C35XsWUkAhwrNt2C6FqAjQBtIglrSuJn8v0A8CUKoCPnvw03jP2w7C
      tm28dvQ1JJNJTE1O4a677rr4bEpxfuIc/uKBP8fp7DGAAB+74RPQVM3fxYbHmhIAABy47ib8
      z8Nfh5i7aInSBhMtrugRKEDauIvSe/Iov76IxGWDPfNDiDLg2gThsZKXBryVZWsuwxYrj9//
      8d/AzvEd+KeHHsBXn/0XnJk9h3sHbsdvffY3AQDFUhEPPPzPmK1M45XCi8CQB4EIMCZr+PrC
      P+K/P/J5jORG8DPv+nncdO2Bi8lAvW1q5zhw0wHs/8puHLXPQVxR5GeniF4BGARZhDaio/rG
      LIgiIblzYEVPVPINwmaeeyIAqnppcX8AQJcJLWEoHZ/HZWMj+KsH/w4vTR1GLWVBVCVsFQZx
      /U3XwzRNPP3cU/jyC3+P0sACiExAhgH2cvUdGupKBQNiFg5M/Nl3/gSf2/l55LINU/ea+QEY
      XNfFgbfdAvU9w7Hj13sBY6GG4nQZ2tZ023Op56F8bBGJHRsnVLp8fBbpNQrsq59bwOitWyN/
      twp1yFkNXs2CJ0qgpg05owIgy0zThSMzGL5++b2sggFZVSBPukhs8bDlqnh9pR7F8OwYbth5
      E/Zs37P2K4BlWSiggmFzAJApBHl1QngbxBaP+xJBAPpo2bjUIA+mUJsoIRERFm1MF+FSEc5c
      EUIyifrEPDLXjUGQJMRVt5Rcw0zt7CaYOVOAfHIRue0ZiG3mDxEIZkcm8a3aJP7X89bamkGB
      Rv2W+w/+MLZND4C+WkfxyCwq56JrC/UKSlYDseIJq07VQuw3swmIuozabC3693QCbrHij6k+
      mkJ9uhJ6blsWRQjUHTlMli288vhZvPrYaZx7aQpmxWpxCQERCNSsuvYrgCRJ2H7FTjwiPQ8B
      SSQNFZ7tonK6gPRlnXsT6ZLr3lqsozbTGFQCcnEkl2InCAHMxRqUHZn2zpQN6hmmbhfL1rJu
      dtdvakc/W1QleJ4LKZOA5wCgKkTPaxJ/KKUwZ2sQ1fZTlAgEak6HmmuYwSuWi/kXLyCtClBk
      AYO78tDz4RtvrDkBAMDJ2VMXtXJdBnQZ1fOl2NdTSlGbLDecV4SAeh60wQQGrmodlKUOJFCc
      augBrYhAEAV49f6WJ+819m7ZhV84+JNgHg9/PaWUsz9RXFxoKUuVBrDk0Q3spUZ50zFtXEFp
      830oKEApvvjdr2Ie4fm+DStfa0tf9UwBek5H+srO9RhREZHYmYMLoGq7mD82jwyAy94y7r9n
      o2iiMltdHwSwe3gXnjj1YhOXpZ4H13AgahI810P59CKcqt2g9rwOIhKYC/UGdxYJEmMZJLak
      ACF+3R5tKAFBElCYLEJrkcZnLdahjWfhmQ6shRrULa0JZj0gm8nizre+tevrFUVpKnzLEFUv
      iE9JfPy5J7GQrqLboiNO1YIkibEzy1pBkEXoW9IoTZXxxtPnsOeOHaCUYqA+jBFnfH0QgETF
      ZWJGdu8wqhNFODUbgiQgvTPvJ03UZ6sQFRH6/tSKJiIhBEpWA84WWp8nENgLNVDXAREJ3KoF
      KbV2lrM4WIkGJcty17V5KKX45kuPgKa6Vy8pAKtixsoHjgNCGgyydnwOlFIYCyY+c/AXsH/f
      /rVXggFgtjwPIjZ3VFREZC4bwMDVo8jtG27KGNKHkw0ltgeDU50sQcy3nsza1jT08QRSeweQ
      2JWDtRCt4F0KYLu7hCFqzPmV4efv+2lsrwx1p4MAkJMKBF2GU+2t2Gku1FCaqmCfdDWuuvIq
      /PMD/7w+CKBq19ZMpKgv1GJFfop6Y/tOQRIgiLTrl7taWIkVjVVSA5onfNx3tGVkFP/xQz+3
      sgnsepBTvS2GoO4eBJkX8ImDn8Rnf+83sGfv3vUhAk2XZvtYoy4adtmE10XiRmJnFtXTRejb
      2lupnJoFpxS9qVtbtJp0/BwPnOZlhjp6DKUU8/PzyGaz/m6UbJsox3GQyWTaFq1tytJaYTwQ
      dfoQT5TVcIV8DY6dPI5pbwFX779qfRDA8dmTQH+y6FrCLBqQ0p1zGUERQW0HrmFD1FpPCnO6
      DCW/cmXOn+wx026H8p0RAEsmn52dhaZpKJfLTdtZVSoV5HK52DV6Vow+CATXilfgnbe+A3/2
      6F/jp9/xiUZB5t4/pjOYponFehFJZNuf3ENYZROV+Rr0nd09N3l5DsZUFdTRQxViu2TAXqwB
      ggApFb3RXr8gyGLHSqQkSdi6dau/DSkrJ9hu9/YgetFX6tH2/hfPgVny4Bl1KEMZOGUDlABa
      bnlYvFu08UP3fhC/863/hn3Z3Tj49ncBWAd+gIWFBUiJ3sXcxwGlFJXzRWjb2scBRUHUZCR2
      ZFA5XYZnuyACgTVXASQB8CjskoHcNcNYeP4CEmuRY9whFzYMwy9Clc/nUa/X/e2FWinF/UJq
      dx4Lr81AzWpIbYtgUoIIs1AGHBtUqMI1KVzHDiWAFNXxx4/9JUzNwQ/fcZ9/fM0JYH5hHkRd
      fQXAMmxobb27jZRL6rqglDQKN/GXCAQC8QDXBhEFpPcNgMhCI9B06d76WCoy+6yfoIi3QyQD
      q5/D7/XGNjRnxWV1XW/a+KSfEGQRmX1DMBfqmD98Afm9wxCW6WsExLVBkgmYkwXo+8bgXgg3
      addzDurUgTxHcNuNb/GPrzkBLC4udpF1RVE5uwjHJshsT6JwsgA5k0B6LH7l5uRgEtUzxYYI
      FPkyKernKnBtE6IuQ0jo0AYuijuEECTDkr/5otLi2jnMeOdUu02r+c3kWFVvtmkJO97v+Kww
      qAM65LSC0tlF5K5YrtcomQSErA7ieVB1AWSghYeZABIkfzN3YB0QQLVW7bjmj1s1QCUV6ZyH
      ymQNcj4NWqsBiEcAhBCkd+RQL9RjFccSdBmJ8QxqExVgYH07wLpFLhcuprHSgmzv37WAIIuQ
      8zoWXp1BZnceEmd4UIcb71xe8uSr2WiTtud4+MQdH2vKC15zP0DJKHd8DREIqOs16vmLBJUT
      M3Dczs2ZXgxTHREF0LqN6ukCpBDZciNgJZzbcRy/cndccaofULJaI0312HzXJlMH+GUAACAA
      SURBVFa7aOLtB+5qOrbmK8Cp2bMdXyPoKmTZRL1GkN6SgDqYBDUseEsbM8SF19aeKEDfnkLc
      lWV94eL2T1FbRHWCdiLUaoCIAsS0AtewISU6N18TgcAO7krZq8Z1A8/z8OrU6yAdJ4UT6Fuy
      fpUaRQaQWHNaDsXaZf42c2uee/dblqeU4tSZUyifXIDYYwufMV+DltW6IoABZLB9fFvTsTWd
      NadOn8JLp76P5J6NX4pwPSK4AqxkLy7LsiDLcuwdHF88exji1t6/V0VTUZupQmul7EbgHXvu
      gq43i7FrSgCPPvs4klesrgNsvcMzLbiuAKdQgTaagjlfh5jUQG0bclZfdYcUA6XU39qW7evc
      6rlj2RHgHA0xXa4MgqTAKtS6ihS9fHjXsmNrRgCU0kYIxDqPq19tEEmAUzDg1S2YiwYEXYU9
      X4SQSHb0wienJvGvDz3Y+lmcvdZ3VfChFoEDZEmsEkUR+/ddiW3j2yLbdNn4LuBQf0QtWRG7
      Iu6ZytyyY2tGAJVKBU+fewFYWaWRSw5EFEFrVUjDeZjnF5DaNwqvKEGJUZiWx6szb+D3X/ir
      PrUSUB8m+Mh1B3H39bfjyVeeAQFBQtPxI+/9CFRVxXPHXgZR+5NHbXVZe/T16RPLVo41IwBd
      17F/eA9ecY+tVRPWKQjkgQyktAIylgURCeTB5LrbvslMUXzxjQfxpUPfgMcKErsUf/vdr+Hg
      VXfj0MTRvnm/hYyOucPTyO7KQe4gMenMwvll1eHWjABEUcTtu27GKyc2CSAIeanGqbLkd+hl
      fdJegggENCVdnOcSQT0PfP3Md7CrmIOj9qfKtpzVQD0VMy9OYWBraik/GRfznSlnfeM+jyaT
      y2Ka1owACCG4UJxZq8dvoo8QFBFnBkuwz9b7VmaeCATK9hzGxtK4/KZ4GykOzY4v0x3W1BO8
      Z+xyeM76zqzaRHcgAgGEuF5oB/WzVdTPzqPeop5QEGJCwfETC5h8fTbW+dPG1LKd6dfUDPru
      ew7i7x78Gg6dPR9xBg14kqIH07GLEJMtiCnkUmOuAqcSP22POh5A0LwVUxNDIcuOWYsGtOH+
      7payXiHqMqy5qh+v0wqUevA8AlRN0KFEbOOgMJjEkRcmMLYvRvmULTa+9cRD+OC7PuQfWlMC
      0DUNQ4mroOl7V2yzLs49AW1HZ6mHuZ2dTUxjpgJJF6B04ISpvLHQ0TPWC5Zx7qU9pTp5T8pQ
      ErXTi1BjzE3PdEF0EdS0O7LxU0qRTcdThEVZxOHJV/AB2thcY2qtt0gihOBDb78JT/3104C4
      0qb0P+hgvVli+gljYhFQNFDbWqr2LEAZTkPS4ps2CSGgdpwIUgmpvd15ja3pCq57/77Y5z97
      5ml87i8/j7JVxT+98s21jwa9647b4FTiyXCbWEUoMohr+9sdNXbm7JwFCJoEc76DratiwLMc
      uDNlaCUD1+4fhhZzBQAAhzr4yyNfwVfOPgR3YB3kBFerVUBY82ZsIgBCCNShBApH56HlVd/M
      2Cn08Sxq5wpQB3tQGGAJ4mIdb//w1ZC1LucNJ8qt+cx78ZXDkJIbyR385hCEtCXFNX/tlpXd
      SCCNDa57CEeVULhQxvCuLowLgX1R1pwApFXdFWb1Iec01M4vxaCE7crqUaBmQx9OLldjuEK0
      nULVBDiT0SUfPduFpynQRrsvDBAHhJBGUlGPyhwCADQJlYV6VwRAG43yv68pAVBK8e1nX2vs
      FbRR0OE7VIcSUIeirUae7YLO15GPY8brIZyajdnXlweH9QO9TqRRqxZ2Xr/ClWkJa0oA0zMz
      eOiFkyDaxtl6aBOdg0gCykemIeqSv5rxJdoJIX44Ktu8goiNlQOggNdgllI+CdWwcfWBsZ5t
      p7WmBPDEU8/CUXJvEqn6zQt9WwbOFDB43cq49uLrcxga0DF6+UoYZrMSsKayx03XXwvNC98a
      ZxN9xipyHSIIcAmBMb+yqtqyLmHfrTtanlOdq6HaQfXuNV0Bdl+2E3/6K/fjk7//ZVBlIyae
      9wBruPyZ87W+JiQFdfeFV2ew5Y4dXYsvhLbfqqp4vgSqAMkIb33QkrvmnuBbDtyAT3/0DP7w
      6y8CYm/LYW8MrB0FyBkFymCXpV4oX+4u3Ey17Ghew/yRGciqiFwXSn9iWxbTx+ew48axjq+N
      wpqbQQkh+LH73o0/+fIjMMWRtW5OS1xqe7sLqgQpubpMR0rIqL8x35VZlIgCpueqGLfdyO1Q
      k8NJOKaBs4dmsO3aYQhhz+COrQv7o6qqGBvqrz2aB3VsmAUTrmHBLpugtLEv1UqrhTjVxp5a
      TtlE/VwBlRPzcKzNcG8e1lwNub1DXZtGnQEdhx4/FVnULDuexuDuYey4biR88gewLgiAUorZ
      wipuO2RZqE/X4JTq8AwbVtmGtVhfsTRiLTb6YM0b0LakICYVSEp/hph6FJ7jgVIKz3HXpG5n
      N1BGkiidWey6vUQQUE8rOPToCbhd5JKYhtOkR6wLAhAEATft7Z1cFwfqoAZz3oCQ1uEuFkEU
      ZeXSeDB9oW+gKB2fQW2qgtr5RVTOFVE82Xqjv/UCQgjk0TRmX5iEa3aX3C6oEmpZDadfnOjo
      OkopCoX6+iMAALhq91hXwVYMIknHzy6TZEgpFXJGgSAJIKIEdShm6l4LKtGGdFRPLkDMaYBA
      el4V7SI8EElDansGrglkLhsAEbsYuzVaNERdBhIyPLP7GCEiEFTLJs59/wLMavSu8E3XEIJs
      Rmva323dEMB9774HQ0r3e2kl89fDPj4IN0bJDKIokDUB+ngeokSgb8t1VFM0CoKuIrV7AGpO
      BRFFKH3KhwUEUNdE6XQBUlJA4fgcCPpTgiQI17Dh1iy4ho3auQLcFjvCt8UKhpwIBEVZwNmq
      iRcePh5bpErn9abgvHVDAONjW/GHn/4RKF53ugARBKRyN8N5Y6yjNMeNCYLs3hFkduWQ2JpD
      bs8QMrtWp8KetViDMVeDOVWCMpzq3o3QA51FzmoQdRmpmFtQUUoxcbYAQV1H5dEZCCG46fpr
      8Ve/fj8SXucl0xlSg9cD5/bCKXRfB3MT0bAXayCSCHVrBtZUAWYhnvgRF9Wz8yifK8OaK2Lu
      0CzKb8yieGwW1elwxmjOVbH9ynjm86mjsyjCW586ANAgghuuuwaf+tBNsKsFUM8FjCI8xwL1
      PHiuE2tS67krIC/eDvOkt/6JYE0DoTofm+TuIWgDKlzTBWQZaq5LP0LEo4ksg1AXlkGhpiVQ
      QUJmzxC8Wrh4TFwPWoz9hOfPLuLFVyYg5Zsdf+uKABh2bhvD1jSBU5zCXVckYU4cQvnU86if
      ezn2PSQtjYR0N8wT0vongrVCF8MiajIETYGS1ZDYlm2ukNGDR4uaBDUrQ1AUSAkZsk5QemMe
      SoSfSB5J4eXnzmHu1ELL9zxzehHycBJOxYJrNBipOVVbe09wGO6++y58+cp9+Ozv/TecPn0G
      2o6boHeRMyAqCSSFO1F5/Sloe8yl8Nr1hZjb/l56oDR09VPzjRge3n7WKliDEAIMJ3Hk6Ay2
      zlSx59bwgr3FCxXkrGsgQsPIzqtw/Pi/4q23/tz6JAAAGB0ZwQ/cdRueevkoqqcLWHC7C5YT
      JAXp9F2ovPY9KHtLPS/XvWFxicWgq2MZzNRskO+dw57bmiNGXcfDluH3Y8dV7/KJY9ueAyCC
      sD5FIIZrr9mPh16ewOzEGXhOtLJlFSdRvnACjmmhOnEYZrW5CgERRKQGboN9YiSWmTQab0pe
      3Uf0lgqlhIxy2WwShayajYmXqyCkuaQ6WaoRum5XAADYc/lupBSCevrqlufZhoH0lstBqQMo
      GTi1BajJ5ioEhAhIZm9E9eRh0O3nIKXXZ8HZNwtIn/ZOdpecXIvni0jkdVw4bGBs/GchKeE+
      mXVNAJIk4ePvux1//m+vAYIcaesVJQG1ufMQ4MC1bXi2CUq3L7NRE0KQyl+L+jkVzrY3IGU6
      JAIK2AUD1I25EsR5wR4FahasUtDKQWJd35EdnjvZNR24pgOn1oEZcyULYEBBXdlKHI2q4+L4
      Y2cxkPs4pk9Ow6i/AnvIiCQAYhgGVdX1u/et67p48FuP4l+ffBmPvVELJYJGQJgJIsiNpY16
      ABEjJwelFEbpFLD1dUjZ+DygPlFEflCHqK1k9aBNHykFLhy5AGUoTt2cgMrMvoZp0vxvANy6
      A6/u+tWaKSio10EJQnTOsKOKXACANV/F2Ft3QFR7y4OpR1E+toi3XPt/IDO0tW3Y9bpeAYDG
      PgLvO3gviqUSHnvj+wh7DYQQiDJH4aS1oksIgZ7dDeOCCBuvQo5JBIQAidE05B7G0FOPQr1Q
      hjbeX0+uUzHhlG2oQ+sk887tX5i4KGrQko2Ns9nknzt3HJ7nQktm4LkuPNeB5znrnwAY/vyr
      3wYRe1MKg0HL7IQxI8L2DkHOX9o6gWd78GZcuPXlIg/l/t90jedA3p5om4bYVXscD4uvzSzz
      I3QjZUmqhOyeIVCP4uzXjmF45CqcevXxppvNLByCNTIHb9pt8NClvw1BAIQQbNsyjIU+lBDV
      UuMw50RYzotQhttwdrqyXdfXEsQA7v/455EZjJ919+ozD+N78/8IIvTedCzoMsRBtScZaeZ0
      BXbZhOd4SF2Vg3iFgWk82UxNQwSKsFwPWNdmUB6f+5WfxLhu9GECEqiprZAKB2BdWB5E59ku
      jDOLMM4WAJdCVDYEzwiFKIoQRSn2HxH75zOREgrcut2oAbSCP2q7kEUBUkqBMVuFtiW19JsA
      InJ/EavYhiGA8fExfP5X/j1obb4v91dTWyCXb4Y12WydcCoWhi/LY+zaUQxsy0DsiyNtNVYV
      0nEFiH76ygRNgltbuSXILpowigZmX5lC+XwBUjr+iuJWjY1DAACwf98e/NIP3wnP7Y8JTUmN
      QKndCmvyYry4lJRh12zISQXpbRt7U2/ShyltF6qonivAdSicqgm7VI+1SouK1JOiuepIEsk9
      gxB0Gfp4pqNcYzGpbSwCAICP/9D78dFbRlt6hlcCOTkIpX4bzImGlYJIIpwuU/fiY5XiEjoO
      3m93vgerZCMxloI5XYY5XYRddeM/JyKxvVN4jofa2QJSl3VeLHfDEYCmafjsL/4EfvBA/4rJ
      yokcVOt2mBONgC27T06bVUUXc62rZJdOJrXQm+lXeX0O6cvzXVWa2HAEAACyLON9994O1eq+
      ukDbZ2gZaPYdMM94sO1+Vl1YPatS5xOk3fkClIyM2mQF6mga6mgWSkaK7ynv0QpAJAHacHcb
      cGxYk8ZttxzAz//QGfzBPx/pW3k/SU1BN++G63y7L/dfbfS6TDkAyLkkZLa9l9RhREEU+6Ue
      6tM16KNJVM8sQlCVhnUnpPlu3Ub9XBGiKABBSw9XuI667lIkMLkYZbJR/ABhIIQgn02j3xxU
      VHS4tVFQzwER402g2oUy9NEUahMFmBUHmSsGIXWZOMLDnK9CySfgGg7cqgVlKAl7tgJpKBVD
      mmDenw7QZ9UkyjTpFOtwyha84QQgSRDgwnUoJLn5fLduo/DiFPI372hUmogA9SiMqQISIRtq
      bEgRiEFXJNA+WYQYCCGQ1RuweDRenjJ1HdSmSjDKDhLjOYiqADEm4bSDPV+BXTJhFQ2YMyW4
      lgNjohA/qqBTMygRer69URMieJc5VwN1bZgLJqy5EoxFJ3QTUWOmAn0s13LyAw0CoF74IG3Y
      FQAA7nn73fjZsxewWKpheqGI4+fmUKw7KCEN0sNdZwRJgTm/BXa5CLmNndmYKsITBFSnyqBV
      AfporrXo0cECJmYTcIp1QJEg5zWYE0WIqXilVwg6lxT33ngXHGLi6Vf+HrAAslXsafAajdAB
      5KE0klkVdslE8rIhCKDwbApRIU3XOkULqT0xPNuUQlDD/TcbmgAkScLP/of7ATRCFFzXRa1e
      x69/7i/wyLHwyNFuIUq7UXjjKQzf2MbRomoYvm4AxlwV9ZkySNmFuDsPsaUIFI8KJF2GkJBg
      WYAky3BgQk4qsSd2p+MhShKuOXAQV177doAQfOmvPw0rU4cnu43SIq4Hoohdj3MUV1ZyDaKW
      s9HEXTo8DWUwHStOyalaECN2lNzQBAAAr776Gl4//gZM28Hrx0/g4L134/f+00/h81/4Eh59
      8Tg0VcaZigKygq1YPdcB0Z/B0PWZtufqS9YIfTgFfbi3kZcslFkPfI+HLnQAMBGw8Zz7/8Pn
      UVqYRmFuEjOzJ+BUTRye+RaknAoiLW2G53q+MsoTRmOfYYC6HgRpiRt3qb7ZJQOu4UKNFUIO
      uDUL2mh4ZvGGJ4CrrtqPdCaDU2fP49YDN2Bs61Zomobf/PRP4TcohWmaOPjJ38R0TYCkdTch
      6wtnsfXtWl+iIlcTK10RJVnGwOg2DIxuw27cCkop9CdzkDUVZ46/iPnCORBISGRyKFdm4W5x
      IMwLyOgj2DKwF8XyBWwZ3YfDZ/8N3mD34dDGZAWpPfH9QJ7tRuoJG54AAGD7tnFs3za+7Dgh
      BKqq4rd+4v2ghODX/uwbqCDVeV16gQB9rXK+Xj3B7W5HcNOdHwIAXHvzu1EpzsM2DeRHxmGb
      dRx59mHsf+c9UBPNY753/q145rv/gOPuk7BLJqSEDBLTSkZdD5WTC0jsbOwTVjk+DWXrANxC
      CZ4nwq3bkHM69NGLzI7abiTzuiQIoBWeeupp5AdyuPH66/DVK3bjp//LF3CmFF9updSDoJyP
      lCFXitUMru5HLBA/junckP9Z0RK48e4Phl6TGRzFuz74C7hl5iMoLc7iwcf/ANoV8VZnz3Yh
      JVV/QosZHW65DggiBEEE0b1ljrhWxLWhzaBhePjbj8A0Tf/7jTfegGPHTwBorBR/83s/hyvy
      8dm551hIbCttfPGni2jQfiM/sg07990I0sE0FDUZUuJisTNCBMCxISQUgHqgIHDrwbD2aDZz
      ya0A77j3niauVCwW8SM/9GH/+/DwEH7rpz+M+3/7i5C09rvSCKKM6qSB7GXeuiys1Qn64Qnu
      BazFOpyzlu+d9UVC1lzCCBh+HjXrizaSArC0euQQjpAwFs9y4Hnk0iOA4Es+8tpRHHntGH7g
      3rf5x669ej8EqwLEIAAQAcS+A8bia9Bb7Pi+EbBeCUAb0KHuDIxtYM5SSgGPgroUtVPxNwOh
      lIYWQzPnqvDcS3AFCOLet78NltUcOi1JEm7fP4ZnzjmgngPquqCuCYnakKgDXRExkk9iKJ/B
      5ORJnNvyOrSB9ibQ9Y31JwL5EAUIEZvehUGQBHi2G+saz1quAFNKYc1WL80VIAhBEKBpzfZy
      Qgh+8RMfxmNPP4ehXBojg3kkU0nkczmMjo4CaJRjoZTiwUe/iT95/GSjvMYGrye4XleATkFk
      AW7NhpBtTwDUdiEEDRiuA23bICTFu/QJIApXX3Ultm8bg2E0F6QSBAGyLKNSaexg/9573oN7
      b78H33r8YXzn2JM4Wj4BeUTr8WTqvy2ILP13KSCxPQuzUG/pKWZwLQeS3jzNiSRDbVhR37wE
      IAgCEokETLO5lmS9XgfQ4JaUUnieB03T8IF3vR8feNf7MTk1iYeefhiPnXgKM9IipIyyapzV
      NR143WanmetXBIqznSmPwisXkH/LzljnujUbSi7aY7zuK8P1E5RS1Ot1lEqlpuOCIEDg4ouF
      QKyx53nwPA+vvv4aHn7pO3jy9DOwBwBB7TwuxnM9nH9pAtq2hgmDerRpEzce8gUN77rnl5a1
      Jw4EScLg1h3rUgx67skv4zXrW01bF0WhPlWGU3WhjsbbV7p2voDkrkzkPgZvagIAAMdxMDc3
      t+w4IwJJkpBIJGAYBhynwX0ZARBCQAiBZVl46rmn8chrT+CF6UNQtmixTaae6+H8i5PQtjcS
      7qV5F7/zoV+GojSC7pjYQpeee+TsHLwdt0KULp3F2/Nc/M0//CTkna0DDZ2ajcL3Z5DePxqb
      kGvnFhsEEKEwXzqjuAIIggAvEJnIxCJVVaEoCmRZhmmaUBQFpmmiVmvsWeV5HkRRxJ1veSvu
      vv0ulMolfPupR/Do8e/ilDUBeTDGBm7cz5Ig4eYDN0OWZb9t7HpKKW68wcLn/+HfkNtzix+k
      1k/UC1N47blnkN95JVSJIKHJUPI7kGgTg98JCAgGEztRwlTL84ypMrStnVV+ANDwDEc0902/
      AlBKYRgGisVi03G2AmQyGZ8bM3ieB8MwYFkWHMfxLUbB68+cO4PHXnwS5XqLZBraqGFPZAEA
      QVLR8ckf/vf+z4QQ//mO09jax7JsPPDIU1jM7lsVIjh76HmMXXczCidfxoVFG1cfuKXn6vSp
      48/iyam/jFw5KaWYe/IsMteNd+SVr50vQN+aiKxA96ZfAVjAnKIoTf6CVlyGKdC6rmNhYcFX
      mHl4noft49vx78Z/bEXto5TCtm2k02lUKhVQSiFJIn7wnXfinx/+LmZTl0PVu0sI77AhqFZN
      qIIL16WQepTlxjA8fDmcww7kEWXpcSzU4eLYSkkVdrG+1J6mfwBQSAllWeVuQRKadCrPcuE5
      rn/hm54AgIsT2nEcXxTyPA+CIKBUKmFwcDCyLPtqKJWUUlSrVVBKmybGRw7eja88+B1MVseQ
      GRrt2/NHdu+FCIrhXfugKDJcx4Ek9raYsOc58KgDYGm1K1TgSjq0tITS9yeh7x5FclcWnh2S
      okkAUILa+SJSVww1/SQozVUqdlRH8KG33ed/3ySAJaiqCk3TfNmemUAZB4qa6Pyk7BdYtlsQ
      nufhh997L149egzf/P4ryF52XV8IUks1vOCJdMNS1Y9JU6sXIOeXi+LUMgFVhTlbRfqy6Mp8
      1kINysDyUBUiC6CuC70ooCpamFBmIagirr7quoaY29NebGAQQiAFLCuMCIKhFPw1QS9zvxBF
      aK7rYt+ey/G+68dRmr+wKm3pB04ff6E5ZocC9bMFVCeqUAcSgOdGugup60HOaXCqpj9Onu02
      fCa0sTnIe/ffC1Jx4WnA4SOH8KUv/A+8cfT1zRWAh6ZpvnLLI4rDMwIwDAO2vbyydCdgL64b
      Gz8A7LnicuSOPg6PblmXtv52sF2jyVIjD6SRH7ho69eGwwMRM7aOn7nt4/jy9x7AIXEBwpyN
      H731A7jrhttg2TbmSgsYy49ibHwMEkQcmXwdVw7vwC0Hb0atWt0kAB6EEMiyvIwAmPUlbGIx
      X8FKCIDn7t3qFZRSXDag4LjrbjgfAaUUnmkDXSymo0Ie2WQa14zsQ2KK4H3vei/+3Y99LHQM
      f333ZyAulXxnv7/pzaBBmKaJxcXFpmOCICCbzUJRwsMeLMvC4mL3ZRqD4g1zsHWKM+fO458O
      F5DfuiPyHNdxUJ6bhFOvQNBS0FIZCIIILRnPs7pSmPUqZEWF57qQlMa8mzl5BE9+749RGW3o
      OURp9n3A9Bp/GWnZuFBKQW0PIMD15HIcnngd//I7X8SunbtitWdjsYpVgCzL0DStKUbI8zyU
      y2Ukk0lomrZMMZZlGaqqLgusW21ctnMHMs8fXdohczkBea4LnHoK77vpaoxt3Y1CoYi5xUXM
      zRfw4mkZw7v29b2NRrWMuZcfRm5oC4TdN2Nh8jTI4hl86NZ345ZrbgIBwbdfeQIPHX0MRobC
      NWx84vL74NkuHjz2KBaHzOb9fgkBWdIdXi4cwydu/0Ekk/HNwpsrQAgaziYLlUqlSbQhhCCZ
      TELXddi2DVW96OV1XRfz8/PLPMqdPJM3cQqC0NWK4jgOvvzgY6gM7PM3imOYeP1lfOYjdyxT
      9iVJwrcefRKHCjJy2/Z01f64qJULGDPP4ZXvPYF9+/bhwx98P7Zv37aMYGv1Op753tMoVEu4
      fOduPPDIN/Bj7/0ovvDA3+B/XXgCgnZRYaaUQl0AFF3F5z/2O7j5+pt8UacdNgmgBSilKJfL
      vmmUIZlM+voCGzu2SrBo0k6fw092Fv7QrUglCAK+8/TzeHWyBDJ8BfRUBpRS1I59F5+6/wPL
      TKqM4I6dOI1/PXwBmW39WwlqpUVMPPkVfOqTP47rr7+u4+sf++7j+NQffQbeXh2SS5C0VCw4
      Jfzuvb+MR48/jUdPP4Ot+jC+8It/hJ3b20eMvikIgDm1ugGlFMVisUm8kSQJ2WwWruv6ZlDD
      MFCv130FutXk5Tk9+x4kAAZe3OqGIJ596RCePFUBHAM/9b7bkEqG2Mo5neOVI0fxxIyCZHag
      42e1g+e5SM8cwofecQe2b9/e1T0opZiamsLf/ds/YP/Ofbjrxjvwzce/hQ8f/CBUVcVXvvE1
      /MUj/xO/+aP/EXe/5c6293tTEMBK4XkeCoWCP7kJIUgkEkgmk/5krdfrsG0bhBDU6/WWolBQ
      3GHHGMKItVsCEEURtXodtWoNAwP50JglHrZt47//0+PIXnGg42e1QmVxDjlrBv/bD72zIxm9
      U5im6Sc1xcEmAcSE4zgolUpNJtJEIoFUKrVMXi+VSi1FoTCrT5QViP+3117nKGvTY8+8gNec
      UaiJ7irpUUrxzNe/gP379uLCYgWauYD773sP3nrH7V2vxP3CJgF0AMuysLCw4H8XBAHJZBKJ
      RKJpInmeh2Kx2FSfiEecicwmCj9h+hF2EUYEhBD8X196CAN7b+n4fpRSTBx9CVa1iHfuH8bI
      8BDuvPPOdTfxGdZnq9YBPM9bNtmCE8XzPFSr1WVKJQujXgljYc9n/0ZN/pV6faMI6trxDKrF
      zrakpZSisjADoXAWQ+YE3nHvPbj77rvX7eQHNgmgI7DguOAxlinGQxAEpFKpUFk0rqOL9w5H
      TdS4K0InhEIpxbvfdjt2uhMwqqX2Fyxh4fxJHH7gTzGWEvC7/+W3kc93vmvjamOTACLAssRM
      04Rt2344hCguz/sNS4hhwXX5fB4DAwNIpzv3tPYypqcV0YWtdp7n4b6D96B65vuxiOzEK88A
      M0dx24Eb8J9++dMbJh5pkwBaQBAEOI6DxcVFLC4u+umPwSW9Wq3CsqxQXqpMUQAACAxJREFU
      IhAEAYqiQJKkrkMceoF2kzgq0vST778T9RPPNrzILbD72ltx8o3j+NjH7l/XIk8QG6elawBm
      7sxkMn5SCpP3+ZfseR4WFxcjw6YBNBFA2CoS9mwgvojTDu3uE9WefC6L971lPxanz0deO33m
      OM4efRnbh9LYvm3bitq52tgkgDZgKZOapvmTnk2msJUgyv7Pss7Y5A+WXgmileLbTR/a+RF4
      hTuIwYEB0Hox5KoG5ifP4NxzD+Heu9s7ntYbNgkgBgghSKfTyOVyTUptcAKz+KEoa00ymUQ+
      n4eu6z4RxEEviCDuPcIIL51OQXajA/323/YODI5sQTLV2y2hVgObBBATTHRJp9NIpVJIpVJ+
      TBAPwzBgGEZoCiOvE7B4n7jWoG6JoFsPcvCaD9y6F/NTZ6POxt49V8DoIg5qrbFJAB2CiTKJ
      RMKvJsGDlUyp1WqRE49Zh7LZbJNu0IoYmIgSJaaEoZdK9949lwPFyYjnCCgjAXWV0kN7iU0C
      WAEIIchms8tWAtM0W8YDsZVAlmXour7i6M+oZ6yU+/NOONd18b6b96D6xrOoLM4uu8ZR0rji
      iv6GUvcDm6EQPQCr3VMqlZqcYplMBolE9KYanuf58UWMu8dFHO4eRgTdEAT/LFmWcejVo3j2
      1VMoaOOQtAQUVYOkqNhSPY4f/8H3bhgfALBJAD0DS6Lh0ylZnFBUcoZlWX5FOp4A4kzSuOJN
      q/Na6Ra8GTZ4D+bkO3HiBKrVGqYWinjhgoP5Y8/jc5/9NAYHB9u2a71gkwB6CNd1USgU/Cwy
      XdeRTqcjrT2O46BarcK27aawhzirQbcEwEeutosxirp/8DdRFDE9PY1MJoutWzdWVYpNHaDH
      4Ll9WImV4LmpVAqJRAKyLMdShjtFWIiD53lwXbelQt3KLxC8r+u6GBoaQiazOon1vcQmAfQY
      QXm7XC63VIZFUfRXik7No3HRieUoDvziU0v3lSQpNCx8I2CTAHoIQsiyyFDXddtmiPE+BlaN
      Oo5ZtJNJ3Y0ZNc41LDeaWbM2GjZei9c5wiYBk/PbgSmXmqZBkqS24RLBa/vNfRkx9HpFWUts
      EkAPQQhBKpVaVnakU/MmP/nbxQsFP/c6hJpXlIMrAvvbaGIPj00C6CGYOJBKpZqK5vL2+Dic
      UxRFZLNZX6xoRQRBbsycbL1aEaLylfljcRPQ1yM2K8P1GIIg+CESkiT5df0NwwAhxC+o1apw
      E9MJEolEk9jRCYKTv1dRpQx8ZKxt2xuWCDYJoA9gXDKZTEJRFJRKJdRqtaZyiywitBUEQUA6
      nYYsyygUCl17cYGVEwDvEGOiEH//jYpNEaiPYCIRC3pjtvdKpRKaRxx1D03TWu5DECWj87+v
      FLyO0Y/qFGuFTQLoMxgRsDwA4GI1ibhiDVOuW4lNUY4rNll5vWAlVfLCEvU38iqwSQCrBGbn
      Z7KyaZrLdqlvBUmSkMvlYhd9DRLEyy+/jFKphJMnT2JiYsJ30LFdLsvlMgghKBaLfl0joHly
      B+95KRDApg6wihAEwa8sDXRmuyeksV1qMplEpVLp2LSaTqdRq9UgSRIqlQqq1apPTLquwzAM
      FAoFDA8P4+zZs8hkMpifn18W2BYMkuOPbURsrgCrDFVVIctyV4WzmGLdShziFVT+OlmWUavV
      fMXctm1kMhkIggDbtv2dbkqlEgRBQLlcXpbsw8QoQRD86hj8Rt4bEZvRoKuMXogNlFLU63Vf
      jAkTo4JyfnBrIH4HTHact+zwRMQ+B30SbAXL5/OxRbP1hk0RaJXRK+eUruuwLAuWZYUW5gp6
      aF3X9Yt9MUSJUe30Ej6keqOvAJsi0AYFM49G6RFhk5hfLTrJKOPP451ybKXYyCbRTQLYwJAk
      qWWRrXb2+nb5B1GJMkHE9WmsR2wSwAYG48CdrALsOt6CE3YtH/DW6noATRltGw2bBLCBEJxk
      zKza7powy1DwXmF5v8GUyaB3mX23bTu0Nup6QDCaNfi3qQRvIAQ5NSHED5irVqsAwrk+P4Gj
      SqXEEYN4YgquACwgbq0VYr6vruuiVqs11XNl5lvHcaCq6iYBXArodEvVMO4f9jns/GBoNEOc
      hJ9+gVIKx3F8QmQxV0FCZV5v1gfXdTcJYKODhSO3I4C4FR6irgsTg9jvgiCEmmJXA67rolKp
      +HuyRa1wDPxvnudtEsBGB/MFBBEnTCHu5GcI8zXwSrhhGKueGB8sQxmMXeKPBduvquqmEryR
      QWljx5pgCiZDOyLgUxrDlGD+L5iiGVwRWNIP20lntRAk/qDizh/jkUwmGyXvV6WVm+gLXNfF
      wsJC0ybeYWAVqfmyK0AzZ2zlM+CJgCeUIBG4rotSqdRx9tpK0A2x6bqOVCoFx3E2CWAjg1k1
      wqxDfOgyO48RQDB5xnXdtoWywp4dRkCMCMLKw/cDnSbnsDASURQb1Tf62LZN9BksOrRYLC6z
      zvDfWe5Bu3sBrTlqmKgUJgpZloVqtepvIt4PRPk32oEQ4ouMhJDNFWAjg8UD8c4wNvmD3t44
      4BPw2WoQjBiNcy8WrdrvVaBarXYUhsH8Jnzk6iYBbHCwZJdgYFxcsSDs/FbOtODnqHgiQpZX
      yes1Og3BCNuHYZMALgHwRACEmyujrmvF0XkrEf89aD3ilWN+9TBNsy8KMfN9OI7TUVYds5o1
      5TSUy2W6UWu6bKIZbGKYptlkjmyVhNOKOKKOR4lYYeHWqqq2jVfqFI7joFKpdCxiEdJIK01x
      m/n9/9KTd4pgJ0OSAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
